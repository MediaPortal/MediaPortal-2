<ScriptableScraper>
  <details>
    <!-- These details are for display purposes only. -->
    <name>imdb.com</name>
    <author>John Conrad (fforde), Armand Pondman (armandp), Ron (RoChess)</author>
    <description>This script pulls data from IMDb.</description>

    <!-- 
    These fields uniquely identify the script. The ID should never 
    change and should be unique (no other script should use this ID). With
    new versions of the script the version numbers / published date should change. 
    EVEN FOR MINOR CHANGES, you should change the version number if you are going to
    distribute it to anyone but internal testers. The point number 
    is for minor bug fix releases. Use it.
    -->
    <id>874902</id>
    <version major="3" minor="0" point="4" />
    <published month="01" day="16" year="2020" />
    
    <!--
    These fields are used for categorization purposes. Seperate multiple 
    types with a pipe | character.
    -->
    <type>MovieDetailsFetcher|MovieCoverFetcher</type>
    <language>en</language>

  </details> 
  
  <action name="search">
    
    <set name="offset" value="0" />
    
    <!-- Regular Expressions -->
    <set name="rx_details_page_block">
    <![CDATA[
    <title>.+?\((?:TV )?(?:Video )?\d{4}[\/IVX]*\).*?</title>.+</body>
    ]]>
    </set>

    <set name="rx_title_year">
    <![CDATA[
    <title>(?:IMDb[\s-]*)?(.+?)\((?:TV )?(?:Video )?(\d{4})[\/IVX]*\).*?</title>
    ]]>
    </set>

    <set name="rx_search_results_block">
      <![CDATA[
      <div class="findSection">.+<div class="findMoreMatches">
      ]]>
    </set>
    
    <set name="rx_search_results">
    <![CDATA[
    <td class="result_text">\s*<a href="/title/(tt\d+)/[^"]*"\s*>([^<]+)</a>\s*[\/IV\(\)]*\s*\((\d{4})\)(?! \(TV)(?! \(VG)(?:\s*<br/>\s*aka\s*<i>"([^"]+)"</i>)*
    ]]>
    </set>

    <set name="rx_aka_details">
    <![CDATA[
    <tr>\s+?<td>(.+?)</td>\s+?<td>(.+?)</td>.*?</tr>
    ]]>
    </set>

    <!-- Retrieve result using IMDb id (if provided) -->
    <if test='${search.imdb_id}!='>
      <retrieve name="imdb_page" url="http://akas.imdb.com/find?s=all&amp;q=${search.imdb_id}" />
      <parse name="details_page_block" input="${imdb_page}" regex="${rx_details_page_block}" />
      <loop name="imdb_page" on="details_page_block">
        <parse name="title_year" input="${imdb_page}" regex="${rx_title_year}" />
        <set name="movie[0].title" value="${title_year[0][0]:htmldecode}" />
        <set name="movie[0].year" value="${title_year[0][1]:htmldecode}" />
        <parse name="imdb" input="${imdb_page}" regex="(tt\d+)/fullcredits" />
        <set name="movie[0].imdb_id" value="${imdb[0][0]}" />
        <set name="movie[0].site_id" value="${imdb[0][0]}" />
        <set name="movie[0].popularity" value="100" />
        <set name="offset" value="1" />
      </loop>
    </if>

    <!-- Retrieve other results using Title -->
    
    <set name="query_year" value='' />
    <if test='${search.year}>1800'>
      <set name="query_year" value="+(${search.year})" />
    </if>
    <retrieve name="search_page" url="http://akas.imdb.com/find?s=all&amp;q=${search.title:safe(ISO-8859-1)}" />
 
    <!-- if we got a details page, this is used. if not, regex does not match so we dont process the loop-->
    <parse name="details_page_block" input="${search_page}" regex="${rx_details_page_block}" />
    <loop name="details_page_verified" on="details_page_block">
      <add name="counter" value1="${count}" value2="${offset}" />
      <parse name="title_year" input="${details_page_verified}" regex="${rx_title_year}" />
      <set name="movie[${counter}].title" value="${title_year[0][0]:htmldecode}" />
      <set name="movie[${counter}].year" value="${title_year[0][1]:htmldecode}" />
      <parse name="imdb" input="${details_page_verified}" regex="(tt\d+)/fullcredits" />
      <set name="movie[${counter}].imdb_id" value="${imdb[0][0]}" />
      <set name="movie[${counter}].site_id" value="${imdb[0][0]}" />

      <!-- AKA page -->
      <retrieve name="aka_page" url="http://www.imdb.com/title/${imdb[0][0]}/releaseinfo" />
      <parse name="akas" input="${aka_page}" regex="${rx_aka_details}" />
      <set name="movie[${counter}].alternate_titles" value="" />
      <loop name="currAka" on="akas" limit="50">
        <set name="movie[${counter}].alternate_titles" value="${movie[${counter}].alternate_titles}|${currAka[0]:htmldecode}" />
      </loop>

      <subtract name="movie[${counter}].popularity" value1="100" value2="${counter}" />
    </loop>
    
    <!-- if we got a search result page, this is used. if not, regex does not match so we dont process the outer loop. -->
    <parse name="search_results_block" input="${search_page}" regex='${rx_search_results_block}' />
    <if test="${search_results_block}!=">

        <loop name="search_results_verified" on="search_results_block">
            <parse name="movie_details" input="${search_results_verified}" regex="${rx_search_results}" />
            <loop name='curr_details' on='movie_details'>
                <add name="counter" value1="${count}" value2="${offset}" />
                <set name="movie[${counter}].imdb_id" value="${curr_details[0]:htmldecode}" />
                <set name="movie[${counter}].site_id" value="${curr_details[0]:htmldecode}" />
                <set name="movie[${counter}].title" value="${curr_details[1]:htmldecode}" />
                <set name="movie[${counter}].year" value="${curr_details[2]:htmldecode}" />
                <if test="${curr_details[3]!=">
                    <set name="movie[${counter}].alternate_titles" value="${curr_details[3]:htmldecode}" />
                </if>
                <subtract name="movie[${counter}].popularity" value1="100" value2="${counter}" />
            </loop>
        </loop>
      
    </if>
  </action>

  <action name="get_details">

    <!-- if the site id is not set try to set it using the imdb id -->
    <if test="${movie.site_id}=">
      <if test="${movie.imdb_id}!=">
        <set name="movie.site_id" value="${movie.imdb_id}" />
      </if>
    </if>

    <!-- if we have a site id (imdb id) we can continue -->
    <if test="${movie.site_id}!=">

      <set name="site" value="http://www.imdb.com/title/${movie.site_id}" />

      <retrieve name="details_page" url="${site}" />

        <set name="rx_title_year">
            <![CDATA[
            <title>(?:IMDb[\s-]*)?(?<movieTitle>[^\(]+?)\s?\((?:TV )?(?:Video )?(?<movieYear>\d{4})[\/IVX]*\).*?</title>
            ]]>
        </set>

        <set name="rx_directors_block">
            <![CDATA[
            Director[s]?:\s*</h4>[^<]*(?<directors_block>.*?)</div>
            ]]>
        </set>
        <set name="rx_directors">
            <![CDATA[
            <a\s+(?:onclick="[^"]+"\s*)?href="/name/nm\d+[^"]+"[^>]*>(?:<span[^>]+>)?(?<movieDirectors>[^<]+)(?:</span>)?</a>
            ]]>
        </set>

        <set name="rx_release_date">
         <![CDATA[
         <h4 class="inline">Release Date:</h4>\s*(?<releaseDate>\d{1,2}\s*[^\s]+\s*\d{4})
         ]]>
        </set>

        <set name="rx_plotkeywords">
         <![CDATA[
         <h4[^>]+>Plot Keywords:</h4>\s*(?<moviePlotKeywords>.+?)(?:&nbsp;|<nobr>|See more|</div>)
         ]]>
        </set>
 
        <set name="rx_writers_block">
            <![CDATA[
            Writer[s]?:\s*</h4>[^<]*(?<writers_block>.*?)</div>
            ]]>
        </set>
        <set name="rx_writers">
            <![CDATA[
            <a\s+(?:onclick="[^"]+"\s*)?href="/name/nm\d+[^"]+"[^>]*>(?:<span[^>]+>)?(?<movieWriters>[^<]+)(?:</span>)?</a>
            ]]>
        </set>

        <set name="rx_actors_block">
            <![CDATA[
            <h2>Cast</h2>(?<cast_block>.+?)<h2>Details</h2>
            ]]>
        </set>
        <set name="rx_actors">
            <![CDATA[
            <td class="name"[^<]*<a\s+(?:onclick="[^"]+"\s*)?href="/name/nm\d+[^"]+"[^>]*>(?:<span[^>]+>)?\s*(?<movieActors>.+?)\s*(?:</span>)?</a>|<span class="itemprop" itemprop="name"[^>]*>\s*(?<movieActors>[^<]+)</span>\s*</a>
            ]]>
        </set>

        <set name="rx_genres_block">
            <![CDATA[
            <h4 [^>]+>\s*?Genre[s]?:.*?</div>
            ]]>
        </set>
        <set name="rx_genres">
            <![CDATA[
            <a[^<]+?href\s*?=\s*?"/[g|G]enre/[^<].+?>([^<]+)</a>
            ]]>
        </set>

        <set name="rx_studios_block">
            <![CDATA[
            <h4 class="inline">Production Co:</h4>\s*(?<movieStudios>(?:[,]*\s*<span itemprop="creator"[^>]+>\s*)?(?:[^<]*<a[^>]+href="[^"]+"[^>]*>(?:<span[^>]+>)?[^<]+(?:</span></a></span>|</a>)))*
            ]]>
        </set>
        <set name="rx_studios">
            <![CDATA[
            <a[^>]+href="[^"]+"[^>]*>(?:<span[^>]+>)?(?<movieStudios>[^<]+)(?:</span>)?</a>
            ]]>
        </set>

        <set name="rx_certification_details">
            <![CDATA[
            <div class="infobar">\s+<img width="\d+" alt="((?:G)|(?:PG)|(?:PG-13)|(?:PG_13)|(?:R)|(?:X)|(?:NC-17))"
            ]]>
        </set>
        
        <set name="rx_certification">
            <![CDATA[
            (?:>\s*USA:|Rated\s*?)(?<movieCertification>(?:G)|(?:PG)|(?:PG-13)|(?:PG_13)|(?:R)|(?:X)|(?:NC-17))(?:</a>|\s*?for)
            ]]>
        </set>

        <set name="rx_runtime">
            <![CDATA[
            (?<movieRuntime>\d+) min\s*</time>\s*&
            ]]>
        </set>

        <set name="rx_tagline">
            <![CDATA[
            <h5>Tagline.</h5>[^>]+>[^\r]?(?<movieTagline>[^<]+)|Tagline[s]?:</h4>[\s\f\r]*(?<movieTagline>[^<]+)
            ]]>
        </set>

        <set name="rx_imdb_votes">
            <![CDATA[
            title="(?<imdbPopularity>[^\s]+) IMDb users\D+(?<imdbScore>\d+(?:.\d+)?)/10"(?:.+?Metascore:\s*<a[^>]+>\s*(?<metaScore>\d+)/100.+?"criticreviews[^>]+>\s*(?<metaPopularity>[^\s]+)\s*</a>)?
            ]]>
        </set>
        
        <set name="rx_language">
            <![CDATA[
            <a[^<]*?href=./language/[^>]+>(?<movieLanguage>[^<]+)</a>
            ]]>
        </set>

        <set name="rx_plot">
            <![CDATA[
            <p class="plotpar">\s*(?<moviePlotLong>.*?)<i>.*?</i>.*?</p>|<h5>Plot Synopsis:</h5>[^>]+>\s*(?<moviePlotLong>(?!\s*<a[^>]+>This plot synopsis is empty[^<]+</a>).*?)\s*<a
            ]]>
        </set>
        <set name="rx_plot2">
            <![CDATA[
            <p itemprop="description">\s*(?<moviePlotShort>.+?)(?:\s*<a[^>]+>See full [^<]+</a>(?:&\w+;)*)?\s*</p>
            ]]>
        </set>

        <set name="rx_aka">
            <![CDATA[
            <tr[^>]+>\s+?<td>([^<]+)</td>\s+?<td>([^<]+)?</td>\s+?</tr>
            ]]>
        </set>

      <set name="movie.imdb_id" value="${movie.site_id}" />

      <!-- Title and Year -->
      <parse name="title_year" input="${details_page}" regex="${rx_title_year}" />
      <set name="movie.title" value="${title_year[0][0]:htmldecode}" />
      <set name="movie.year" value="${title_year[0][1]:htmldecode}" />

      <!-- Release Date -->
      <parse name="release_date" input="${details_page}" regex="${rx_release_date}" />
      <set name="movie.release_date" value="${release_date[0][0]}" />
        
      <!-- Plot Keywords -->
      <parse name="plotkeywords" input="${details_page}" regex="${rx_plotkeywords}" />
      <set name="plotkeywords_clean" value="|${plotkeywords[0][0]:striptags}|" />
      <replace name="movie.plotkeywords" input="${plotkeywords_clean:htmldecode}" pattern="\s*[|]+\s*" with="|" />
     
      <!-- Directors -->
      <parse name="directors_block" input="${details_page}" regex="${rx_directors_block}" />
      <parse name="directors" input="${directors_block}" regex="${rx_directors}" />
      <set name="movie.directors" value="|" />
      <loop name="currDirector" on="directors" limit="10">
        <set name="movie.directors" value="${movie.directors}${currDirector[0]:htmldecode}|" />
      </loop>
      
      <!-- Writers -->
      <parse name="writers_block" input="${details_page}" regex="${rx_writers_block}" />
      <parse name="writers" input="${writers_block}" regex="${rx_writers}" />                                      
      <set name="movie.writers" value="|" />
      <loop name="currWriter" on="writers" limit="10">
        <set name="movie.writers" value="${movie.writers}${currWriter[0]:htmldecode}|" />
      </loop>
      
      <!-- Actors -->
      <parse name="actors_block" input="${details_page}" regex="${rx_actors_block}" />
      <parse name="actors" input="${actors_block}" regex="${rx_actors}" />
      <set name="movie.actors" value="|" />
      <loop name="currActor" on="actors" limit="30">
        <set name="movie.actors" value="${movie.actors}${currActor[0]:htmldecode}|" />
      </loop>

      <!-- Genres -->
      <parse name="genres_block" input="${details_page}" regex="${rx_genres_block}" />
      <parse name="genres" input="${genres_block}" regex="${rx_genres}" />
      <set name='movie.genres' value='' />
      <loop name='currGenre' on='genres'>
        <set name='movie.genres' value='${movie.genres}|${currGenre[0]:htmldecode}' />
      </loop>

      <!-- Studios -->
      <parse name="studios_block" input="${details_page}" regex="${rx_studios_block}" />
      <parse name="studios" input="${studios_block}" regex="${rx_studios}" />
      <set name="movie.studios" value="|" />
      <loop name="currStudio" on="studios" limit="10">
        <set name="movie.studios" value="${movie.studios}${currStudio[0]:htmldecode}|" />
      </loop>

      <!-- Certification -->
      <parse name="certification" input="${details_page}" regex="${rx_certification_details}" />
      <set name='movie.certification' value='${certification[0][0]:htmldecode}' />
      <if test="${movie.certification}=">
        <retrieve name='parentalguide_page' url='${site}/parentalguide' />
        <parse name="certification" input="${parentalguide_page}" regex="${rx_certification}" />
        <set name='movie.certification' value='${certification[0][0]:htmldecode}' />
      </if>
      <if test="${movie.certification}=PG_13">
        <set name='movie.certification' value='PG-13'/>
      </if>

      <!-- Runtime -->
      <parse name="runtime" input="${details_page}" regex="${rx_runtime}" />
      <set name="movie.runtime" value="${runtime[0][0]:htmldecode}" />
      
      <!-- Tagline -->
      <parse name="tagline" input="${details_page}" regex="${rx_tagline}" />
      <set name='movie.tagline' value='${tagline[0][0]:htmldecode}' />

      <!-- Score and Popularity -->
      <parse name="imdb_votes" input="${details_page}" regex="${rx_imdb_votes}" />
      <replace name="imdb_votes_clean" input="${imdb_votes[0][0]:htmldecode}" pattern="[\,\.]" with='' />
      <set name="movie.score" value="${imdb_votes[0][1]:htmldecode}" />
      <set name="movie.popularity" value="${imdb_votes_clean}" />
      
      <!-- Language -->
      <parse name="language" input="${details_page}" regex='${rx_language}' />
      <set name='movie.language' value='${language[0][0]:htmldecode}' />

      <!-- Plot Summary -->
      <retrieve name="summary_page" url="${site}plotsummary" />
      <parse name="summary" input="${summary_page}" regex="${rx_plot}" />
      <set name="summary_clean" value="${summary[0][0]:striptags}" />
      <set name="movie.summary" value="${summary_clean:htmldecode}" />

      <!-- Plot Summary (if first method fails) -->
      <if test="${movie.summary}=">
        <parse name="summary2" input="${details_page}" regex="${rx_plot2}" />
        <set name="summary_clean" value="${summary2[0][0]:striptags}" />
        <set name="movie.summary" value="${summary_clean:htmldecode}" />
      </if>

      <!-- AKA page -->
      <retrieve name="aka_page" url="${site}releaseinfo" />
      <parse name="akas" input="${aka_page}" regex="${rx_aka}" />
      <set name="movie.alternate_titles" value="|" />
      <loop name="currAka" on="akas" limit="50">
        <set name="movie.alternate_titles" value="${movie.alternate_titles}${currAka[1]:htmldecode}|" />
      </loop>

      <!-- Details URL -->
      <set name="movie.details_url" value="${site}" />

    </if>
    
  </action>

  <action name="get_cover_art">
    <!-- if the site id is not set try to set it using the imdb id -->
    <if test="${movie.site_id}=">
        <if test="${movie.imdb_id}!=">
            <set name="movie.site_id" value="${movie.imdb_id}" />
        </if>
    </if>
    
    <!-- if we have a site id (imdb id) we can continue -->
    <if test="${movie.site_id}!=">
        <!-- Retrieve details -->
        <retrieve name="details_page" url="http://www.imdb.com/title/${movie.site_id}/" />

        <!-- Get cover directly by manipulating details page thumbnail -->
        <set name="rx_cover">
        <![CDATA[
        title="[^)]+\)\s*Poster"\s*src="([^_]+_V1)(?:\._CR[^_]+)?[^.]+([^"]+)"
        ]]>
        </set>
        <parse name="cover_src" input="${details_page}" regex="${rx_cover}" />

        <!-- set cover -->
        <set name="cover_art[0].url" value="${cover_src[0][0]}${cover_src[0][1]}" />
    </if>
  </action>
  
</ScriptableScraper>
