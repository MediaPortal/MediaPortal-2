<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:collections="clr-namespace:MediaPortal.UI.Presentation.DataObjects;assembly=MediaPortal.UI"
    xmlns:mp_special_controls="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Controls;assembly=SkinEngine"
    xmlns:navitems="clr-namespace:MediaPortal.Plugins.SlimTv.Client.Models.Navigation;assembly=SlimTv.Client"
    xmlns:tv="clr-namespace:MediaPortal.Plugins.SlimTv.Client.Controls;assembly=SlimTv.Client"
    xmlns:aspect="clr-namespace:MediaPortal.Common.MediaManagement.DefaultItemAspects;assembly=MediaPortal.Common"
    xmlns:fanart="clr-namespace:MediaPortal.Extensions.UserServices.FanArtService.Client;assembly=FanArtService.Client"
    DependsOnStyleResources="SlimTvColors,SlimTvConsts,FullScreenContentConsts,MediaButtons,MediaColors,Consts,Colors,Buttons,OtherControls,MediaStyles,OSD"
    >
  <!-- SlimTvClient model -->
  <Model x:Key="SlimTvClient" Id="8BEC1372-1C76-484c-8A69-C7F3103708EC"/>
  <Model x:Key="SlimTvMultiChannelGuide" Id="5054408D-C2A9-451f-A702-E84AFCD29C10"/>
  <Model x:Key="TimeModel" Id="E821B1C8-0666-4339-8027-AA45A4F6F107"/>
  <Model x:Key="VideoPlayerModel" Id="4E2301B4-3C17-4a1d-8DE5-2CEA169A0256"/>
  <tv:SlimTvDateFormatConverter x:Key="SlimTvDateFormatConverter" />

  <!-- Program duration control style -->
  <Style x:Key="ProgramDurationControlStyle" TargetType="{x:Type Control}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" >
            <Label x:Name="ProgramStart" Margin="0,0,0,0"  Color="{ThemeResource TextColor}"
                   Content="{Binding Path=StartTime, Converter={StaticResource SlimTvDateFormatConverter}}"/>
            <Label x:Name="Delimiter" Margin="10,0,10,0"  Color="{ThemeResource TextColor}" Content="-"
                   IsVisible="{Binding ElementName=ProgramStart, Path=Content, Converter={StaticResource EmptyStringToFalseConverter}}"/>
            <Label x:Name="ProgramEnd" Content="{Binding Path=EndTime, Converter={StaticResource SlimTvDateFormatConverter},ConverterParameter=Time}"
                   Color="{ThemeResource TextColor}"/>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="GenericTVOSDControlsControl">
    <DockPanel x:Name="PlayControlsPanel" VerticalAlignment="Top" HorizontalAlignment="Stretch" LastChildFill="True">

      <StackPanel DockPanel.Dock="Left" Orientation="Horizontal" HorizontalAlignment="Left">
        <Button x:Name="PowerButton" Style="{ThemeResource PowerButtonStyle}" Margin="0,0,5,0" Height="71"
                HorizontalAlignment="Right" Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=BBFA7DB7-5055-48D5-A904-0F0C79849369}"
                IsEnabled="{Binding IsEnabled}"/>
        <Button x:Name="BackButton" Style="{ThemeResource NavigateBackButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                HorizontalAlignment="Left" Command="{Command Source={Service WorkflowManager},Path=NavigatePop,Parameters=1}"
                IsEnabled="{Binding IsEnabled}"/>
      </StackPanel>

      <StackPanel DockPanel.Dock="Right" Orientation="Horizontal">
        <Button x:Name="VolUpButton" Style="{ThemeResource VolUpButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                Command="{Command Source={StaticResource GeneralPlayerModel},Path=VolumeUp}" VerticalAlignment="Top"
                IsEnabled="{Binding IsEnabled}"/>
        <Button x:Name="VolDownButton" Style="{ThemeResource VolDownButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                Command="{Command Source={StaticResource GeneralPlayerModel},Path=VolumeDown}" VerticalAlignment="Top"
                IsEnabled="{Binding IsEnabled}"/>
        <Grid x:Name="AudioPanel" VerticalAlignment="Top" Margin="4,9,0,-8">
          <Button x:Name="AudioActiveButton" IsVisible="{Binding IsAudio}" Style="{ThemeResource AudioActiveButtonStyle}" Command="{Command AudioButtonPressed}"
                  IsEnabled="{Binding IsEnabled}"/>
          <Button x:Name="AudioInactiveButton" IsVisible="{Binding !IsAudio}" Style="{ThemeResource AudioInactiveButtonStyle}" Command="{Command AudioButtonPressed}"
                  IsEnabled="{Binding IsEnabled}"/>
        </Grid>
      </StackPanel>

      <DockPanel LastChildFill="False" Margin="80,0,80,0">
        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" DockPanel.Dock="Left" Margin="0,0,40,0">
          <Button x:Name="SkipBackButton" Style="{ThemeResource SkipBackButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSkipBack}"
                  Command="{Command Previous}" IsEnabled="{Binding IsEnabled}"/>
          <Button x:Name="RewindButton" Style="{ThemeResource RewindButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSeekBackward}"
                  Command="{Command SeekBackward}" IsEnabled="{Binding IsEnabled}"/>
          <Button x:Name="PlayButton" Style="{ThemeResource PlayButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanPlay}"
                  Command="{Command Play}" IsEnabled="{Binding IsEnabled}"/>
          <Button x:Name="PauseButton" Style="{ThemeResource PauseButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanPause}"
                  Command="{Command Pause}" IsEnabled="{Binding IsEnabled}"/>
          <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanStop}"
                  Command="{Command Stop}" IsEnabled="{Binding IsEnabled}"/>
          <Button x:Name="ForwardButton" Style="{ThemeResource ForwardButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSeekForward}"
                  Command="{Command SeekForward}" IsEnabled="{Binding IsEnabled}"/>
          <Button x:Name="SkipForwardButton" Style="{ThemeResource SkipForwardButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSkipForward}"
                  Command="{Command Next}" IsEnabled="{Binding IsEnabled}"/>
          <DockPanel LastChildFill="False">
            <Label DockPanel.Dock="Top" x:Name="EndTimeLabel" Color="{ThemeResource TextColor}" FontSize="28" FontFamily="DefaultBold" Margin="10,10,20,0"
                   Content="{Binding Source={StaticResource SlimTvClient}, Path=CurrentProgram.EndTime, Converter={StaticResource SlimTvDateFormatConverter}}"/>
            <Label DockPanel.Dock="Bottom" x:Name="CurrentTimeLabel" Margin="10,0,20,10" Color="{ThemeResource OSDProgressBarFillColor}" FontSize="28" FontFamily="DefaultBold"
                   Content="{Binding Source={StaticResource TimeModel}, Path=CurrentTime}"/>
          </DockPanel>
        </StackPanel>
        <StackPanel Orientation="Horizontal" VerticalAlignment="Top" DockPanel.Dock="Right" Margin="40,0,0,0">
          <Button x:Name="PreviousChannelButton" Style="{ThemeResource ChannelDownButtonStyle}"
                  Command="{Command Source={StaticResource SlimTvClient},Path=ZapPrevChannel}" IsEnabled="{Binding IsEnabled}"/>
          <Button x:Name="NextChannelButton" Style="{ThemeResource ChannelUpButtonStyle}" 
                  Command="{Command Source={StaticResource SlimTvClient},Path=ZapNextChannel}" IsEnabled="{Binding IsEnabled}"/>
          <Button x:Name="RecordButton" Style="{ThemeResource RecordButtonStyle}" Command="{Command Source={StaticResource SlimTvClient},Path=RecordDialog}"
                  Margin="{ThemeResource PlayerControlButtonMargins}" IsEnabled="{Binding IsEnabled}"/>
          <Button x:Name="SelectMenuButton" Style="{ThemeResource SelectContextMenuButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                  Command="{Command Source={StaticResource VideoPlayerModel},Path=OpenPlayerConfigurationDialog}" IsEnabled="{Binding IsEnabled}"/>
          <Button x:Name="SelectTitleButton" Style="{ThemeResource ShowDvdMenuButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                  IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.TitlesAvailable}"
                  Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseTitleDialog}" IsEnabled="{Binding IsEnabled}"/>
          <Button x:Name="PreviousChapterButton" Style="{ThemeResource PreviousChapterButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                  IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.ChaptersAvailable}"
                  Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.PrevChapter}" IsEnabled="{Binding IsEnabled}"/>
          <Button x:Name="SelectChapterButton" Style="{ThemeResource SelectChapterButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                  IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.ChaptersAvailable}"
                  Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseChapterDialog}" IsEnabled="{Binding IsEnabled}"/>
          <Button x:Name="NextChapterButton" Style="{ThemeResource NextChapterButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                  IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.ChaptersAvailable}"
                  Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.NextChapter}" IsEnabled="{Binding IsEnabled}"/>
          <Button x:Name="SelectSubtitleButton" Style="{ThemeResource SelectSubtitleButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                  IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.SubtitlesAvailable}"
                  Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseSubtitleDialog}" IsEnabled="{Binding IsEnabled}"/>
        </StackPanel>
      </DockPanel>
    </DockPanel>
  </ControlTemplate>

  <Style x:Key="PrimarySlimTvOSDStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <ControlTemplate.Resources>
            <Model x:Key="VideoPlayerModel" Id="4E2301B4-3C17-4a1d-8DE5-2CEA169A0256"/>
          </ControlTemplate.Resources>

          <Control Style="{ThemeResource OSDContainer}" Width="{ThemeResource FullScreenContentVideoPrimaryPlayerOSDWidth}"
                   DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <Control.Resources>
              <ControlTemplate x:Key="OSD_Cover_Template">
                <Image x:Name="ChannelLogo" Stretch="Uniform" Width="280" Margin="8" VerticalAlignment="Top">
                  <Image.Source>
                    <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding Source={StaticResource SlimTvClient}, Path=ChannelLogoType}" 
                                              fanart:FanArtType="Banner" fanart:FanArtName="{Binding Source={StaticResource SlimTvClient}, Path=ChannelName}"
                                              fanart:MaxWidth="280" fanart:MaxHeight="0"/>
                  </Image.Source>
                </Image>
              </ControlTemplate>
              <ControlTemplate x:Key="OSD_InfoArea_Template">
                <Grid x:Name="InfoGrid" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,-10,0,0">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="20"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>

                  <Grid Grid.Row="1" DataContext="{Binding Source={StaticResource SlimTvClient}}" MaxWidth="900">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label Grid.Column="0" x:Name="CurrentProgramTitleLabel" Content="{Binding Path=CurrentProgram.Title}"
                             FontFamily="DefaultBold" Color="{ThemeResource TextColor}"/>
                    <Label Grid.Column="1" x:Name="CurrentProgramSeriesLabel" Color="{ThemeResource TextColor}"
                             IsVisible="{Binding Path=CurrentProgram.Series, Converter={StaticResource EmptyStringToFalseConverter}}">
                      <Label.Content>
                        <Binding Path="CurrentProgram.Series" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{} ({0})"/>
                      </Label.Content>
                    </Label>
                  </Grid>

                  <Grid Grid.Column="0" Grid.Row="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,20">
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="320"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="15"/>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Label x:Name="Channel" Grid.Row="0" Grid.Column="0" Scroll="Auto"
                             Content="{Binding Source={StaticResource SlimTvClient},Path=ChannelName}"
                             Color="{ThemeResource TextColor}"/>

                    <Label x:Name="ProgramStart" Grid.Row="0" Grid.Column="1" Margin="5,0,5,0" HorizontalAlignment="Right"
                             Content="{Binding Source={StaticResource SlimTvClient},Path=CurrentProgram.StartTime, Converter={StaticResource SlimTvDateFormatConverter}}"
                             Color="{ThemeResource TextColor}"/>
                    <Label Grid.Row="0" Grid.Column="2" Content="-" Color="{ThemeResource TextColor}" HorizontalAlignment="Center"/>
                    <Label x:Name="ProgramEnd" Grid.Row="0" Grid.Column="3" Margin="5,0,5,0" HorizontalAlignment="Left"
                             Content="{Binding Source={StaticResource SlimTvClient},Path=CurrentProgram.EndTime, Converter={StaticResource SlimTvDateFormatConverter}}"
                             Color="{ThemeResource TextColor}"/>

                    <Label x:Name="Genre" Grid.Row="0" Grid.Column="4" Margin="5,0,0,0"
                             Content="{Binding Source={StaticResource SlimTvClient},Path=CurrentProgram.Genre}"
                             Color="{ThemeResource TextColor}"/>

                    <Label Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="5" x:Name="Description" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                             Wrap="True" Scroll="Auto" Color="{ThemeResource TextColor}"
                             Content="{Binding Source={StaticResource SlimTvClient},Path=CurrentProgram.Description}"/>
                  </Grid>

                </Grid>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_Progress_Template">
                <DockPanel LastChildFill="true">
                  <Grid DockPanel.Dock="Center" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>
                    <ProgressBar x:Name="CurrentProgramProgress" Grid.Column="1" Height="18" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,5,0,0"
                                 Style="{ThemeResource OSDProgressBarStyle}" Value="{Binding Source={StaticResource SlimTvClient},Path=ProgramProgress}" />
                  </Grid>
                </DockPanel>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_Controls_Template">
                <Control Template="{ThemeResource GenericTVOSDControlsControl}" />
              </ControlTemplate>

            </Control.Resources>
          </Control>

          <ControlTemplate.Triggers>
            <Trigger Property="IsCurrentPlayer" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="CurrentPlayer_BeginStoryboard" Storyboard="{ThemeResource OSDCurrentPlayerControlStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="CurrentPlayer_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="PlayerContext" Value="PrimaryPlayer"/>
  </Style>

  <!-- RecordingItem -->

  <ControlTemplate x:Key="GridViewRecordingItemTemplate">
    <Grid Margin="3,2,3,2" HorizontalAlignment="Center" VerticalAlignment="Center" Width="{ThemeResource MEDIA_THUMB_WIDTH}" Height="{ThemeResource MEDIA_THUMB_HEIGHT}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Border Grid.Column="0" Grid.Row="0" CornerRadius="0" Background="Black" Opacity="0.2" Margin="0" BorderThickness="0"> </Border>
      <Grid HorizontalAlignment="Center" VerticalAlignment="Center">
        <Image Source="{Binding MediaItem}" Stretch="Uniform" FallbackSource="VideoNormal.png"
               HorizontalAlignment="Center" VerticalAlignment="Center">
          <Image.Opacity>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
              <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
              <Binding Source="1.0"/>
              <Binding Source="0.7"/>
            </MultiBinding>
          </Image.Opacity>
        </Image>
        <Image HorizontalAlignment="Right" VerticalAlignment="Top" >
          <Image.Source>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == 0 ? {1} : {2}">
              <Binding Path="PlayCount"/>
              <Binding Source="UnwatchedTab_small.png"/>
              <Binding Source=""/>
            </MultiBinding>
          </Image.Source>
        </Image>
      </Grid>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="RecordingCoverTemplate">
    <Grid Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center">
      <Image Height="128" Stretch="Uniform" FallbackSource="VideoNormal.png"
               HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding MediaItem}" >
      </Image>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="ListViewRecordingItemTemplate">
    <Grid x:Name="ItemControl" Margin="0,0,43,0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="40"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}" FontFamily="DefaultBold">
        <Label.Opacity>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
            <Binding Source="1.0"/>
            <Binding Source="0.7"/>
          </MultiBinding>
        </Label.Opacity>
      </Label>

      <Label x:Name="Duration" Grid.Row="0" Grid.Column="2" Content="{Binding Duration}" Margin="-30,0,0,0"
             Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" HorizontalAlignment="Right">
        <Label.Opacity>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
            <Binding Source="1.0"/>
            <Binding Source="0"/>
          </MultiBinding>
        </Label.Opacity>
      </Label>

      <Image HorizontalAlignment="Right" VerticalAlignment="Center" Stretch="Fill" Width="37" Height="24" Grid.Row="0" Grid.Column="2"  >
        <Image.Opacity>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
            <Binding Source="0"/>
            <Binding Source="0.5"/>
          </MultiBinding>
        </Image.Opacity>

        <Image.Source>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding Path="PlayCount"/>
            <Binding Source=""/>
            <Binding Source="unwatched_icon.png"/>
          </MultiBinding>
        </Image.Source>
      </Image>

      <Control x:Name="ListViewCover" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,8,0"
               Template="{ThemeResource RecordingCoverTemplate}" RenderTransformOrigin="0.5,0.5"
               IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Control.LayoutTransform>
          <ScaleTransform>
            <ScaleTransform.ScaleX>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small} ? {1} : ({0} == {LayoutSize}.{Medium} ? {2}: {3})">
                <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize"/>
                <Binding Source="0.5"/>
                <Binding Source="0.7"/>
                <Binding Source="1"/>
              </MultiBinding>
            </ScaleTransform.ScaleX>
            <ScaleTransform.ScaleY>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small} ? {1} : ({0} == {LayoutSize}.{Medium} ? {2}: {3})">
                <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize"/>
                <Binding Source="0.5"/>
                <Binding Source="0.7"/>
                <Binding Source="1"/>
              </MultiBinding>
            </ScaleTransform.ScaleY>
          </ScaleTransform>
        </Control.LayoutTransform>
      </Control>

      <Grid x:Name="FocusDetails" Grid.Row="1" Grid.Column="1" Margin="0,0,20,0"
            HorizontalAlignment="Stretch"
            IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">

        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="40"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Image HorizontalAlignment="Right" VerticalAlignment="Center" Stretch="Fill" Width="37" Height="24" Grid.Row="0" Grid.Column="2" Margin="60,0,-60,0"  >
          <Image.Source>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
              <Binding Path="PlayCount"/>
              <Binding Source=""/>
              <Binding Source="unwatched_icon.png"/>
            </MultiBinding>
          </Image.Source>
        </Image>

        <Grid x:Name="Details" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch">
          <Grid.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} != {LayoutSize}.{Small}"/>
          </Grid.IsVisible>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <!--Label x:Name="VideoEncoding" Grid.Column="0" Content="{Binding VideoEncoding}" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}"/-->
          <Label x:Name="StartTime" Grid.Column="1" Content="{Binding Path=StartTime, Converter={StaticResource SlimTvDateFormatConverter}, ConverterParameter=g}" 
                 FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}" HorizontalAlignment="Right"/>
        </Grid>

      </Grid>
    </Grid>
  </ControlTemplate>
  
  <DataTemplate DataType="{x:Type navitems:RecordingItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewVideoItemTemplate}"/>
          <Binding Source="{StaticResource GridViewVideoItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewVideoItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>


  <Style x:Key="ProgramGuideButtonControlStyle" TargetType="{x:Type Control}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <DockPanel Name="ButtonControlRectangle">
            <Rectangle DockPanel.Dock="Center" Name="ButtonBase" Fill="{ThemeResource ProgramBaseFill}" Stroke="Transparent"/>
            <Rectangle DockPanel.Dock="Center" Name="ButtonHover" Fill="" IsVisible="{Binding Source={StaticResource SlimTvMultiChannelGuide}, Path=!ShowGenreColors}"/>
            <Rectangle DockPanel.Dock="Center" Name="ButtonGenre" Fill="{Binding Program.EpgGenreColor}" 
                       IsVisible="{Binding Source={StaticResource SlimTvMultiChannelGuide}, Path=ShowGenreColors}"/>
            <Rectangle DockPanel.Dock="Center" Name="ButtonOverlay" Fill=""/>
            <Rectangle DockPanel.Dock="Center" Name="ButtonFocusFrame" StrokeThickness="3" Margin="0" Stroke="White" Fill="" IsVisible="False"/>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--
  ProgramGuideButtonStyle is used as style for a single Program in MultiChannelGuide
  It's basically the DefaultButtonStyle without the Margin for ButtonControlStyle, 
  which would lead to incorrect Layout for short Programs (minimum Width).
  -->
  <Style x:Key="ProgramGuideButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="GrowControl" RenderTransformOrigin="0.5,0.5" Margin="2,2,2,2">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.RenderTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
              </TransformGroup>
            </Grid.RenderTransform>
            <Control Grid.ColumnSpan="2" Style="{ThemeResource ProgramGuideButtonControlStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            <ContentPresenter Grid.ColumnSpan="2" x:Name="ButtonContentPresenter" Margin="3,5,0,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            <Image Grid.Column="1" x:Name="RecIndicator" Source="RECORD.SINGLE.PNG" IsVisible="False" Height="32"
                   Stretch="Uniform" Margin="0,4,2,4" HorizontalAlignment="Right"/>
            <Image Grid.Column="1" x:Name="SeriesRecIndicator" Source="RECORD.SERIES.PNG" IsVisible="False" Height="32"
                   Stretch="Uniform" Margin="0,4,2,4" HorizontalAlignment="Right"/>
          </Grid>
          
          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding IsRunning}" Value="True" />
                <Condition Binding="{Binding Source={StaticResource SlimTvMultiChannelGuide}, Path=ShowGenreColors}" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="ButtonBase" Property="Fill" Value="{ThemeResource ProgramRunningFill}"/>
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding Program.IsScheduled}" Value="True" />
                <Condition Binding="{Binding Source={StaticResource SlimTvMultiChannelGuide}, Path=ShowGenreColors}" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="ButtonBase" Property="Fill" Value="{ThemeResource ProgramScheduledFill}"/>
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding Program.IsScheduled}" Value="True" />
                <Condition Binding="{Binding Program.IsSeriesScheduled}" Value="False" />
                <Condition Binding="{Binding Source={StaticResource SlimTvMultiChannelGuide}, Path=ShowGenreColors}" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="RecIndicator" Property="IsVisible" Value="True"/>
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding Program.IsSeriesScheduled}" Value="True" />
                <Condition Binding="{Binding Source={StaticResource SlimTvMultiChannelGuide}, Path=ShowGenreColors}" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="SeriesRecIndicator" Property="IsVisible" Value="True"/>
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True"/>
                <Condition Binding="{Binding Source={StaticResource SlimTvMultiChannelGuide}, Path=ShowGenreColors}" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="ButtonFocusFrame" Property="IsVisible" Value="True"/>
            </MultiTrigger>

            <Trigger Property="HasFocus" Value="True">
              <Setter TargetName="ButtonHover" Property="Fill" Value="{ThemeResource ProgramFocusedFill}"/>
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="Focused_BeginStoryboard" Storyboard="{ThemeResource FocusedButtonWideStoryboard}"/>
                <SoundPlayerAction Source="navigate.wav" DisableOnAudioOutput="True"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="Focused_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="Pressed_BeginStoryboard" Storyboard="{ThemeResource PressedButtonWideStoryboard}"
                    HandoffBehavior="TemporaryReplace"/>
                <SoundPlayerAction Source="click.wav" DisableOnAudioOutput="True"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="Pressed_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
            
            <Trigger Property="IsEnabled" Value="False">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="Disabled_BeginStoryBoard" Storyboard="{ThemeResource DisabledButtonStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="Disabled_BeginStoryBoard"/>
              </Trigger.ExitActions>
            </Trigger>
            
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Style definition for EpgGrid defining header and program item styles -->
  <Style x:Key="EpgGridStyle" TargetType="{x:Type tv:EpgGrid}">
    <Setter Property="GroupButtonWidth" Value="{ThemeResource GroupButtonWidth}"/>
    <Setter Property="GroupButtonTemplate">
      <Setter.Value>
        <ControlTemplate>
          <Button Style="{ThemeResource ProgramGuideButtonStyle}" Command="{Command Source={StaticResource SlimTvMultiChannelGuide}, Path=SelectGroup}">
            <StackPanel Orientation="Horizontal" Margin="0,0,10,0">
              <Label x:Name="GroupNameLabel" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"
                     Opacity="0.6" Content="{Binding GroupName}" VerticalAlignment="Center"/>
              <StackPanel.LayoutTransform>
                <RotateTransform CenterX="0.5" CenterY="0.5" Angle="-90" />
              </StackPanel.LayoutTransform>
            </StackPanel>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="HeaderTemplate">
      <Setter.Value>
        <ControlTemplate>
          <Button Style="{ThemeResource ProgramGuideButtonStyle}" Command="{Binding Command}" Margin="0,0,30,0">
            <Grid x:Name="ChannelHeader" Margin="2,2,2,2">
              <Grid.ColumnDefinitions>
                <!-- Channel Logo -->
                <ColumnDefinition Width="Auto"/>
                <!-- Channel Number -->
                <ColumnDefinition Width="Auto"/>
                <!-- Channel Name -->
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>

              <Label x:Name="ChannelNumber" Grid.Column="0" Content="{Binding Channel.ChannelNumber}" VerticalAlignment="Center" FontFamily="DefaultBold" Opacity="0.4"
                     Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" Margin="5,-2,0,-2" MinWidth="50">
                <Label.IsVisible>
                  <Binding Source="{StaticResource SlimTvMultiChannelGuide}" Path="ShowChannelNumbers" />
                </Label.IsVisible>
              </Label>

              <Image x:Name="ChannelLogo" Grid.Column="1" Stretch="Uniform" Margin="5,-1,0,-1" Width="{ThemeResource ChannelLogoWidth}" HorizontalAlignment="Center"
                     Height="{Binding ElementName=ChannelHeader,Path=ActualHeight}">
                <Image.Source>
                  <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding ChannelLogoType}" fanart:FanArtType="Banner"
                                            fanart:FanArtName="{Binding ChannelLogoPath}" fanart:MaxWidth="0" fanart:MaxHeight="0"/>
                </Image.Source>
                <Image.IsVisible>
                  <Binding Source="{StaticResource SlimTvMultiChannelGuide}" Path="ShowChannelLogos" />
                </Image.IsVisible>
              </Image>

              <Label Grid.Column="2" x:Name="NameLabel" Content="{Binding [Name]}" VerticalAlignment="Center" Margin="5,0,0,0" ScrollDelay="0"
                     Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}">
                <Label.IsVisible>
                  <Binding Source="{StaticResource SlimTvMultiChannelGuide}" Path="ShowChannelNames" />
                </Label.IsVisible>
                <Label.Triggers>
                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
                    <Setter TargetName="NameLabel" Property="Scroll" Value="Auto"/>
                  </DataTrigger>
                </Label.Triggers>
              </Label>
            </Grid>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ProgramTemplate">
      <Setter.Value>
        <ControlTemplate>
          <Button
              Style="{ThemeResource ProgramGuideButtonStyle}"
              IsEnabled="{Binding Enabled}"
              SetFocus="{Binding Path=Selected,Mode=OneTime}"
              Command="{Binding Command}"
              >
            <Button.ContextMenuCommand>
              <Command Source="{StaticResource SlimTvMultiChannelGuide}" Path="ShowProgramContextMenu" Parameters="{LateBoundValue BindingValue={Binding}}"/>
            </Button.ContextMenuCommand>
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
                <Trigger.EnterActions>
                  <TriggerCommand>
                    <TriggerCommand.Command>
                      <Command x:Key="SelectionChanged_Command"
                                 Source="{StaticResource SlimTvMultiChannelGuide}"
                                 Path="UpdateProgram"
                                 Parameters="{LateBoundValue BindingValue={Binding}}" />
                    </TriggerCommand.Command>
                  </TriggerCommand>
                </Trigger.EnterActions>
              </Trigger>
            </Button.Triggers>

            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>

              <Label x:Name="ItemLabel" Content="{Binding [Name]}" VerticalAlignment="Center" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"
                     Margin="2,0,0,0" Opacity="0.8" IsVisible="{Binding !IsRunning}"/>
              <Label x:Name="ItemLabel2" Content="{Binding [Name]}" VerticalAlignment="Center" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"
                     Margin="2,0,0,0" FontFamily="DefaultBold" IsVisible="{Binding IsRunning}"/>
              <Label x:Name="SeriesLabel" Grid.Column="1" Content="{Binding [Series]}" VerticalAlignment="Center" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"
                     Margin="5,0,0,0"/>
            </Grid>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="TimeIndicatorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle x:Name="TimeIndicator" Width="4" HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="0,0,10,0">
            <Rectangle.Fill>
              <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                <GradientStop Offset="0" Color="#20A0A0A0"/>
                <GradientStop Offset="1"  Color="#A0F0F0F0"/>
              </LinearGradientBrush >
            </Rectangle.Fill>
          </Rectangle>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TVButtonSimpleWideStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="GrowControl" RenderTransformOrigin="0.5,0.5" Margin="2">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.RenderTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
              </TransformGroup>
            </Grid.RenderTransform>
            <Control x:Name="ButtonControlBackground" Style="{ThemeResource ButtonControlStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            <ContentPresenter x:Name="ButtonContentPresenter" Margin="10,5,10,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TVButtonWideStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="GrowControl" RenderTransformOrigin="0.5,0.5" Margin="2">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.RenderTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
              </TransformGroup>
            </Grid.RenderTransform>
            <Control x:Name="ButtonControlBackground" Style="{ThemeResource ButtonControlStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            <ContentPresenter x:Name="ButtonContentPresenter" Margin="10,5,10,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
          </Grid>

          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding IsRunning}" Value="True">
              <Setter TargetName="Item1" Property="Background" Value="{ThemeResource ProgramRunningFill}"/>
              <Setter TargetName="Item2" Property="Background" Value="{ThemeResource ProgramRunningFill}"/>
              <Setter TargetName="Item3" Property="Background" Value="{ThemeResource ProgramRunningFill}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Program.IsScheduled}" Value="True">
              <Setter TargetName="Item2_record" Property="Background" Value="{ThemeResource ProgramScheduledFill}"/>
              <Setter TargetName="Item3_record" Property="Background" Value="{ThemeResource ProgramRecordFill}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Program.IsSeriesScheduled}" Value="True">
              <Setter TargetName="SeriesRecIndicator" Property="IsVisible" Value="True"/>
            </DataTrigger>
            <Trigger Property="HasFocus" Value="True">
              <Setter TargetName="Item1_overlay" Property="Background" Value="{ThemeResource ProgramFocusedFill}"/>
              <Setter TargetName="Item2_overlay" Property="Background" Value="{ThemeResource ProgramFocusedFill}"/>
              <Setter TargetName="Item3_overlay" Property="Background" Value="{ThemeResource ProgramFocusedFill}"/>
            </Trigger>
          </ControlTemplate.Triggers>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TVItemContainerStyle" TargetType="{x:Type ListViewItem}">
    <Style.Triggers>
      <Trigger Property="Selected" Value="True">
        <!-- Hack: It is sufficient to set the attached ZIndex property for one panel type; the MP2 SkinEngine maps it to the
             same internal property for all panel types -->
        <Setter Property="StackPanel.ZIndex" Value="100.0"/>
      </Trigger>
    </Style.Triggers>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Margin="50,0,20,0" Style="{ThemeResource TVButtonWideStyle}"
                  Command="{DynamicResource ResourceKey=Menu_Command}"
                  IsEnabled="{Binding Enabled}" SetFocus="{Binding Path=Selected,Mode=OneTime}">
            <!--Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="Item1" Property="Background" Value="#003366"/>
                <Setter TargetName="Item2" Property="Background" Value="#003366"/>
                <Setter TargetName="Item3" Property="Background" Value="#003366"/>
              </Trigger>
            </Button.Triggers-->
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

    <Style x:Key="TVButtonWideStyle2" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="GrowControl" RenderTransformOrigin="0.5,0.5" Margin="2">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.RenderTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
              </TransformGroup>
            </Grid.RenderTransform>
            <Control x:Name="ButtonControlBackground" Style="{ThemeResource ButtonControlStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            <ContentPresenter x:Name="ButtonContentPresenter" Margin="10,5,10,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
          </Grid>

          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding IsRunning}" Value="True">
              <Setter TargetName="Item1" Property="Background" Value="{ThemeResource ProgramRunningFill}"/>
              <Setter TargetName="Item2" Property="Background" Value="{ThemeResource ProgramRunningFill}"/>
              <Setter TargetName="Item3" Property="Background" Value="{ThemeResource ProgramRunningFill}"/>
              <Setter TargetName="Item4" Property="Background" Value="{ThemeResource ProgramRunningFill}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Program.IsScheduled}" Value="True">
              <Setter TargetName="Item3_record" Property="Background" Value="{ThemeResource ProgramScheduledFill}"/>
              <Setter TargetName="Item4_record" Property="Background" Value="{ThemeResource ProgramRecordFill}"/>
            </DataTrigger>
            <DataTrigger Binding="{Binding Program.IsSeriesScheduled}" Value="True">
              <Setter TargetName="SeriesRecIndicator" Property="IsVisible" Value="True"/>
            </DataTrigger>
            <Trigger Property="HasFocus" Value="True">
              <Setter TargetName="Item1_overlay" Property="Background" Value="{ThemeResource ProgramFocusedFill}"/>
              <Setter TargetName="Item2_overlay" Property="Background" Value="{ThemeResource ProgramFocusedFill}"/>
              <Setter TargetName="Item3_overlay" Property="Background" Value="{ThemeResource ProgramFocusedFill}"/>
              <Setter TargetName="Item4_overlay" Property="Background" Value="{ThemeResource ProgramFocusedFill}"/>
              <Setter TargetName="CurrentProgramLabel" Property="Scroll" Value="Auto"/>
              <Setter TargetName="NextProgramLabel" Property="Scroll" Value="Auto"/>
            </Trigger>
          </ControlTemplate.Triggers>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="TVItemContainerStyle2" TargetType="{x:Type ListViewItem}">
     <Style.Triggers>
       <Trigger Property="Selected" Value="True">
             <!-- Hack: It is sufficient to set the attached ZIndex property for one panel type; the MP2 SkinEngine maps it to the
             same internal property for all panel types -->
          <Setter Property="StackPanel.ZIndex" Value="100.0"/>
       </Trigger> 
     </Style.Triggers>
     <Setter Property="Template">
       <Setter.Value>
         <ControlTemplate TargetType="{x:Type ListViewItem}">
           <Button Margin="50,0,20,0" Style="{ThemeResource TVButtonWideStyle2}"
                  Command="{DynamicResource ResourceKey=Menu_Command}"
                  IsEnabled="{Binding Enabled}" SetFocus="{Binding Path=Selected,Mode=OneTime}">
           </Button>
         </ControlTemplate>
       </Setter.Value>
     </Setter>
  </Style>
  
  <Style x:Key="ScheduleItemContainerStyle" TargetType="{x:Type ListViewItem}">
    <Style.Triggers>
      <Trigger Property="Selected" Value="True">
        <!-- Hack: It is sufficient to set the attached ZIndex property for one panel type; the MP2 SkinEngine maps it to the
             same internal property for all panel types -->
        <Setter Property="StackPanel.ZIndex" Value="100.0"/>
      </Trigger>
    </Style.Triggers>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Margin="0,0,0,0" Style="{ThemeResource TVButtonSimpleWideStyle}"
                  Command="{DynamicResource ResourceKey=Menu_Command}"
                  IsEnabled="{Binding Enabled}" SetFocus="{Binding Path=Selected,Mode=OneTime}">
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="Item1" Property="Background" Value="#003366"/>
                <Setter TargetName="Item2" Property="Background" Value="#003366"/>
                <Setter TargetName="Item3" Property="Background" Value="#003366"/>
                <Setter TargetName="Item4" Property="Background" Value="#003366"/>
                <Setter TargetName="ChannelText" Property="Scroll" Value="Auto"/>
                <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
                <Setter TargetName="TypeLabel" Property="Scroll" Value="Auto"/>
                <Setter TargetName="ProgramStartEnd" Property="Scroll" Value="Auto"/>
              </Trigger>
            </Button.Triggers>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ExtScheduleItemContainerStyle" TargetType="{x:Type ListViewItem}">
    <Style.Triggers>
      <Trigger Property="Selected" Value="True">
        <!-- Hack: It is sufficient to set the attached ZIndex property for one panel type; the MP2 SkinEngine maps it to the
             same internal property for all panel types -->
        <Setter Property="StackPanel.ZIndex" Value="100.0"/>
      </Trigger>
    </Style.Triggers>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Margin="0,0,0,0" Style="{ThemeResource TVButtonWideStyle}"
                  Command="{DynamicResource ResourceKey=Menu_Command}"
                  IsEnabled="{Binding Enabled}" SetFocus="{Binding Path=Selected,Mode=OneTime}">
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="ChannelText" Property="Scroll" Value="Auto"/>
                <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
                <Setter TargetName="ProgramStartEnd" Property="Scroll" Value="Auto"/>
                <!--Setter TargetName="Item1" Property="Background" Value="#003366"/>
                <Setter TargetName="Item2" Property="Background" Value="#003366"/>
                <Setter TargetName="Item3" Property="Background" Value="#003366"/-->
              </Trigger>
            </Button.Triggers>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <!-- Default ListView style. The properties "ItemTemplate", "ItemContainerStyle" and "DataStringProvider" should be exchanged for custom ListView styles. -->
  <Style x:Key="TVListViewStyle" TargetType="{x:Type ListView}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <ScrollViewer CanContentScroll="True">
            <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel x:Name="ListItemsHost" IsItemsHost="True"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>
  
  <Style x:Key="TVProgressBarStyle" TargetType="{x:Type ProgressBar}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <Grid x:Name="ProgressBarGrid" UIElement.MouseClick="{CommandStencil RelativeSource={RelativeSource TemplatedParent}, Path=OnMouseClick}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Rectangle x:Name="ProgressBarTrack" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"       
                       Fill="#999999"/>
            <Rectangle x:Name="ProgressBarIndicator" Width="{TemplateBinding PartIndicatorWidth}" HorizontalAlignment="Left"                  
                       Fill="{ThemeResource ProgressBarFillColor}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate x:Key="SingleChannelWithCurrentProgramDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid x:Name="ItemControl" VerticalAlignment="Center" HorizontalAlignment="Stretch" RenderTransformOrigin="0.5,0.5"
          Margin="-80,0,0,0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <!-- Channel Logo -->
        <ColumnDefinition Width="400"/>
        <!-- Channel Name -->
        <ColumnDefinition Width="*"/>
        <!-- Program Title -->
        <ColumnDefinition Width="300"/>
        <!-- Program Time -->
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Grid.RenderTransform>
        <TransformGroup>
          <ScaleTransform ScaleX="1" ScaleY="1"/>
        </TransformGroup>
      </Grid.RenderTransform>

      <Border x:Name="Item1" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="#33000000" BorderThickness="0" Margin="0,-5,5,-5"/>
      <Border x:Name="Item2" Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="#33000000" BorderThickness="0" Margin="0,-5,15,-5"/>
      <Border x:Name="Item3" Grid.Row="0" Grid.Column="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="#33000000" BorderThickness="0" Margin="-10,-5,-15,-5"/>

      <Border x:Name="Item2_record" Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="0,-5,15,-5"/>
      <Border x:Name="Item3_record" Grid.Row="0" Grid.Column="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="-10,-5,-15,-5"/>

      <Border x:Name="Item1_overlay" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="0,-5,5,-5"/>
      <Border x:Name="Item2_overlay" Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="0,-5,15,-5"/>
      <Border x:Name="Item3_overlay" Grid.Row="0" Grid.Column="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="-10,-5,-15,-5"/>

      <Image x:Name="ChannelLogo" Grid.Column="0" Grid.Row="0" Width="{ThemeResource ChannelLogoMedium}" Stretch="Uniform" Margin="10,0,10,0" VerticalAlignment="Center">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding Program.ChannelLogoType}" fanart:FanArtType="Banner" fanart:FanArtName="{Binding Program.ChannelName}" fanart:MaxWidth="0" fanart:MaxHeight="0"/>
        </Image.Source>
      </Image>

      <Label Grid.Column="1" Grid.Row="0" x:Name="NameLabel" Margin="3,5,0,5" Content="{Binding Program.ChannelName}" Color="{ThemeResource TextColor}"
       VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}"/>
      
      <Label Grid.Column="2" Grid.Row="0" x:Name="CurrentProgramLabel" Margin="5,5,0,5" VerticalAlignment="Center"
        Content="{Binding [Title]}" FontSize="{ThemeResource SmallFontSize}"
        Color="{ThemeResource TextColor}"/>

      <!-- Shows the progress of current time in relation to the current playing program -->
      <Label Grid.Column="3" Grid.Row="0" x:Name="ProgramLabel" Margin="5,5,0,5" VerticalAlignment="Center"
        Content="{Binding [StartTime]}" FontSize="{ThemeResource SmallFontSize}"
        Color="{ThemeResource TextColor}"/>
    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="ChannelWithCurrentProgramDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid x:Name="ItemControl" VerticalAlignment="Center" HorizontalAlignment="Stretch" RenderTransformOrigin="0.5,0.5"
          Margin="-80,0,-10,0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <!-- Channel Logo -->
        <ColumnDefinition Width="400"/>
        <!-- Channel Name -->
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
        <!-- Program Title -->
        <ColumnDefinition Width="200"/>
        <!-- Program Time -->
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Grid.RenderTransform>
        <TransformGroup>
          <ScaleTransform ScaleX="1" ScaleY="1"/>
        </TransformGroup>
      </Grid.RenderTransform>

      <Border x:Name="Item1" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="#33000000" BorderThickness="0" Margin="0,-5,5,-5"/>
      <Border x:Name="Item2" Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="#33000000" BorderThickness="0" Margin="0,-5,5,-5"/>
      <Border x:Name="Item3" Grid.Row="0" Grid.Column="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="#33000000" BorderThickness="0" Margin="0,-5,15,-5"/>
      <Border x:Name="Item4" Grid.Row="0" Grid.Column="4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="#33000000" BorderThickness="0" Margin="-10,-5,-15,-5"/>

      <Border x:Name="Item3_record" Grid.Row="0" Grid.Column="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="0,-5,15,-5"/>
      <Border x:Name="Item4_record" Grid.Row="0" Grid.Column="4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="-10,-5,-15,-5"/>

      <Border x:Name="Item1_overlay" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="0,-5,5,-5"/>
      <Border x:Name="Item2_overlay" Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="0,-5,5,-5"/>
      <Border x:Name="Item3_overlay" Grid.Row="0" Grid.Column="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="0,-5,15,-5"/>
      <Border x:Name="Item4_overlay" Grid.Row="0" Grid.Column="4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="-10,-5,-15,-5"/>
      
      <Label Grid.Column="1" Grid.Row="0" x:Name="NameLabel" Margin="3,5,0,5" Content="{Binding [Name]}" Color="{ThemeResource TextColor}"
       VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}"/>

      <Image x:Name="ChannelLogo" Grid.Column="0" Grid.Row="0" Width="{ThemeResource ChannelLogoMedium}" Stretch="Uniform" Margin="10,0,10,0" VerticalAlignment="Center">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding ChannelLogoType}" fanart:FanArtType="Banner" fanart:FanArtName="{Binding ChannelLogoPath}" fanart:MaxWidth="0" fanart:MaxHeight="0"/>
        </Image.Source>
      </Image>

      <Label Grid.Column="2" Grid.Row="0" x:Name="CurrentProgramLabel" Margin="5,5,5,5"
             Content="{Binding Programs[0].Program.Title}" FontSize="{ThemeResource SmallFontSize}"
             Color="{ThemeResource TextColor}"/>
      <Label Grid.Column="3" Grid.Row="0" x:Name="NextProgramLabel" Margin="5,4,15,4"
             Content="{Binding Programs[1].Program.Title}" FontSize="{ThemeResource SmallFontSize}"
             Color="{ThemeResource TextColor}"/>
      
      <!-- Shows the progress of current time in relation to the current playing program -->
      <ProgressBar x:Name="CurrentProgramProgress" Grid.Column="4" Grid.Row="0" Height="20" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                    Value="{Binding Programs[0].Progress}" Style="{ThemeResource TVProgressBarStyle}"/>
    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="SearchProgramDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid x:Name="ItemControl" VerticalAlignment="Center" HorizontalAlignment="Stretch" RenderTransformOrigin="0.5,0.5"
          Margin="-80,0,-15,0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <!-- Channel Logo -->
        <ColumnDefinition Width="350"/>
        <!-- Channel Name -->
        <ColumnDefinition Width="*"/>
        <!-- Program Title -->
        <ColumnDefinition Width="400"/>
        <!-- Program Time -->
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Grid.RenderTransform>
        <TransformGroup>
          <ScaleTransform ScaleX="1" ScaleY="1"/>
        </TransformGroup>
      </Grid.RenderTransform>

      <Image Grid.Column="2" x:Name="SeriesRecIndicator" Source="tvguide_recordserie_button.png" IsVisible="False"
       Height="{ThemeResource SeriesRecIndicatorHeight}" Stretch="Uniform" HorizontalAlignment="Right"/>

      <Border x:Name="Item1" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="#33000000" BorderThickness="0" Margin="0,-5,5,-5"/>
      <Border x:Name="Item2" Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="#33000000" BorderThickness="0" Margin="0,-5,15,-5"/>
      <Border x:Name="Item3" Grid.Row="0" Grid.Column="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="#33000000" BorderThickness="0" Margin="-10,-5,-15,-5"/>

      <Border x:Name="Item2_record" Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="0,-5,15,-5"/>
      <Border x:Name="Item3_record" Grid.Row="0" Grid.Column="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="-10,-5,-15,-5"/>

      <Border x:Name="Item1_overlay" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
        Background="Transparent" BorderThickness="0" Margin="0,-5,5,-5"/>
      <Border x:Name="Item2_overlay" Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="0,-5,15,-5"/>
      <Border x:Name="Item3_overlay" Grid.Row="0" Grid.Column="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="-10,-5,-15,-5"/>

      <Label Grid.Column="1" Grid.Row="0" x:Name="NameLabel" Margin="3,5,20,5" Content="{Binding Program.ChannelName}" Color="{ThemeResource TextColor}"
       VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}"/>

      <Image x:Name="ChannelLogo" Grid.Column="0" Grid.Row="0" Width="{ThemeResource ChannelLogoMedium}" Stretch="Uniform" Margin="10,0,10,0" VerticalAlignment="Center">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding Program.ChannelLogoType}" fanart:FanArtType="Banner" fanart:FanArtName="{Binding Program.ChannelName}" fanart:MaxWidth="0" fanart:MaxHeight="0"/>
        </Image.Source>
      </Image>

      <Label Grid.Column="2" Grid.Row="0" x:Name="CurrentProgramLabel" Margin="5,5,20,5"
        Content="{Binding [Name]}" FontSize="{ThemeResource SmallFontSize}"
        Color="{ThemeResource TextColor}"/>

      <StackPanel Orientation="Horizontal"  Grid.Column="3" Grid.Row="0" Margin="5,5,15,5">
        <Label x:Name="ProgramStart" Margin="0,0,0,0"  Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"
               Content="{Binding [StartTime]}"/>
        <Label Margin="5,0,5,0" Content="—" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
        <Label x:Name="ProgramEnd" Content="{Binding [EndTime]}" FontSize="{ThemeResource SmallFontSize}"
            Color="{ThemeResource TextColor}"/>
      </StackPanel>
      
    </Grid>
  </DataTemplate>

  <Style x:Key="ChannelWithLogoAndProgramListViewStyle" BasedOn="{ThemeResource TVListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource ChannelWithCurrentProgramDataTemplate}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource TVItemContainerStyle2}"/>
  </Style>

  <Style x:Key="SingleChannelWithLogoAndProgramListViewStyle" BasedOn="{ThemeResource TVListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource SingleChannelWithCurrentProgramDataTemplate}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource TVItemContainerStyle}"/>
  </Style>

  <Style x:Key="SearchProgramListViewStyle" BasedOn="{ThemeResource TVListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource SearchProgramDataTemplate}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource TVItemContainerStyle}"/>
  </Style>

  <DataTemplate x:Key="ExtScheduleItemDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid x:Name="ItemControl" VerticalAlignment="Center" HorizontalAlignment="Stretch">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="480"/>
        <ColumnDefinition Width="780"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>

      <Border x:Name="Item1" Grid.Row="0" Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="#33000000" BorderThickness="0" Margin="0,-5,2,-5"/>
      <Border x:Name="Item2" Grid.Row="0" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="#33000000" BorderThickness="0" Margin="2,-5,2,-5"/>
      <Border x:Name="Item3" Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="#33000000" BorderThickness="0" Margin="2,-5,-2,-5"/>

      <Border x:Name="Item1_overlay" Grid.Row="0" Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="0,-5,2,-5"/>
      <Border x:Name="Item2_overlay" Grid.Row="0" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="2,-5,2,-5"/>
      <Border x:Name="Item3_overlay" Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="2,-5,-2,-5"/>

      <Border x:Name="Item2_record" Grid.Row="0" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="2,-5,2,-5"/>
      <Border x:Name="Item3_record" Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="2,-5,-2,-5"/>

      <StackPanel Orientation="Horizontal" Grid.Column="0" x:Name="Channel">
        <Image x:Name="ChannelLogo" Height="40" Stretch="Uniform" Margin="5,2,5,2">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding [ChannelLogoType]}" fanart:FanArtType="Banner" fanart:FanArtName="{Binding [ChannelName]}"
                                      fanart:MaxWidth="0" fanart:MaxHeight="0"/>
          </Image.Source>
        </Image>
        <Label x:Name="ChannelText" Scroll="Auto" Content="{Binding [ChannelName]}" Color="{ThemeResource TextColor}" 
               FontSize="{ThemeResource SmallFontSize}" Margin="5,0,10,0" VerticalAlignment="Center"/>
      </StackPanel>

      <Label x:Name="ItemLabel" Grid.Column="1" Color="{ThemeResource TextColor}" Scroll="Auto"
             FontSize="{ThemeResource SmallFontSize}" Margin="10,0,10,0" VerticalAlignment="Center">
        <Label.Content>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0}+{1}+{2}">
            <Binding Path="[Name]" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}{0}"/>
            <Binding Source=" "/>
            <Binding Path="[Series]" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}{0}"/>
          </MultiBinding>
        </Label.Content>
      </Label>

      <Label Grid.Column="2" x:Name="ProgramStartEnd" Margin="10,0,10,0"  Color="{ThemeResource TextColor}" VerticalAlignment="Center"
             FontSize="{ThemeResource SmallFontSize}">
        <Label.Content>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0}+{1}+{2}">
            <Binding Path="[StartTime]"/>
            <Binding Source=" — "/>
            <Binding Path="[EndTime]"/>
          </MultiBinding>
        </Label.Content>
      </Label>
      
    </Grid>
  </DataTemplate>

  <!-- ScheduleDataTemplate contains channel logo, title, recording type -->
  <DataTemplate x:Key="ScheduleDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid x:Name="ItemControl" VerticalAlignment="Center" HorizontalAlignment="Stretch">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="430"/>
        <ColumnDefinition Width="550"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="400"/>
      </Grid.ColumnDefinitions>

      <Border x:Name="Item1" Grid.Row="0" Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="#33000000" BorderThickness="0" Margin="-2,-5,2,-5"/>
      <Border x:Name="Item2" Grid.Row="0" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="#33000000" BorderThickness="0" Margin="2,-5,2,-5"/>
      <Border x:Name="Item3" Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="#33000000" BorderThickness="0" Margin="2,-5,2,-5"/>
      <Border x:Name="Item4" Grid.Row="0" Grid.Column="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="#33000000" BorderThickness="0" Margin="2,-5,0,-5"/>

      <StackPanel Orientation="Horizontal" Grid.Column="0" x:Name="Channel">
        <Image x:Name="ChannelLogo" Height="40" Stretch="Uniform" Margin="5,2,5,2">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding [ChannelLogoType]}" fanart:FanArtType="Banner" fanart:FanArtName="{Binding [ChannelName]}"
                                      fanart:MaxWidth="0" fanart:MaxHeight="0"/>
          </Image.Source>
        </Image>
      <Label x:Name="ChannelText" Content="{Binding [ChannelName]}" Color="{ThemeResource TextColor}"
               FontSize="{ThemeResource SmallFontSize}" Margin="5,0,10,0" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
      </StackPanel>
      
      <Label x:Name="ItemLabel" Grid.Column="1" Content="{Binding [Name]}" Color="{ThemeResource TextColor}"
             FontSize="{ThemeResource SmallFontSize}" Margin="10,0,10,0" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>

      <Label x:Name="TypeLabel" Grid.Column="2" Content="{Binding [ScheduleType]}" VerticalAlignment="Center"
             Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" Margin="10,0,10,0" HorizontalAlignment="Stretch" />

      <Label Grid.Column="3" x:Name="ProgramStartEnd" Margin="10,0,10,0"  Color="{ThemeResource TextColor}" VerticalAlignment="Center"
             FontSize="{ThemeResource SmallFontSize}">
        <Label.Content>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0}+{1}+{2}">
            <Binding Path="[StartTime]"/>
            <Binding Source=" — "/>
            <Binding Path="[EndTime]"/>
          </MultiBinding>
        </Label.Content>
      </Label>
      
    </Grid>
  </DataTemplate>

  <!-- ScheduleListViewStyle is used for schedule list, including channel, program and recording type -->
  <Style x:Key="ScheduleListViewStyle" BasedOn="{ThemeResource TVListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource ScheduleDataTemplate}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource ScheduleItemContainerStyle}"/>
  </Style>

  <Style x:Key="ExtScheduleListViewStyle" BasedOn="{ThemeResource TVListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource ExtScheduleItemDataTemplate}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource ExtScheduleItemContainerStyle}"/>
  </Style>

</ResourceDictionary>
