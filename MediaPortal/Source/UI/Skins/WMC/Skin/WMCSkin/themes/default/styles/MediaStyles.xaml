<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:collections="clr-namespace:MediaPortal.UI.Presentation.DataObjects;assembly=MediaPortal.UI"
    xmlns:navitems="clr-namespace:MediaPortal.UiComponents.Media.Models.Navigation;assembly=Media"
    xmlns:media="clr-namespace:MediaPortal.UiComponents.Media.Models.AspectWrappers;assembly=Media"
    xmlns:latestmedia="clr-namespace:MediaPortal.UiComponents.Media.Models;assembly=Media"
    xmlns:mp_special_controls="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Controls;assembly=SkinEngine"
    xmlns:aspect="clr-namespace:MediaPortal.Common.MediaManagement.DefaultItemAspects;assembly=MediaPortal.Common"
    xmlns:fanart="clr-namespace:MediaPortal.Extensions.UserServices.FanArtService.Client;assembly=FanArtService.Client"
    xmlns:wmc_converters="clr-namespace:MediaPortal.UiComponents.WMCSkin.Converters;assembly=WMCSkin"
    DependsOnStyleResources="OSD,FullScreenContentConsts,MediaButtons,MediaColors,MediaConsts,Consts,Colors,Buttons,OtherControls,OtherControlsOverrides"
    >

  <Model x:Key="FanArtBackgroundModel" Id="8F42C8E9-E8A3-475C-A50A-99E1E644DC91"/>
  <Model x:Key="ViewModeModel" Id="6997CD35-63F0-4F96-8997-E18C9382E2DC"/>
  <Model x:Key="GeneralPlayerModel" Id="A2F24149-B44C-498b-AE93-288213B87A1A"/>
  <Model x:Key="SkinSettingsModel" Id="13961014-16C4-4361-9751-8E2C585EFD44"/>

  <MultiAspectAttributeConverter x:Key="MultiAspectAttributeConverter"/>
  <wmc_converters:RoundingFormatConverter x:Key="RoundingFormatConverter"/>

  <!-- ***************************************** OSD ************************************************** -->
  <Storyboard x:Key="OSDCurrentPlayerControlStoryboard" FillBehavior="Stop">
    <!-- TODO: nicer background cycle effect -->
    <ColorAnimationUsingKeyFrames RepeatBehavior="Forever" AutoReverse="true" BeginTime="00:00:00"
        Storyboard.TargetName="OSDInfoArea" Storyboard.TargetProperty="Fill.GradientStops[0].Color">
      <SplineColorKeyFrame KeyTime="00:00:00" Value="{ThemeResource OSDCurrentPlayerControlBackgroundColor1}"/>
    </ColorAnimationUsingKeyFrames>
  </Storyboard>

  <Style x:Key="PrimaryVideoOSDStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <ControlTemplate.Resources>
            <Model x:Key="VideoPlayerModel" Id="4E2301B4-3C17-4a1d-8DE5-2CEA169A0256"/>
          </ControlTemplate.Resources>

          <Control Style="{ThemeResource OSDContainer}" HorizontalAlignment="Stretch" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                   Margin="10,0,10,10">
            <Control.Resources>
              <ControlTemplate x:Key="OSD_Progress_Template">
                <DockPanel LastChildFill="true" Margin="100,10,100,10">
                  <Grid DockPanel.Dock="Center" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="150"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="150"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <ProgressBar Grid.Row="0" Grid.Column="1" x:Name="ProgressBar" Height="35" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                        Value="{Binding Path=PercentPlayed, Mode=TwoWay}" Style="{ThemeResource PlayerControlsProgressBarStyle}"/>

                    <Image Grid.Column="2" Grid.Row="0" Source="PlayerControl\Time.shadow.png" Stretch="Fill" Width="140" Height="70" Margin="0,0,-20,0"/>
                    <Label x:Name="VideoDurationLabel" Grid.Column="2" Grid.Row="0" FontFamily="SegoeUIBold" Opacity="0.9" Margin="20,0,0,0"
                        Content="{Binding Duration}" HorizontalAlignment="Center" VerticalAlignment="Center"
                        Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
                  </Grid>
                  <!-- PlayerGrid -->
                </DockPanel>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_Controls_Template">
                <DockPanel Margin="0" HorizontalAlignment="Right">
                  <Grid DockPanel.Dock="Right">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="20"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <StackPanel x:Name="PlayControlsPanel" Orientation="Horizontal" Grid.Column="1" Grid.Row="1" Margin="0"
                                VerticalAlignment="Center" HorizontalAlignment="Right">
                      <StackPanel.LayoutTransform>
                        <TransformGroup>
                          <ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
                        </TransformGroup>
                      </StackPanel.LayoutTransform>
                      <Button x:Name="PreviousChapterButton" Style="{ThemeResource PreviousChapterButtonStyle}" Margin="0"
                              IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.ChaptersAvailable}"
                              Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.PrevChapter}"/>
                      <Button x:Name="NextChapterButton" Style="{ThemeResource NextChapterButtonStyle}" Margin="0"
                              IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.ChaptersAvailable}"
                              Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.NextChapter}"/>
                      <Button x:Name="SelectChapterButton" Style="{ThemeResource SelectChapterButtonStyle}" Margin="0"
                              IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.ChaptersAvailable}"
                              Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseChapterDialog}"/>
                      <Image Source="PlayerControl\DIVIDER.PNG" Height="35" Stretch="Uniform" VerticalAlignment="Center" Margin="3,0,3,0"/>
                      <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="0" IsVisible="{Binding CanStop}"
                              Command="{Command Stop}"/>
                      <Button x:Name="SkipBackButton" Style="{ThemeResource SkipBackButtonStyle}" Margin="0" IsVisible="{Binding CanSkipBack}"
                              Command="{Command Previous}"/>
                      <Button x:Name="RewindButton" Style="{ThemeResource RewindButtonStyle}" Margin="0" IsVisible="{Binding CanSeekBackward}"
                              Command="{Command SeekBackward}"/>
                      <Button x:Name="PlayButton" Style="{ThemeResource PlayButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPlay}"
                              Command="{Command Play}"/>
                      <Button x:Name="PauseButton" Style="{ThemeResource PauseButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPause}"
                              Command="{Command Pause}"/>
                      <Button x:Name="ForwardButton" Style="{ThemeResource ForwardButtonStyle}" Margin="0" IsVisible="{Binding CanSeekForward}"
                              Command="{Command SeekForward}"/>
                      <Button x:Name="SkipForwardButton" Style="{ThemeResource SkipForwardButtonStyle}" Margin="0" IsVisible="{Binding CanSkipForward}"
                              Command="{Command Next}"/>
                      <Image Source="PlayerControl\DIVIDER.PNG" Height="35" Stretch="Uniform" VerticalAlignment="Center" Margin="3,0,3,0"/>
                      <Button x:Name="SelectMenuButton" Style="{ThemeResource SelectContextMenuButtonStyle}" Margin="0"
                              Command="{Command Source={StaticResource VideoPlayerModel},Path=OpenPlayerConfigurationDialog}"/>
                      <Button x:Name="SelectTitleButton" Style="{ThemeResource SelectChapterButtonStyle}" Margin="0"
                              IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.TitlesAvailable}"
                              Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseTitleDialog}"/>
                      <Button x:Name="SelectSubtitleButton" Style="{ThemeResource SelectSubtitleButtonStyle}" Margin="0"
                              IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.SubtitlesAvailable}"
                              Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseSubtitleDialog}"/>
                      <Button x:Name="AudioActiveButton" Style="{ThemeResource AudioActiveButtonStyle}" Margin="0"
                              Command="{Command AudioButtonPressed}" IsVisible="{Binding IsAudio}"/>
                      <Button x:Name="AudioInactiveButton" Style="{ThemeResource AudioInactiveButtonStyle}" Margin="0"
                              Command="{Command AudioButtonPressed}" IsVisible="{Binding !IsAudio}" />
                      <Button x:Name="VolumeDownButton" Style="{ThemeResource VolumeDownButtonStyle}" Margin="0"
                              Command="{Command Source={StaticResource GeneralPlayerModel},Path=VolumeDown}"/>
                      <Button x:Name="VolumeUpButton" Style="{ThemeResource VolumeUpButtonStyle}" Margin="0" 
                              Command="{Command Source={StaticResource GeneralPlayerModel},Path=VolumeUp}"/>
                    </StackPanel>
                    <!-- PlayControlsPanel -->
                  </Grid>
                  <!-- PlayerGrid -->
                </DockPanel>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_InfoArea_Template">
                <Grid x:Name="PlayerGrid" Margin="5,0,5,0"
                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                  </Grid.RowDefinitions>
                  <Label x:Name="VideoName" Content="{Binding Path=MediaItemTitle}" Color="{ThemeResource TextColor}"
                         FontFamily="SegoeUIBold" MaxWidth="900" Margin="20,5,10,-30" ScrollDelay="0" Scroll="Auto"
                         HorizontalAlignment="Left" VerticalAlignment="Bottom">
                    <Label.Width>
                      <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}1930-{0}">
                        <Binding Source="{Binding ElementName=PlayControlsPanel, Path=ActualWidth}"/>
                      </MultiBinding>
                    </Label.Width>
                  </Label>
                </Grid>
              </ControlTemplate>

            </Control.Resources>
          </Control>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="PlayerContext" Value="PrimaryPlayer"/>
  </Style>

  <Style x:Key="PrimaryAudioOSDStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <ControlTemplate.Resources>
            <Model x:Key="AudioPlayerModel" Id="D8998340-DA2D-42be-A29B-6D7A72AEA2DC"/>
       
          </ControlTemplate.Resources>

          <Control Style="{ThemeResource OSDAudioContainer}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                   Margin="10,0,10,10" HorizontalAlignment="Stretch">
            <Control.Resources>
              <ControlTemplate x:Key="OSD_InfoArea_Template">

                <Grid x:Name="PlayerGrid" Margin="5,0,5,0"
                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                </Grid>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_Progress_Template">
                <DockPanel LastChildFill="true" Margin="550,10,70,10" HorizontalAlignment="Stretch">
                  <ProgressBar x:Name="ProgressBar" Height="35" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                               Value="{Binding Path=PercentPlayed, Mode=TwoWay}" Style="{ThemeResource PlayerControlsProgressBarStyle}"/>
                </DockPanel>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_Controls_Template">
                <DockPanel Margin="0" HorizontalAlignment="Right">
                  <Grid DockPanel.Dock="Right">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="10"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <StackPanel x:Name="PlayControlsPanel" Orientation="Horizontal" Grid.Column="1" Grid.Row="1" Margin="0"
                                VerticalAlignment="Center" HorizontalAlignment="Right">
                      <StackPanel.LayoutTransform>
                        <TransformGroup>
                          <ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
                        </TransformGroup>
                      </StackPanel.LayoutTransform>

                      <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="0" IsVisible="{Binding CanStop}"
                              Command="{Command Stop}"/>
                      <Button x:Name="SkipBackButton" Style="{ThemeResource SkipBackButtonStyle}" Margin="0" IsVisible="{Binding CanSkipBack}"
                              Command="{Command Previous}"/>
                      <Button x:Name="RewindButton" Style="{ThemeResource RewindButtonStyle}" Margin="0" IsVisible="{Binding CanSeekBackward}"
                              Command="{Command SeekBackward}"/>
                      <Button x:Name="PlayButton" Style="{ThemeResource PlayButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPlay}"
                              Command="{Command Play}"/>
                      <Button x:Name="PauseButton" Style="{ThemeResource PauseButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPause}"
                              Command="{Command Pause}"/>
                      <Button x:Name="ForwardButton" Style="{ThemeResource ForwardButtonStyle}" Margin="0" IsVisible="{Binding CanSeekForward}"
                              Command="{Command SeekForward}"/>
                      <Button x:Name="SkipForwardButton" Style="{ThemeResource SkipForwardButtonStyle}" Margin="0" IsVisible="{Binding CanSkipForward}"
                              Command="{Command Next}"/>
                      <Image Source="PlayerControl\DIVIDER.PNG" Height="35" Stretch="Uniform" VerticalAlignment="Center" Margin="3,0,3,0"/>
                      <Button x:Name="AudioActiveButton" Style="{ThemeResource AudioActiveButtonStyle}" Margin="0"
                              Command="{Command AudioButtonPressed}" IsVisible="{Binding IsAudio}"/>
                      <Button x:Name="AudioInactiveButton" Style="{ThemeResource AudioInactiveButtonStyle}" Margin="0"
                              Command="{Command AudioButtonPressed}" IsVisible="{Binding !IsAudio}" />
                      <Button x:Name="VolumeDownButton" Style="{ThemeResource VolumeDownButtonStyle}" Margin="0"
                              Command="{Command Source={StaticResource GeneralPlayerModel},Path=VolumeDown}"/>
                      <Button x:Name="VolumeUpButton" Style="{ThemeResource VolumeUpButtonStyle}" Margin="0" 
                              Command="{Command Source={StaticResource GeneralPlayerModel},Path=VolumeUp}"/>
                    </StackPanel>
                    <!-- PlayControlsPanel -->
                  </Grid>
                  <!-- PlayerGrid -->
                </DockPanel>
              </ControlTemplate>
            </Control.Resources>
          </Control>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="PlayerContext" Value="PrimaryPlayer"/>
  </Style>

  <Style x:Key="PrimaryDvdOSDStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <ControlTemplate.Resources>
            <Model x:Key="VideoPlayerModel" Id="4E2301B4-3C17-4a1d-8DE5-2CEA169A0256"/>
          </ControlTemplate.Resources>

          <Control Style="{ThemeResource OSDContainer}" HorizontalAlignment="Stretch" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                   Margin="10,0,10,10">
            <Control.Resources>
              <ControlTemplate x:Key="OSD_Progress_Template">
                <DockPanel LastChildFill="true" Margin="100,10,100,10">
                  <Grid DockPanel.Dock="Center" HorizontalAlignment="Stretch">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="150"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="150"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <ProgressBar Grid.Row="0" Grid.Column="1" x:Name="ProgressBar" Height="35" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                        Value="{Binding Path=PercentPlayed, Mode=TwoWay}" Style="{ThemeResource PlayerControlsProgressBarStyle}"/>

                    <Image Grid.Column="2" Grid.Row="0" Source="PlayerControl\Time.shadow.png" Stretch="Fill" Width="140" Height="70" Margin="0,0,-20,0"/>
                    <Label x:Name="VideoDurationLabel" Grid.Column="2" Grid.Row="0" FontFamily="SegoeUIBold" Opacity="0.9" Margin="20,0,0,0"
                        Content="{Binding Duration}" HorizontalAlignment="Center" VerticalAlignment="Center"
                        Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
                  </Grid>
                  <!-- PlayerGrid -->
                </DockPanel>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_Controls_Template">
                <DockPanel Margin="0" HorizontalAlignment="Right">
                  <Grid DockPanel.Dock="Right">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="20"/>
                      <ColumnDefinition Width="*"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <StackPanel x:Name="PlayControlsPanel" Orientation="Horizontal" Grid.Column="1" Grid.Row="1" Margin="0"
                                VerticalAlignment="Center" HorizontalAlignment="Right">
                      <StackPanel.LayoutTransform>
                        <TransformGroup>
                          <ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
                        </TransformGroup>
                      </StackPanel.LayoutTransform>

                      <!-- PlayControlsPanel -->
                      <Button x:Name="PreviousChapterButton" Style="{ThemeResource PreviousChapterButtonStyle}" Margin="0"
                              IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.ChaptersAvailable}"
                              Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.PrevChapter}"/>
                      <Button x:Name="NextChapterButton" Style="{ThemeResource NextChapterButtonStyle}" Margin="0"
                              IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.ChaptersAvailable}"
                              Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.NextChapter}"/>
                      <Button x:Name="SelectChapterButton" Style="{ThemeResource SelectChapterButtonStyle}" Margin="0"
                              IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.ChaptersAvailable}"
                              Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseChapterDialog}"/>
                      <Button x:Name="ShowDvdMenuButton" Style="{ThemeResource ShowDvdMenuButtonStyle}" Margin="5,0,5,0" 
                              Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.ShowDvdMenu}"/>
                      <Image Source="PlayerControl\DIVIDER.PNG" Height="35" Stretch="Uniform" VerticalAlignment="Center" Margin="3,0,3,0"/>
                      <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="0" IsVisible="{Binding CanStop}"
                              Command="{Command Stop}"/>
                      <Button x:Name="SkipBackButton" Style="{ThemeResource SkipBackButtonStyle}" Margin="0" IsVisible="{Binding CanSkipBack}"
                              Command="{Command Previous}"/>
                      <Button x:Name="RewindButton" Style="{ThemeResource RewindButtonStyle}" Margin="0" IsVisible="{Binding CanSeekBackward}"
                              Command="{Command SeekBackward}"/>
                      <Button x:Name="PlayButton" Style="{ThemeResource PlayButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPlay}"
                              Command="{Command Play}"/>
                      <Button x:Name="PauseButton" Style="{ThemeResource PauseButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPause}"
                              Command="{Command Pause}"/>
                      <Button x:Name="ForwardButton" Style="{ThemeResource ForwardButtonStyle}" Margin="0" IsVisible="{Binding CanSeekForward}"
                              Command="{Command SeekForward}"/>
                      <Button x:Name="SkipForwardButton" Style="{ThemeResource SkipForwardButtonStyle}" Margin="0" IsVisible="{Binding CanSkipForward}"
                              Command="{Command Next}"/>
                      <Image Source="PlayerControl\DIVIDER.PNG" Height="35" Stretch="Uniform" VerticalAlignment="Center" Margin="3,0,3,0"/>
                      <Button x:Name="SelectMenuButton" Style="{ThemeResource SelectContextMenuButtonStyle}" Margin="0"
                              Command="{Command Source={StaticResource VideoPlayerModel},Path=OpenPlayerConfigurationDialog}"/>
                      <Button x:Name="SelectTitleButton" Style="{ThemeResource SelectChapterButtonStyle}" Margin="0"
                              IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.TitlesAvailable}"
                              Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseTitleDialog}"/>
                      <Button x:Name="SelectSubtitleButton" Style="{ThemeResource SelectSubtitleButtonStyle}" Margin="0"
                              IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.SubtitlesAvailable}"
                              Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseSubtitleDialog}"/>
                      <Button x:Name="AudioActiveButton" Style="{ThemeResource AudioActiveButtonStyle}" Margin="0"
                              Command="{Command AudioButtonPressed}" IsVisible="{Binding IsAudio}"/>
                      <Button x:Name="AudioInactiveButton" Style="{ThemeResource AudioInactiveButtonStyle}" Margin="0"
                              Command="{Command AudioButtonPressed}" IsVisible="{Binding !IsAudio}" />
                      <Button x:Name="VolumeDownButton" Style="{ThemeResource VolumeDownButtonStyle}" Margin="0"
                              Command="{Command Source={StaticResource GeneralPlayerModel},Path=VolumeDown}"/>
                      <Button x:Name="VolumeUpButton" Style="{ThemeResource VolumeUpButtonStyle}" Margin="0" 
                              Command="{Command Source={StaticResource GeneralPlayerModel},Path=VolumeUp}"/>
                    </StackPanel>
                    <!-- PlayControlsPanel -->
                  </Grid>
                  <!-- PlayerGrid -->
                </DockPanel>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_InfoArea_Template">
                <Grid x:Name="PlayerGrid" Margin="5,0,5,0"
                      HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                  </Grid.RowDefinitions>
                  <Label x:Name="VideoName" Content="{Binding Path=MediaItemTitle}" Color="{ThemeResource TextColor}"
                         FontFamily="SegoeUIBold" MaxWidth="900" Margin="20,5,10,-30" ScrollDelay="0" Scroll="Auto"
                         HorizontalAlignment="Left" VerticalAlignment="Bottom">
                    <Label.Width>
                      <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}1930-{0}">
                        <Binding Source="{Binding ElementName=PlayControlsPanel, Path=ActualWidth}"/>
                      </MultiBinding>
                    </Label.Width>
                  </Label>
                </Grid>
              </ControlTemplate>

            </Control.Resources>
          </Control>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="PlayerContext" Value="PrimaryPlayer"/>
  </Style>

  <Style x:Key="PrimaryImageOSDStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <Grid x:Name="PlayerGrid" Margin="10"  DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Image Source="PlayerControl\BOTTOM.RIGHT.SHADOW.PNG" Stretch="Fill" Height="90" Margin="0,-10,-20,-20" Opacity="0.8" Grid.Column="1" Grid.Row="1" />

            <DockPanel x:Name="HeadLine" Grid.Row="0" Grid.Column="0" LastChildFill="True" HorizontalAlignment="Center">
              <Label x:Name="ImageName" DockPanel.Dock="Center" Margin="3" Content="{Binding Path=MediaItemTitle}" FontFamily="SegoeUIBold"
                     Color="{ThemeResource TextColor}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
            </DockPanel>

            <StackPanel x:Name="PlayControlsPanel" Orientation="Horizontal" Grid.Column="0" Grid.Row="0" Margin="0"
                        VerticalAlignment="Center" HorizontalAlignment="Right">
              <StackPanel.LayoutTransform>
                <TransformGroup>
                  <ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
                </TransformGroup>
              </StackPanel.LayoutTransform>
              <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="0" IsVisible="{Binding CanStop}"
                      Command="{Command Stop}"/>
              <Button x:Name="SkipBackButton" Style="{ThemeResource SkipBackButtonStyle}" Margin="0" IsVisible="{Binding CanSkipBack}"
                      Command="{Command Previous}"/>
              <Button x:Name="PlayButton" Style="{ThemeResource PlayButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPlay}"
                      Command="{Command Play}"/>
              <Button x:Name="PauseButton" Style="{ThemeResource PauseButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPause}"
                      Command="{Command Pause}"/>
              <Button x:Name="SkipForwardButton" Style="{ThemeResource SkipForwardButtonStyle}" Margin="0" IsVisible="{Binding CanSkipForward}"
                      Command="{Command Next}"/>
            </StackPanel>
              <!-- PlayControlsPanel -->
            </Grid>
          <!-- OSD_Background -->
          <ControlTemplate.Triggers>
            <Trigger Property="IsCurrentPlayer" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="CurrentPlayer_BeginStoryboard" Storyboard="{ThemeResource OSDCurrentPlayerControlStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="CurrentPlayer_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="PlayerContext" Value="PrimaryPlayer"/>
  </Style>

  <Storyboard x:Key="PressedPiPOSDButtonStoryboard" FillBehavior="HoldEnd">
    <ColorAnimationUsingKeyFrames BeginTime="00:00:00" RepeatBehavior="Forever" AutoReverse="True" Storyboard.TargetName="PiPControlBorder" Storyboard.TargetProperty="BorderBrush.Color">
      <SplineColorKeyFrame KeyTime="00:00:00" Value="{ThemeResource PipBorderColor}"/>
      <SplineColorKeyFrame KeyTime="00:00:01" Value="{ThemeResource OSDPipBorderFocusColor}"/>
    </ColorAnimationUsingKeyFrames>
    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="PiPButton" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX">
      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
      <SplineDoubleKeyFrame KeyTime="00:00:00.1" Value="{ThemeResource SquareButtonZoomCoefficient}"/>
    </DoubleAnimationUsingKeyFrames>
    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="PiPButton" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY">
      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
      <SplineDoubleKeyFrame KeyTime="00:00:00.1" Value="{ThemeResource SquareButtonZoomCoefficient}"/>
    </DoubleAnimationUsingKeyFrames>
  </Storyboard>

  <Style x:Key="SecondaryMediaOSDStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="FixedImageHeight" Value="{ThemeResource FullScreenContentVideoSecondaryPlayerOSDPipHeight}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <Border x:Name="OSD_Background" BorderBrush="{ThemeResource DialogBorderColor}"
                  CornerRadius="{ThemeResource OSDPlayControlCornerRadius}" BorderThickness="{ThemeResource OSDPlayControlBorderThickness}"
                  DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <Border.Background>
              <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
                <GradientStop Color="{ThemeResource DialogBackgroundGradient1Color}" Offset="0"/>
                <GradientStop Color="{ThemeResource DialogBackgroundGradient2Color}" Offset="1"/>
              </LinearGradientBrush>
            </Border.Background>
            <Grid x:Name="PlayerGrid" Margin="10,0,10,0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              
              <DockPanel x:Name="PiPHeaderPanel" Grid.Column="0" Grid.Row="0" LastChildFill="true" Margin="3">
                <Grid DockPanel.Dock="Center">
                  <!-- Has to be last control in DockPanel, LastChildFill! -->
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <Label x:Name="MediaName" Content="{Binding Path=MediaItemTitle}" Color="{ThemeResource TextColor}" Scroll="Auto"
                         HorizontalAlignment="Left" VerticalAlignment="Center" MaxWidth="500"/>
                </Grid>
              </DockPanel>
              
              <!-- PiPHeaderPanel -->
              <Button x:Name="PiPButton" Grid.Column="0" Grid.Row="1" Margin="5" Command="{Command SwitchPip}"
                      Style="{ThemeResource PipControlStyle}" VerticalAlignment="Center" HorizontalAlignment="Center">
                <Button.Triggers>
                  <Trigger Property="HasFocus" Value="True">
                    <Trigger.EnterActions>
                      <BeginStoryboard x:Name="Focused_BeginStoryboard" Storyboard="{ThemeResource PressedPiPOSDButtonStoryboard}"/>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                      <StopStoryboard BeginStoryboardName="Focused_BeginStoryboard"/>
                    </Trigger.ExitActions>
                  </Trigger>
                </Button.Triggers>
              </Button>
              <!-- PiPButton -->
              <!--Label x:Name="PlayerStateLabel" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Center"
                  Content="{Binding PlayerStateText}" Scroll="Auto" Color="{ThemeResource TextColor}"
                  MaxWidth="{ThemeResource FullScreenContentVideoSecondaryPlayerOSDTextMaxWidth}"/-->
              <StackPanel x:Name="PlayControlsPanel" Orientation="Horizontal" Grid.Column="0" Grid.Row="3" Margin="10"
                          VerticalAlignment="Center" HorizontalAlignment="Center" IsVisible="{Binding ShowMouseControls}">
                <StackPanel.LayoutTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
                  </TransformGroup>
                </StackPanel.LayoutTransform>
                <Button x:Name="SkipBackButton" Style="{ThemeResource SkipBackButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSkipBack}"
                        Command="{Command Previous}"/>
                <Button x:Name="RewindButton" Style="{ThemeResource RewindButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSeekBackward}"
                        Command="{Command SeekBackward}"/>
                <Button x:Name="PlayButton" Style="{ThemeResource PlayButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPlay}"
                        Command="{Command Play}"/>
                <Button x:Name="PauseButton" Style="{ThemeResource PauseButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPause}"
                        Command="{Command Pause}"/>
                <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanStop}"
                        Command="{Command Stop}"/>
                <Button x:Name="ForwardButton" Style="{ThemeResource ForwardButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSeekForward}"
                        Command="{Command SeekForward}"/>
                <Button x:Name="SkipForwardButton" Style="{ThemeResource SkipForwardButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSkipForward}"
                        Command="{Command Next}"/>
                <Button x:Name="AudioActiveButton" Style="{ThemeResource AudioActiveButtonStyle}"
                        Command="{Command AudioButtonPressed}" IsVisible="{Binding IsAudio}" />
                <Button x:Name="AudioInactiveButton" IsVisible="{Binding !IsAudio}" 
                        Style="{ThemeResource AudioInactiveButtonStyle}" Command="{Command AudioButtonPressed}"/>
              </StackPanel>
              <!-- PlayControlsPanel -->
            </Grid>
            <!-- PlayerGrid -->
          </Border>
          <!-- OSD_Background -->
          <ControlTemplate.Triggers>
            <Trigger Property="IsCurrentPlayer" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="CurrentPlayer_BeginStoryboard" Storyboard="{ThemeResource OSDCurrentPlayerControlStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="CurrentPlayer_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="PlayerContext" Value="SecondaryPlayer"/>
  </Style>

  <!-- ************************************** Playlist ************************************************ -->

  <Style x:Key="RemoveButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="GrowControl" RenderTransformOrigin="0.5,0.5">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.RenderTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
              </TransformGroup>
            </Grid.RenderTransform>
            <Control Style="{ThemeResource ButtonControlStyle}"
                VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            <Path x:Name="Cross1"
                VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                Margin="10" Stretch="Fill"
                Stroke="{ThemeResource DeleteCrossColor}" StrokeThickness="2" Data="M2,2 L23,23 z"/>
            <Path x:Name="Cross2"
                VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                Margin="10" Stretch="Fill"
                Stroke="{ThemeResource DeleteCrossColor}" StrokeThickness="2" Data="M2,23 L23,2 z"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasFocus" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="Focused_BeginStoryboard" Storyboard="{ThemeResource FocusedButtonStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="Focused_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="Pressed_BeginStoryboard" Storyboard="{ThemeResource PressedButtonStoryboard}"
                    HandoffBehavior="TemporaryReplace"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="Pressed_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="PlaylistItemContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button x:Name="ItemButton"
              Style="{ThemeResource ButtonWideStyle}" Context="{Binding}"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Command="{DynamicResource ResourceKey=Select_Command}">
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="ItemNameLabel" Property="Scroll" Value="Auto"/>
              </Trigger>
            </Button.Triggers>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="PlaylistMoveUpButtonStyle" TargetType="{x:Type Button}" BasedOn="{ThemeResource ArrowButtonUpStyle}"/>

  <Style x:Key="PlaylistMoveDownButtonStyle" TargetType="{x:Type Button}" BasedOn="{ThemeResource ArrowButtonDownStyle}"/>

  <Style x:Key="EditPlaylistItemContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Grid x:Name="ParentPanel">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ContentPresenter x:Name="PlaylistItemData" Grid.Column="0" Grid.Row="0" Margin="0,0,10,0"
                VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
            <Button x:Name="MoveUpButton" Grid.Column="1" Grid.Row="0" Margin="3" Width="30" Height="30"
                VerticalAlignment="Center" HorizontalAlignment="Center"
                Style="{ThemeResource PlaylistMoveUpButtonStyle}" Context="{Binding}"
                Command="{DynamicResource ResourceKey=MoveUp_Command}"
                SetFocus="{Binding Path=AdditionalProperties[IsUpButtonFocused],Mode=OneTime}"/>
            <Button x:Name="MoveDownButton" Grid.Column="2" Grid.Row="0" Margin="3" Width="30" Height="30"
                VerticalAlignment="Center" HorizontalAlignment="Center"
                Style="{ThemeResource PlaylistMoveDownButtonStyle}" Context="{Binding}"
                Command="{DynamicResource ResourceKey=MoveDown_Command}"
                SetFocus="{Binding Path=AdditionalProperties[IsDownButtonFocused],Mode=OneTime}"/>
            <Button x:Name="RemoveButton" Grid.Column="3" Grid.Row="0" Margin="3" Width="30" Height="30"
                VerticalAlignment="Center" HorizontalAlignment="Center"
                Style="{ThemeResource RemoveButtonStyle}" Context="{Binding}"
                Command="{DynamicResource ResourceKey=Remove_Command}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate x:Key="PlaylistsListItemDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid x:Name="ItemControl">
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="100"/>
      </Grid.ColumnDefinitions>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="0" Content="{Binding [Name]}"
          HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}"/>
      <Label Grid.Row="0" Grid.Column="1" Content="{Binding AdditionalProperties[PlaylistNumItems]}"
          HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}"/>
    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="PlaylistItemDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid Margin="0,3,0,3">
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Label x:Name="ItemNumberLabel" Grid.Column="0" Grid.Row="0"
            Content="{Binding [NumberStr]}"
            Color="{ThemeResource PlaylistItemColor}"
            VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}"/>
        <Label x:Name="ItemNameLabel" Grid.Column="1" Grid.Row="0" Margin="10,0,10,0"
            Content="{Binding SimpleTitle}"
            FontSize="{ThemeResource SmallFontSize}" HorizontalAlignment="Left" VerticalAlignment="Center">
          <Label.Color>
            <MultiBinding Converter="{ThemeResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
              <Binding Path="AdditionalProperties[IsCurrentItem]"/>
              <Binding Source="{ThemeResource PlaylistHighlightLabelColor}"/>
              <Binding Source="{ThemeResource PlaylistItemColor}"/>
            </MultiBinding>
          </Label.Color>
        </Label>
        <Label x:Name="ItemDurationLabel" Grid.Column="2" Grid.Row="0" FontSize="{ThemeResource SmallerFontSize}" VerticalAlignment="Center"
            Content="{Binding Duration}" Color="{ThemeResource PlaylistItemColor}"/>
      </Grid>
    </Grid>
  </DataTemplate>

  <DataStringProvider x:Key="PlaylistItemDataStringProvider" Path="SimpleTitle"/>

  <Style x:Key="PlaylistListViewStyle" BasedOn="{ThemeResource ContentsMenuListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource PlaylistItemDataTemplate}"/>
    <Setter Property="DataStringProvider" Value="{ThemeResource PlaylistItemDataStringProvider}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource PlaylistItemContainerStyle}"/>
  </Style>

  <Style x:Key="EditPlaylistListViewStyle" BasedOn="{ThemeResource ContentsMenuListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource PlaylistItemDataTemplate}"/>
    <Setter Property="DataStringProvider" Value="{ThemeResource PlaylistItemDataStringProvider}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource EditPlaylistItemContainerStyle}"/>
  </Style>

  <Style x:Key="PlaylistsListViewStyle" BasedOn="{ThemeResource ContentsMenuListViewStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ScrollViewer CanContentScroll="true"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                IsVisible="{Binding RelativeSource={RelativeSource TemplatedParent},Path=!IsEmpty}">
              <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            </ScrollViewer>
            <Label Content="[Media.NoPlaylistsAvailable]" IsVisible="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsEmpty}"
                Color="{ThemeResource HintTextColor}" FontSize="{ThemeResource SmallFontSize}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemTemplate" Value="{ThemeResource PlaylistsListItemDataTemplate}"/>
  </Style>

  <Style x:Key="MultiMarkablePlaylistsListViewStyle" BasedOn="{ThemeResource MarkableListViewStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ScrollViewer CanContentScroll="true"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                IsVisible="{Binding RelativeSource={RelativeSource TemplatedParent},Path=!IsEmpty}"
                Background="{ThemeResource ItemsControlShadowBackgroundColor}">
              <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            </ScrollViewer>
            <Label Content="[Media.NoPlaylistsAvailable]" IsVisible="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsEmpty}"
                Color="{ThemeResource HintTextColor}" FontSize="{ThemeResource SmallFontSize}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemTemplate" Value="{ThemeResource PlaylistsListItemDataTemplate}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource MultiMarkableShareContainerStyle}"/>
  </Style>

  <!--MediaItem view styles-->
  <Model x:Key="MediaItemsActionModel" Id="970649B2-CAE8-4830-A985-E5E78F3CB24F"/>

  <ControlTemplate x:Key="List_WatchedFlag_Template">
    <Grid>
      <Image x:Name="PartlyWatchedLabel" Height="33" Margin="0,4,5,0" Stretch="Uniform" Opacity="0.7"
               Source="partlywatched.png">
        <Image.IsVisible>
          <Binding Path="WatchPercentage" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} > 0"/>
        </Image.IsVisible>
      </Image>

      <Image x:Name="WatchedLabel" Height="33" Margin="0,4,5,0" Stretch="Uniform" Opacity="0.7"
               Source="watched.png">
        <Image.IsVisible>
          <Binding Path="WatchPercentage" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == 100"/>
        </Image.IsVisible>
      </Image>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="Cover_WatchedFlag_Template">
    <Grid>
      <Grid>
        <Image Source="flag.png" Height="90" Stretch="Uniform">
          <Image.IsVisible>
            <Binding Path="WatchPercentage" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} > 0"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="PartlyWatchedLabel" Height="25" Margin="0,7,7,0" Stretch="Uniform"
                     Source="partlywatched.png" HorizontalAlignment="Right" VerticalAlignment="Top"/>
        <Grid.IsVisible>
          <Binding Path="WatchPercentage" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} > 0"/>
        </Grid.IsVisible>
      </Grid>
      <Grid>
        <Grid.IsVisible>
          <Binding Path="WatchPercentage" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == 100"/>
        </Grid.IsVisible>
        <Image Source="flag.png" Height="90" Stretch="Uniform"/>
        <Image x:Name="WatchedLabel" Height="25" Margin="0,7,7,0" Stretch="Uniform"
                     Source="watched.png" HorizontalAlignment="Right" VerticalAlignment="Top"/>
      </Grid>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="Cover_OfflineFlag_Template">
    <Grid IsVisible="{Binding Path=Virtual}">
      <Image Source="flag.png" Height="90" Stretch="Uniform"/>
      <Image Height="35" Margin="0,7,7,0" Stretch="Uniform" Source="offline.png"
               HorizontalAlignment="Right" VerticalAlignment="Top">
      </Image>
      </Grid>
  </ControlTemplate>


  <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--++++++++++++++++++++++++ Filter +++++++++++++++++++++++++++-->
  
  <ControlTemplate x:Key="ListViewFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="5,0,5,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Undefined" fanart:FanArtType="Thumbnail" fanart:FanArtName="{Binding FirstMediaItem.MediaItemId}"
             fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform" FallbackSource="FilterSmall.png"
            Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Undefined" fanart:FanArtType="Thumbnail" fanart:FanArtName="{Binding FirstMediaItem.MediaItemId}"
             fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform" FallbackSource="FilterLarge.png"
            Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Undefined" fanart:FanArtType="Thumbnail" fanart:FanArtName="{Binding FirstMediaItem.MediaItemId}"
             fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}" FontFamily="SegoeUIBold"
          Color="{ThemeResource MediaItemUnwatchedColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="NumItems" Grid.Row="0" Grid.Column="2" Content="{Binding NumItems}" FontFamily="SegoeUIBold"
          Color="{ThemeResource MediaItemUnwatchedColor}" FontSize="{ThemeResource SmallFontSize}" Margin="10,0,10,0"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource VIDEO_GRID_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource VIDEO_GRID_HEIGHT}"/>
      </Grid.RowDefinitions>
      <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4" BorderThickness="0" Margin="0,1.5,0,0">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image x:Name="ItemTypeImage" Grid.Row="0" Stretch="Uniform" Margin="7">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Undefined" fanart:FanArtType="Thumbnail" fanart:FanArtName="{Binding FirstMediaItem.MediaItemId}"
             fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
      </Image>
      <Label x:Name="ItemLabel" HorizontalAlignment="Center" VerticalAlignment="Stretch" Wrap="True" 
             TextTrimming="CharacterEllipsis" IsVisible="{Binding ElementName=ItemTypeImage, Path=!HasImage}"
             Content="{Binding SimpleTitle}" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" Margin="5,5,5,45"/>
      <Label x:Name="NumItems" Content="{Binding NumItems}"
             HorizontalAlignment="Right" VerticalAlignment="Bottom"
             Color="{ThemeResource MediaItemUnwatchedColor}" FontSize="{ThemeResource SmallerFontSize}" Margin="10,0,5,5"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="CoverViewFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource POSTER_COVER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="{StaticResource POSTER_COVER_WIDTH}"/>
        <RowDefinition Height="72"/>
      </Grid.RowDefinitions>

      <Grid Grid.Row="1" Name="PosterGrid" HorizontalAlignment="Center" VerticalAlignment="Center">
        <Grid.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="7" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Grid.OpacityMask>
        <Grid.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Grid.Background>
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
        </Grid>
        <Image Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform"
               Source="folder.png" Margin="20"/>
      </Grid>
      <Rectangle Name="ButtonBase" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1"
                 RadiusX="4" RadiusY="4" StrokeThickness="3" Margin="-3,-2,-3,-3"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Stroke>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0.02,1.4">
            <GradientStop Color="#CCFFFFFF" Offset="0"/>
            <GradientStop Color="#CCFFFFFF" Offset="0.7"/>
            <GradientStop Color="#66FFFFFF" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Stroke>
      </Rectangle>
      <Rectangle Name="ButtonUpperShine" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1"
                 RadiusX="5" RadiusY="5" StrokeThickness="0" Margin="0"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Fill>
          <ImageBrush ImageSource="Glass_frame.PNG" Stretch="Fill"/>
        </Rectangle.Fill>
      </Rectangle>
      <Label x:Name="ItemLabel" Grid.Row="2" Grid.Column="0" Content="{Binding SimpleTitle}" Wrap="True" Margin="0,10,0,0"
             FontFamily="SegoeUIBold" TextTrimming="CharacterEllipsis"
             Opacity="1.3" FontSize="{ThemeResource SmallerFontSize}" Width="{StaticResource POSTER_COVER_WIDTH}">
        <Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="!HasFocus"/>
            <Binding Source="{ThemeResource MenuTextBackground}"/>
            <Binding Source="{ThemeResource TextColor}"/>
          </MultiBinding>
        </Label.Color>
      </Label>
    </Grid>
  </ControlTemplate>

  <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--+++++++++++++++++ Certification Filter ++++++++++++++++++++-->

  <ControlTemplate x:Key="ListViewCertificationFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="5,0,5,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
               Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.Source>
            <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}Certification\{0}.png"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
               Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.Source>
            <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}Certification\{0}.png"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
               Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.Source>
            <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}Certification\{0}.png"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}" FontFamily="SegoeUIBold"
             Color="{ThemeResource MediaItemUnwatchedColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="NumItems" Grid.Row="0" Grid.Column="2" Content="{Binding NumItems}" FontFamily="SegoeUIBold"
             Color="{ThemeResource MediaItemUnwatchedColor}" FontSize="{ThemeResource SmallFontSize}" Margin="10,0,10,0"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewCertificationFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource VIDEO_GRID_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource VIDEO_GRID_HEIGHT}"/>
      </Grid.RowDefinitions>
      <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4" BorderThickness="0" Margin="0,1.5,0,0">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image x:Name="ItemTypeImage" Stretch="Uniform" Margin="7,30,7,30">
        <Image.Source>
          <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}Certification\{0}.png"/>
        </Image.Source>
      </Image>
      <Label x:Name="ItemLabel" HorizontalAlignment="Center" VerticalAlignment="Stretch" Wrap="True" 
             TextTrimming="CharacterEllipsis" IsVisible="{Binding ElementName=ItemTypeImage, Path=!HasImage}"
             Content="{Binding SimpleTitle}" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" Margin="5,5,5,45"/>
      <Label x:Name="NumItems" Content="{Binding NumItems}"
             HorizontalAlignment="Right" VerticalAlignment="Bottom"
             Color="{ThemeResource MediaItemUnwatchedColor}" FontSize="{ThemeResource SmallerFontSize}" Margin="10,0,5,5"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="CoverViewCertificationFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource POSTER_COVER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="{StaticResource POSTER_COVER_WIDTH}"/>
        <RowDefinition Height="72"/>
      </Grid.RowDefinitions>

      <Grid Grid.Row="1" Name="PosterGrid" HorizontalAlignment="Stretch" VerticalAlignment="Center" MinHeight="{StaticResource AUDIO_COVER_HEIGHT}">
        <Grid.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="7" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Grid.OpacityMask>
        <Grid.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Grid.Background>
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
        </Grid>
        <Image Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" Margin="40">
          <Image.Source>
            <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}Certification\{0}.png"/>
          </Image.Source>
        </Image>
      </Grid>
      <Rectangle Name="ButtonBase" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1"
                 RadiusX="4" RadiusY="4" StrokeThickness="3" Margin="-3,-2,-3,-3"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Stroke>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0.02,1.4">
            <GradientStop Color="#CCFFFFFF" Offset="0"/>
            <GradientStop Color="#CCFFFFFF" Offset="0.7"/>
            <GradientStop Color="#66FFFFFF" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Stroke>
      </Rectangle>
      <Rectangle Name="ButtonUpperShine" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1"
                 RadiusX="5" RadiusY="5" StrokeThickness="0" Margin="0"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Fill>
          <ImageBrush ImageSource="Glass_frame.PNG" Stretch="Fill"/>
        </Rectangle.Fill>
      </Rectangle>
      <Label x:Name="ItemLabel" Grid.Row="2" Grid.Column="0" Content="{Binding SimpleTitle}" Wrap="True" Margin="0,10,0,0"
             FontFamily="SegoeUIBold" TextTrimming="CharacterEllipsis"
             Opacity="1.3" FontSize="{ThemeResource SmallerFontSize}" Width="{StaticResource POSTER_COVER_WIDTH}">
        <Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="!HasFocus"/>
            <Binding Source="{ThemeResource MenuTextBackground}"/>
            <Binding Source="{ThemeResource TextColor}"/>
          </MultiBinding>
        </Label.Color>
      </Label>
    </Grid>
  </ControlTemplate>

  <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--++++++++++++++++++++++ Container ++++++++++++++++++++++++++-->
  
  <ControlTemplate x:Key="ListViewContainerItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            Source="NavigationSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
            Source="NavigationSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
            Source="NavigationLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}" FontFamily="SegoeUIBold"
          Color="{ThemeResource MediaItemUnwatchedColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="NumItems" Grid.Row="0" Grid.Column="2" Content="{Binding NumItems}" FontFamily="SegoeUIBold"
          Color="{ThemeResource MediaItemUnwatchedColor}" FontSize="{ThemeResource SmallFontSize}" Margin="10,0,10,0"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewContainerItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource VIDEO_GRID_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource VIDEO_GRID_HEIGHT}"/>
      </Grid.RowDefinitions>
      <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4" BorderThickness="0" Margin="0,1.5,0,0">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <!--Image x:Name="ItemTypeImage" Grid.Row="0" Stretch="Uniform" Source="NavigationLarge.png"/-->
      <Label x:Name="ItemLabel" HorizontalAlignment="Center" VerticalAlignment="Stretch" Wrap="True" TextTrimming="CharacterEllipsis"
             Content="{Binding SimpleTitle}" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" Margin="5,5,5,45"/>
      <Label x:Name="NumItems" Content="{Binding NumItems}"
             HorizontalAlignment="Right" VerticalAlignment="Bottom"
             Color="{ThemeResource MediaItemUnwatchedColor}" FontSize="{ThemeResource SmallerFontSize}" Margin="10,0,5,5"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="CoverViewContainerItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource POSTER_COVER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="{StaticResource POSTER_COVER_WIDTH}"/>
        <RowDefinition Height="72"/>
      </Grid.RowDefinitions>

      <Grid Grid.Row="1" Name="PosterGrid" HorizontalAlignment="Center" VerticalAlignment="Center">
        <Grid.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="7" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Grid.OpacityMask>
        <Grid.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Grid.Background>
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
        </Grid>
        <Image Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform"
               Source="folder.png" Margin="20"/>
      </Grid>
      <Rectangle Name="ButtonBase" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1"
                 RadiusX="4" RadiusY="4" StrokeThickness="3" Margin="-3,-2,-3,-3"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Stroke>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0.02,1.4">
            <GradientStop Color="#CCFFFFFF" Offset="0"/>
            <GradientStop Color="#CCFFFFFF" Offset="0.7"/>
            <GradientStop Color="#66FFFFFF" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Stroke>
      </Rectangle>
      <Rectangle Name="ButtonUpperShine" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.Row="1"
                 RadiusX="5" RadiusY="5" StrokeThickness="0" Margin="0"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Fill>
          <ImageBrush ImageSource="Glass_frame.PNG" Stretch="Fill"/>
        </Rectangle.Fill>
      </Rectangle>
      <Label x:Name="ItemLabel" Grid.Row="2" Grid.Column="0" Content="{Binding SimpleTitle}" Wrap="True" Margin="0,10,0,0"
             FontFamily="SegoeUIBold" TextTrimming="CharacterEllipsis"
             Opacity="1.3" FontSize="{ThemeResource SmallerFontSize}" Width="{StaticResource POSTER_COVER_WIDTH}">
        <Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="!HasFocus"/>
            <Binding Source="{ThemeResource MenuTextBackground}"/>
            <Binding Source="{ThemeResource TextColor}"/>
          </MultiBinding>
        </Label.Color>
      </Label>
    </Grid>
  </ControlTemplate>


  <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--++++++++++++++++++++++++ Series +++++++++++++++++++++++++++-->
  
  <ControlTemplate x:Key="ListViewSeriesFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <media:SeriesAspectWrapper MediaItem="{Binding MediaItem}" Grid.Row="0" Grid.Column="1" Margin="0,0,10,0">
        <media:SeriesAspectWrapper.Template>
          <ControlTemplate>
            <Label x:Name="ItemLabel" FontSize="{ThemeResource SmallFontSize}" FontFamily="SegoeUIBold" Color="{ThemeResource MediaItemUnwatchedColor}"
                     Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=SeriesName}">
            </Label>
          </ControlTemplate>
        </media:SeriesAspectWrapper.Template>
      </media:SeriesAspectWrapper>

      <Image x:Name="ItemTypeSmall" Stretch="Uniform" Margin="10,2,0,2"
             Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Series" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
             fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
        </Image.IsVisible>
      </Image>
      <Image x:Name="ItemTypeMedium" Stretch="Uniform" Margin="-20,2,-20,2"
             Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Series" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
             fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
        </Image.IsVisible>
      </Image>
      <Image x:Name="ItemTypeLarge" Stretch="Uniform" Margin="-40,2,-40,2"
             Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Series" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
             fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
        </Image.IsVisible>
      </Image>
      <Control Grid.Row="0" Grid.Column="2" Template="{StaticResource List_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
    </Grid>
  </ControlTemplate>
  
  <ControlTemplate x:Key="GridViewSeriesFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Grid x:Name="Banner">
        <Grid.IsVisible>
          <Binding Source="{StaticResource SkinSettingsModel}" Path="[WMC].SeriesGridViewType"
                   Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {GridViewType}.{Banner}"/>
        </Grid.IsVisible>
        <Image x:Name="banner" Width="{StaticResource BANNER_GRID_WIDTH}" Height="{StaticResource BANNER_GRID_HEIGHT}" Stretch="Fill">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Series" fanart:FanArtType="Banner" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                      fanart:MaxWidth="{StaticResource BANNER_GRID_WIDTH}" fanart:MaxHeight="{StaticResource BANNER_GRID_HEIGHT}"/>
          </Image.Source>
          <Image.OpacityMask>
            <VisualBrush>
              <VisualBrush.Visual>
                <Border Name="mask" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
              </VisualBrush.Visual>
            </VisualBrush>
          </Image.OpacityMask>
        </Image>
        <Border VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="6" BorderThickness="0"
                Width="{StaticResource BANNER_GRID_WIDTH}" Height="{StaticResource BANNER_GRID_HEIGHT}"
                IsVisible="{Binding ElementName=banner, Path=!HasImage}">
          <Border.Background>
            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
        <Image Width="{StaticResource BANNER_GRID_WIDTH}" Height="{StaticResource BANNER_GRID_HEIGHT}"
             Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=banner, Path=!HasImage}"/>
        <!-- watched indicator -->
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
                 IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_OfflineFlag_Template}" 
                 IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>
      </Grid>

      <Grid x:Name="Poster">
        <Grid.IsVisible>
          <Binding Source="{StaticResource SkinSettingsModel}" Path="[WMC].SeriesGridViewType"
                   Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {GridViewType}.{Poster}"/>
        </Grid.IsVisible>
        <Image x:Name="poster" Width="{StaticResource POSTER_GRID_WIDTH}" Height="{StaticResource POSTER_GRID_HEIGHT}" Stretch="Fill">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Series" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                      fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
          </Image.Source>
          <Image.OpacityMask>
            <VisualBrush>
              <VisualBrush.Visual>
                <Border Name="mask2" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
              </VisualBrush.Visual>
            </VisualBrush>
          </Image.OpacityMask>
        </Image>
        <Border VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="6" BorderThickness="0"
                Width="{StaticResource POSTER_GRID_WIDTH}" Height="{StaticResource POSTER_GRID_HEIGHT}"
                IsVisible="{Binding ElementName=poster, Path=!HasImage}">
          <Border.Background>
            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
        <Image Width="{StaticResource POSTER_GRID_WIDTH}" Height="{StaticResource POSTER_GRID_HEIGHT}"
             Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=poster, Path=!HasImage}"/>
        <!-- watched indicator -->
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
                 IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_OfflineFlag_Template}" 
                 IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>
      </Grid>

      <Grid x:Name="Thumbnail">
        <Grid.IsVisible>
          <Binding Source="{StaticResource SkinSettingsModel}" Path="[WMC].SeriesGridViewType"
                   Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {GridViewType}.{Thumbnail}"/>
        </Grid.IsVisible>
        <Image x:Name="thumb" Width="{StaticResource VIDEO_GRID_WIDTH}" Height="{StaticResource VIDEO_GRID_HEIGHT}" Stretch="Fill">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Series" fanart:FanArtType="Thumbnail" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                      fanart:MaxWidth="{StaticResource VIDEO_GRID_WIDTH}" fanart:MaxHeight="{StaticResource VIDEO_GRID_HEIGHT}"/>
          </Image.Source>
          <Image.OpacityMask>
            <VisualBrush>
              <VisualBrush.Visual>
                <Border Name="mask3" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
              </VisualBrush.Visual>
            </VisualBrush>
          </Image.OpacityMask>
        </Image>
        <Border VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="6" BorderThickness="0"
                Width="{StaticResource VIDEO_GRID_WIDTH}" Height="{StaticResource VIDEO_GRID_HEIGHT}"
                IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
          <Border.Background>
            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
        <Image Width="{StaticResource POSTER_GRID_WIDTH}" Height="{StaticResource VIDEO_GRID_HEIGHT}"
             Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>
        <!-- watched indicator -->
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
                 IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_OfflineFlag_Template}" 
                 IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>
      </Grid>

    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewSeriesFilterItemSmallTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <Image x:Name="thumb" Width="{StaticResource POSTER_GRID_WIDTH_S}" Height="{StaticResource POSTER_GRID_HEIGHT_S}" Stretch="Fill">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Series" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                      fanart:MaxWidth="{StaticResource POSTER_GRID_WIDTH_S}" fanart:MaxHeight="{StaticResource POSTER_GRID_HEIGHT_S}"/>
        </Image.Source>
        <Image.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Image.OpacityMask>
      </Image>
      <Border VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="6" BorderThickness="0"
                Width="{StaticResource POSTER_GRID_WIDTH_S}" Height="{StaticResource POSTER_GRID_HEIGHT_S}"
                IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image Width="{StaticResource POSTER_GRID_WIDTH_S}" Height="{StaticResource POSTER_GRID_HEIGHT_S}"
             Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="CoverViewSeriesFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="72"/>
      </Grid.RowDefinitions>

      <Rectangle Name="ButtonBase" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                       RadiusX="4" RadiusY="4" StrokeThickness="3" Margin="-3,2,-3,2"
                       IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Stroke>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0.02,1.4">
            <GradientStop Color="#CCFFFFFF" Offset="0"/>
            <GradientStop Color="#CCFFFFFF" Offset="0.7"/>
            <GradientStop Color="#66FFFFFF" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Stroke>
      </Rectangle>

      <Image x:Name="thumb" Width="{StaticResource POSTER_COVER_WIDTH}" Height="{StaticResource POSTER_COVER_HEIGHT}" Stretch="Fill" Margin="0">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Series" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource POSTER_COVER_WIDTH}" fanart:MaxHeight="{StaticResource POSTER_COVER_HEIGHT}"/>
        </Image.Source>
        <Image.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Image.OpacityMask>
      </Image>
      <Border VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="6" BorderThickness="0"
                Width="{StaticResource POSTER_COVER_WIDTH}" Height="{StaticResource POSTER_COVER_HEIGHT}"
                IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image Width="{StaticResource POSTER_COVER_WIDTH}" Height="{StaticResource POSTER_COVER_HEIGHT}"
             Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>
      <!-- watched indicator -->
      <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,2,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>

      <Rectangle Name="ButtonUpperShine" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                       RadiusX="5" RadiusY="5" StrokeThickness="0" Margin="0,3,0,0"
                       IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Fill>
          <ImageBrush ImageSource="Glass_frame.PNG" Stretch="Fill"/>
        </Rectangle.Fill>
      </Rectangle>

      <Label x:Name="ItemLabel" Grid.Row="1" Grid.Column="0" Content="{Binding SimpleTitle}" Wrap="True" Margin="0,10,0,0"
             Opacity="1.3" FontFamily="SegoeUIBold" TextTrimming="CharacterEllipsis"
             HorizontalAlignment="Center" FontSize="{ThemeResource SmallerFontSize}" Width="{StaticResource POSTER_COVER_WIDTH}">
        <Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="!HasFocus"/>
            <Binding Source="{ThemeResource MenuTextBackground}"/>
            <Binding Source="{ThemeResource TextColor}"/>
          </MultiBinding>
        </Label.Color>
      </Label>
    </Grid>
  </ControlTemplate>

  <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--+++++++++++++++++++++ Series Season +++++++++++++++++++++++-->
  
  <ControlTemplate x:Key="ListViewSeriesSeasonFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <media:SeasonAspectWrapper MediaItem="{Binding MediaItem}" Grid.Row="0" Grid.Column="1" Margin="5,0,10,0">
        <media:SeasonAspectWrapper.Template>
          <ControlTemplate>
            <StackPanel Orientation="Horizontal">
              <Label x:Name="ItemLabel" FontSize="{ThemeResource SmallFontSize}" FontFamily="SegoeUIBold" Margin="0,0,7,0"
                     Content="[Media.SeasonRootViewName]">
                <Label.Color>
                  <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                    <Binding Path="!Virtual"/>
                    <Binding Source="{ThemeResource MediaItemUnwatchedColor}"/>
                    <Binding Source="{ThemeResource MediaItemOfflineColor}"/>
                  </MultiBinding>
                </Label.Color>
              </Label>
              <Label x:Name="NumberLabel" FontSize="{ThemeResource SmallFontSize}" FontFamily="SegoeUIBold"
                     Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=Season}">
                <Label.Color>
                  <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                    <Binding Path="!Virtual"/>
                    <Binding Source="{ThemeResource MediaItemUnwatchedColor}"/>
                    <Binding Source="{ThemeResource MediaItemOfflineColor}"/>
                  </MultiBinding>
                </Label.Color>
              </Label>
            </StackPanel>
          </ControlTemplate>
        </media:SeasonAspectWrapper.Template>
      </media:SeasonAspectWrapper>

      <Image x:Name="ItemTypeSmall" Stretch="Uniform" Margin="10,2,0,2"
             Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="SeriesSeason" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
        </Image.IsVisible>
      </Image>
      <Image x:Name="ItemTypeMedium" Stretch="Uniform" Margin="-20,2,-20,2"
             Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="SeriesSeason" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
        </Image.IsVisible>
      </Image>
      <Image x:Name="ItemTypeLarge" Stretch="Uniform" Margin="-40,2,-40,2"
             Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="SeriesSeason" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
        </Image.IsVisible>
      </Image>
      <Control Grid.Row="0" Grid.Column="2" Template="{StaticResource List_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewSeriesSeasonFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Grid x:Name="Poster">
        <Grid.IsVisible>
          <Binding Source="{StaticResource SkinSettingsModel}" Path="[WMC].SeasonGridViewType"
                   Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {GridViewType}.{Poster}"/>
        </Grid.IsVisible>
        <Image x:Name="poster" Width="{StaticResource POSTER_GRID_WIDTH}" Height="{StaticResource POSTER_GRID_HEIGHT}" Stretch="Fill">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="SeriesSeason" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                      fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
          </Image.Source>
          <Image.OpacityMask>
            <VisualBrush>
              <VisualBrush.Visual>
                <Border Name="mask" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
              </VisualBrush.Visual>
            </VisualBrush>
          </Image.OpacityMask>
        </Image>
        <Border VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="6" BorderThickness="0"
                Width="{StaticResource POSTER_GRID_WIDTH}" Height="{StaticResource POSTER_GRID_HEIGHT}"
                IsVisible="{Binding ElementName=poster, Path=!HasImage}">
          <Border.Background>
            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
        <Image Width="{StaticResource POSTER_GRID_WIDTH}" Height="{StaticResource POSTER_GRID_HEIGHT}"
             Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=poster, Path=!HasImage}"/>
        <!-- watched indicator -->
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>
      </Grid>

      <Grid x:Name="Banner">
        <Grid.IsVisible>
          <Binding Source="{StaticResource SkinSettingsModel}" Path="[WMC].SeasonGridViewType"
                   Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {GridViewType}.{Banner}"/>
        </Grid.IsVisible>
        <Image x:Name="banner" Width="{StaticResource BANNER_GRID_WIDTH}" Height="{StaticResource BANNER_GRID_HEIGHT}" Stretch="Fill">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="SeriesSeason" fanart:FanArtType="Banner" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                      fanart:MaxWidth="{StaticResource BANNER_GRID_WIDTH}" fanart:MaxHeight="{StaticResource BANNER_GRID_HEIGHT}"/>
          </Image.Source>
          <Image.OpacityMask>
            <VisualBrush>
              <VisualBrush.Visual>
                <Border Name="mask2" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
              </VisualBrush.Visual>
            </VisualBrush>
          </Image.OpacityMask>
        </Image>
        <Border VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="6" BorderThickness="0"
                Width="{StaticResource BANNER_GRID_WIDTH}" Height="{StaticResource BANNER_GRID_HEIGHT}"
                IsVisible="{Binding ElementName=banner, Path=!HasImage}">
          <Border.Background>
            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
        <Image Width="{StaticResource BANNER_GRID_WIDTH}" Height="{StaticResource BANNER_GRID_HEIGHT}"
             Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=banner, Path=!HasImage}"/>
        <!-- watched indicator -->
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_OfflineFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>
      </Grid>

      <Grid x:Name="Thumbnail">
        <Grid.IsVisible>
          <Binding Source="{StaticResource SkinSettingsModel}" Path="[WMC].SeasonGridViewType"
                   Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {GridViewType}.{Thumbnail}"/>
        </Grid.IsVisible>
        <Image x:Name="thumb" Width="{StaticResource VIDEO_GRID_WIDTH}" Height="{StaticResource VIDEO_GRID_HEIGHT}" Stretch="Fill">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="SeriesSeason" fanart:FanArtType="Thumbnail" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                      fanart:MaxWidth="{StaticResource VIDEO_GRID_WIDTH}" fanart:MaxHeight="{StaticResource VIDEO_GRID_HEIGHT}"/>
          </Image.Source>
          <Image.OpacityMask>
            <VisualBrush>
              <VisualBrush.Visual>
                <Border Name="mask3" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
              </VisualBrush.Visual>
            </VisualBrush>
          </Image.OpacityMask>
        </Image>
        <Border VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="6" BorderThickness="0"
                Width="{StaticResource VIDEO_GRID_WIDTH}" Height="{StaticResource VIDEO_GRID_HEIGHT}"
                IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
          <Border.Background>
            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
        <Image Width="{StaticResource POSTER_GRID_WIDTH}" Height="{StaticResource VIDEO_GRID_HEIGHT}"
             Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>
        <!-- watched indicator -->
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_OfflineFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>
      </Grid>

    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="CoverViewSeriesSeasonFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="72"/>
      </Grid.RowDefinitions>

      <Rectangle Name="ButtonBase" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                       RadiusX="5" RadiusY="5" StrokeThickness="3" Margin="-2,2,-2,2"
                       IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Stroke>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0.02,1.4">
            <GradientStop Color="#CCFFFFFF" Offset="0"/>
            <GradientStop Color="#CCFFFFFF" Offset="0.7"/>
            <GradientStop Color="#66FFFFFF" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Stroke>
      </Rectangle>

      <Image x:Name="thumb" Width="{StaticResource POSTER_COVER_WIDTH}" Height="{StaticResource POSTER_COVER_HEIGHT}" Stretch="Fill" Margin="0">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="SeriesSeason" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource POSTER_COVER_WIDTH}" fanart:MaxHeight="{StaticResource POSTER_COVER_HEIGHT}"/>
        </Image.Source>
        <Image.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Image.OpacityMask>
      </Image>
      <Border VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="6" BorderThickness="0"
                Width="{StaticResource POSTER_COVER_WIDTH}" Height="{StaticResource POSTER_COVER_HEIGHT}"
                IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image Width="{StaticResource POSTER_COVER_WIDTH}" Height="{StaticResource POSTER_COVER_HEIGHT}"
             Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>
      <!-- watched indicator -->
      <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,2,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableCoverWatchedFlags}"/>
      <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,2,-3,0" Template="{StaticResource Cover_OfflineFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>

      <Rectangle Name="ButtonUpperShine" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                       RadiusX="5" RadiusY="5" StrokeThickness="0" Margin="0"
                       IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Fill>
          <ImageBrush ImageSource="Glass_frame.PNG" Stretch="Fill"/>
        </Rectangle.Fill>
      </Rectangle>

      <Label x:Name="ItemLabel" Grid.Row="1" Grid.Column="0" Content="{Binding SimpleTitle}" Wrap="True" Margin="0,10,0,0"
             Opacity="1.3" TextTrimming="CharacterEllipsis" FontFamily="SegoeUIBold"
             HorizontalAlignment="Center" FontSize="{ThemeResource SmallerFontSize}" Width="{StaticResource POSTER_COVER_WIDTH}">
        <Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="!HasFocus"/>
            <Binding Source="{ThemeResource MenuTextBackground}"/>
            <Binding Source="{ThemeResource TextColor}"/>
          </MultiBinding>
        </Label.Color>
      </Label>
    </Grid>
  </ControlTemplate>


  <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--++++++++++++++++++++ Series Episode +++++++++++++++++++++++-->
  
  <ControlTemplate x:Key="ListViewEpisodeItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            Source="{Binding MediaItem}" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>

        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
            Source="{Binding MediaItem}" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
            Source="{Binding MediaItem}" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" FontSize="{ThemeResource SmallFontSize}" FontFamily="SegoeUIBold"
             Grid.Row="0" Grid.Column="1">
        <Label.Content>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} + {1} + {2}">
            <Binding Path="EpisodeNumber"/>
            <Binding Source=" - "/>
            <Binding Path="EpisodeName"/>
          </MultiBinding>
        </Label.Content>
        <Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding Path="!Virtual"/>
            <Binding Source="{ThemeResource MediaItemUnwatchedColor}"/>
            <Binding Source="{ThemeResource MediaItemOfflineColor}"/>
          </MultiBinding>
        </Label.Color>
      </Label>
      <Control Grid.Row="0" Grid.Column="2" Template="{StaticResource List_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewEpisodeItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource VIDEO_GRID_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource VIDEO_GRID_HEIGHT}"/>
      </Grid.RowDefinitions>
      <Image x:Name="thumb" Stretch="UniformToFill" Margin="1" Source="{Binding MediaItem}">
        <Image.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Image.OpacityMask>
      </Image>
      <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4" BorderThickness="0"
              IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>
      <!-- watched indicator -->
      <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>
      <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_OfflineFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewEpisodeItemSmallTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource VIDEO_GRID_WIDTH_S}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource VIDEO_GRID_HEIGHT_S}"/>
      </Grid.RowDefinitions>
      <Image x:Name="thumb" Stretch="UniformToFill" Margin="1" Source="{Binding MediaItem}">
        <Image.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Image.OpacityMask>
      </Image>
      <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4" BorderThickness="0"
              IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>
      <Label Content="{Binding DateAdded}" VerticalAlignment="Bottom" FontSize="{ThemeResource SmallerFontSize}" Color="{ThemeResource MediaItemUnwatchedColor}" Margin="5" />
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="CoverViewEpisodeItemTemplate">
    <Grid x:Name="ItemControl" Width="{StaticResource VIDEO_COVER_WIDTH}">
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="72"/>
      </Grid.RowDefinitions>

      <Border Grid.Row="1"  VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4" BorderThickness="0" Margin="1">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>

      <Grid Name="PosterGrid" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0"
                  MaxHeight="{StaticResource VIDEO_COVER_HEIGHT}" Width="{StaticResource VIDEO_COVER_WIDTH}">
        <Grid.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="7" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Grid.OpacityMask>
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
        </Grid>
        <Image x:Name="thumb" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform" Margin="0,0,0,0"
               Source="{Binding MediaItem}">
        </Image>
        <Border VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="6" BorderThickness="0"
                IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
          <Border.Background>
            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
        <Image Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>
      </Grid>

      <Rectangle Name="ButtonBase" VerticalAlignment="Stretch" Grid.Row="1"
                           RadiusX="4" RadiusY="4" StrokeThickness="3" Margin="-2"
                           IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Stroke>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0.02,1.4">
            <GradientStop Color="#CCFFFFFF" Offset="0"/>
            <GradientStop Color="#CCFFFFFF" Offset="0.7"/>
            <GradientStop Color="#66FFFFFF" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Stroke>
      </Rectangle>
      <!-- watched indicator -->
      <Control Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableCoverWatchedFlags}"/>
      <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_OfflineFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>

      <Rectangle Name="ButtonUpperShine" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                           RadiusX="4" RadiusY="4" StrokeThickness="0" Margin="0,0,0,0" Grid.Row="1"
                           IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Fill>
          <ImageBrush ImageSource="Glass_frame.PNG" Stretch="Fill"/>
        </Rectangle.Fill>
      </Rectangle>

      <Label x:Name="ItemLabel" Grid.Row="2" Grid.Column="0" Wrap="True" Content="{Binding Path=EpisodeName}"
             Margin="0,10,0,0" TextTrimming="CharacterEllipsis" FontFamily="SegoeUIBold" Opacity="1.3"
             HorizontalAlignment="Center" FontSize="{ThemeResource SmallerFontSize}" Width="{StaticResource VIDEO_COVER_WIDTH}">
        <Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="!HasFocus"/>
            <Binding Source="{ThemeResource MenuTextBackground}"/>
            <Binding Source="{ThemeResource TextColor}"/>
          </MultiBinding>
        </Label.Color>
      </Label>
    </Grid>
  </ControlTemplate>

  <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--++++++++++++++ Movie Collection Filter ++++++++++++++++++++-->
  
  <ControlTemplate x:Key="ListViewMovieFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}" Margin="0,0,10,0" FontFamily="SegoeUIBold"
             FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource MediaItemUnwatchedColor}">
      </Label>
      <Image x:Name="ItemTypeSmall" Stretch="Uniform" Margin="10,2,0,2"
             Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="MovieCollection" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
        </Image.IsVisible>
      </Image>
      <Image x:Name="ItemTypeMedium" Stretch="Uniform" Margin="-20,2,-20,2"
             Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="MovieCollection" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
        </Image.IsVisible>
      </Image>
      <Image x:Name="ItemTypeLarge" Stretch="Uniform" Margin="-40,2,-40,2"
             Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="MovieCollection" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
        </Image.IsVisible>
      </Image>
      <Control Grid.Row="0" Grid.Column="2" Template="{StaticResource List_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
    </Grid>
  </ControlTemplate>
  
  <ControlTemplate x:Key="GridViewMovieFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Grid x:Name="Poster">
        <Grid.IsVisible>
          <Binding Source="{StaticResource SkinSettingsModel}" Path="[WMC].MovieGridViewType"
                   Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {GridViewType}.{Poster}"/>
        </Grid.IsVisible>
        <Image x:Name="poster" Width="{StaticResource POSTER_GRID_WIDTH}" Height="{StaticResource POSTER_GRID_HEIGHT}" Stretch="Fill">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="MovieCollection" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
          </Image.Source>
          <Image.OpacityMask>
            <VisualBrush>
              <VisualBrush.Visual>
                <Border Name="mask" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
              </VisualBrush.Visual>
            </VisualBrush>
          </Image.OpacityMask>
        </Image>
        <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4" BorderThickness="0"
              IsVisible="{Binding ElementName=poster, Path=!HasImage}">
          <Border.Background>
            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
        <Image Width="{StaticResource POSTER_GRID_WIDTH}" Height="{StaticResource POSTER_GRID_HEIGHT}"
             Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=poster, Path=!HasImage}"/>
        <!-- watched indicator -->
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>
      </Grid>

      <Grid x:Name="Banner">
        <Grid.IsVisible>
          <Binding Source="{StaticResource SkinSettingsModel}" Path="[WMC].MovieGridViewType"
                   Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {GridViewType}.{Banner}"/>
        </Grid.IsVisible>
        <Image x:Name="banner" Width="{StaticResource BANNER_GRID_WIDTH}" Height="{StaticResource BANNER_GRID_HEIGHT}" Stretch="Fill">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="MovieCollection" fanart:FanArtType="Banner" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource BANNER_GRID_WIDTH}" fanart:MaxHeight="{StaticResource BANNER_GRID_HEIGHT}"/>
          </Image.Source>
          <Image.OpacityMask>
            <VisualBrush>
              <VisualBrush.Visual>
                <Border Name="mask2" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
              </VisualBrush.Visual>
            </VisualBrush>
          </Image.OpacityMask>
        </Image>
        <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4" BorderThickness="0"
              IsVisible="{Binding ElementName=banner, Path=!HasImage}">
          <Border.Background>
            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
        <Image Width="{StaticResource BANNER_GRID_WIDTH}" Height="{StaticResource BANNER_GRID_HEIGHT}"
             Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=banner, Path=!HasImage}"/>
        <!-- watched indicator -->
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>
      </Grid>

      <Grid x:Name="Thumbnail">
        <Grid.IsVisible>
          <Binding Source="{StaticResource SkinSettingsModel}" Path="[WMC].MovieGridViewType"
                   Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {GridViewType}.{Thumbnail}"/>
        </Grid.IsVisible>
        <Image x:Name="thumb" Width="{StaticResource VIDEO_GRID_WIDTH}" Height="{StaticResource VIDEO_GRID_HEIGHT}" Stretch="Fill">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="MovieCollection" fanart:FanArtType="Thumbnail" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                      fanart:MaxWidth="{StaticResource VIDEO_GRID_WIDTH}" fanart:MaxHeight="{StaticResource VIDEO_GRID_HEIGHT}"/>
          </Image.Source>
          <Image.OpacityMask>
            <VisualBrush>
              <VisualBrush.Visual>
                <Border Name="mask3" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
              </VisualBrush.Visual>
            </VisualBrush>
          </Image.OpacityMask>
        </Image>
        <Border VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="6" BorderThickness="0"
                Width="{StaticResource VIDEO_GRID_WIDTH}" Height="{StaticResource VIDEO_GRID_HEIGHT}"
                IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
          <Border.Background>
            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
        <Image Width="{StaticResource POSTER_GRID_WIDTH}" Height="{StaticResource VIDEO_GRID_HEIGHT}"
             Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>
        <!-- watched indicator -->
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
      </Grid>

    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="CoverViewMovieFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="72"/>
      </Grid.RowDefinitions>

      <Rectangle Name="ButtonBase" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                       RadiusX="5" RadiusY="5" StrokeThickness="3" Margin="-2,2,-2,2"
                       IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Stroke>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0.02,1.4">
            <GradientStop Color="#CCFFFFFF" Offset="0"/>
            <GradientStop Color="#CCFFFFFF" Offset="0.7"/>
            <GradientStop Color="#66FFFFFF" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Stroke>
      </Rectangle>

      <Image x:Name="thumb" Width="{StaticResource POSTER_COVER_WIDTH}" Height="{StaticResource POSTER_COVER_HEIGHT}" Stretch="Fill">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="MovieCollection" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Image.OpacityMask>
      </Image>
      <Border VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="4" BorderThickness="0" 
              Width="{StaticResource POSTER_COVER_WIDTH}" Height="{StaticResource POSTER_COVER_HEIGHT}"
              IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image Width="{StaticResource POSTER_COVER_WIDTH}" Height="{StaticResource POSTER_COVER_HEIGHT}"
             Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>

      <!-- watched indicator -->
      <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,2,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableCoverWatchedFlags}"/>

      <Rectangle Name="ButtonUpperShine" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                       RadiusX="5" RadiusY="5" StrokeThickness="0" Margin="0"
                       IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Fill>
          <ImageBrush ImageSource="Glass_frame.PNG" Stretch="Fill"/>
        </Rectangle.Fill>
      </Rectangle>

      <Label x:Name="ItemLabel" Grid.Row="1" Grid.Column="0" Content="{Binding SimpleTitle}" Wrap="True" Margin="0,10,0,0"
             TextTrimming="CharacterEllipsis" FontFamily="SegoeUIBold" Opacity="1.3"
             HorizontalAlignment="Center" FontSize="{ThemeResource SmallerFontSize}" Width="{StaticResource POSTER_COVER_WIDTH}">
        <Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="!HasFocus"/>
            <Binding Source="{ThemeResource MenuTextBackground}"/>
            <Binding Source="{ThemeResource TextColor}"/>
          </MultiBinding>
        </Label.Color>
      </Label>
    </Grid>
  </ControlTemplate>

  <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--+++++++++++++++++++++++++ Movie +++++++++++++++++++++++++++-->
  
  <ControlTemplate x:Key="ListViewMovieItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <media:MovieAspectWrapper MediaItem="{Binding MediaItem}" Grid.Row="0" Grid.Column="1" Margin="0,0,10,0">
        <media:MovieAspectWrapper.Template>
          <ControlTemplate>
            <Grid >
              <Label x:Name="ItemLabel" FontSize="{ThemeResource SmallFontSize}" FontFamily="SegoeUIBold"
                     Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=MovieName}">
                <Label.Color>
                  <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                    <Binding Path="!Virtual"/>
                    <Binding Source="{ThemeResource MediaItemUnwatchedColor}"/>
                    <Binding Source="{ThemeResource MediaItemOfflineColor}"/>
                  </MultiBinding>
                </Label.Color>
              </Label>
            </Grid>
          </ControlTemplate>
        </media:MovieAspectWrapper.Template>
      </media:MovieAspectWrapper>

      <Image x:Name="ItemTypeSmall" Stretch="Uniform" Margin="10,2,0,2"
            Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Movie" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
        </Image.IsVisible>
      </Image>
      <Image x:Name="ItemTypeMedium" Stretch="Uniform" Margin="-20,2,-20,2"
            Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Movie" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
        </Image.IsVisible>
      </Image>
      <Image x:Name="ItemTypeLarge" Stretch="Uniform" Margin="-40,2,-40,2"
            Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Movie" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
        </Image.IsVisible>
      </Image>
      <Control Grid.Row="0" Grid.Column="2" Template="{StaticResource List_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewMovieItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Grid x:Name="Poster">
        <Grid.IsVisible>
          <Binding Source="{StaticResource SkinSettingsModel}" Path="[WMC].MovieGridViewType"
                   Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {GridViewType}.{Poster}"/>
        </Grid.IsVisible>
        <Image x:Name="poster" Width="{StaticResource POSTER_GRID_WIDTH}" Height="{StaticResource POSTER_GRID_HEIGHT}" Stretch="Fill">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Movie" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Image.OpacityMask>
      </Image>
      <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4" BorderThickness="0"
              IsVisible="{Binding ElementName=poster, Path=!HasImage}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image Width="{StaticResource POSTER_GRID_WIDTH}" Height="{StaticResource POSTER_GRID_HEIGHT}"
             Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=poster, Path=!HasImage}"/>
        <!-- watched indicator -->
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-2.4,-2.4,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-2.4,-2.4,0" Template="{StaticResource Cover_OfflineFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>
      </Grid>

      <Grid x:Name="Banner">
        <Grid.IsVisible>
          <Binding Source="{StaticResource SkinSettingsModel}" Path="[WMC].MovieGridViewType"
                   Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {GridViewType}.{Banner}"/>
        </Grid.IsVisible>
        <Image x:Name="banner" Width="{StaticResource BANNER_GRID_WIDTH}" Height="{StaticResource BANNER_GRID_HEIGHT}" Stretch="Fill">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Movie" fanart:FanArtType="Banner" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource BANNER_GRID_WIDTH}" fanart:MaxHeight="{StaticResource BANNER_GRID_HEIGHT}"/>
          </Image.Source>
          <Image.OpacityMask>
            <VisualBrush>
              <VisualBrush.Visual>
                <Border Name="mask2" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
              </VisualBrush.Visual>
            </VisualBrush>
          </Image.OpacityMask>
        </Image>
        <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4" BorderThickness="0"
              IsVisible="{Binding ElementName=banner, Path=!HasImage}">
          <Border.Background>
            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
        <Image Width="{StaticResource BANNER_GRID_WIDTH}" Height="{StaticResource BANNER_GRID_HEIGHT}"
             Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=banner, Path=!HasImage}"/>
        <!-- watched indicator -->
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_OfflineFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>
      </Grid>

      <Grid x:Name="Thumbnail">
        <Grid.IsVisible>
          <Binding Source="{StaticResource SkinSettingsModel}" Path="[WMC].MovieGridViewType"
                   Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {GridViewType}.{Thumbnail}"/>
        </Grid.IsVisible>
        <Image x:Name="thumb" Width="{StaticResource VIDEO_GRID_WIDTH}" Height="{StaticResource VIDEO_GRID_HEIGHT}" Stretch="Fill">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Movie" fanart:FanArtType="Thumbnail" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                      fanart:MaxWidth="{StaticResource VIDEO_GRID_WIDTH}" fanart:MaxHeight="{StaticResource VIDEO_GRID_HEIGHT}"/>
          </Image.Source>
          <Image.OpacityMask>
            <VisualBrush>
              <VisualBrush.Visual>
                <Border Name="mask3" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
              </VisualBrush.Visual>
            </VisualBrush>
          </Image.OpacityMask>
        </Image>
        <Border VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="6" BorderThickness="0"
                Width="{StaticResource VIDEO_GRID_WIDTH}" Height="{StaticResource VIDEO_GRID_HEIGHT}"
                IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
          <Border.Background>
            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
        <Image Width="{StaticResource POSTER_GRID_WIDTH}" Height="{StaticResource VIDEO_GRID_HEIGHT}"
             Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>
        <!-- watched indicator -->
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
        <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_OfflineFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>
      </Grid>

    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewMovieItemSmallTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Grid x:Name="Poster">
        <Image x:Name="thumb" Width="{StaticResource POSTER_GRID_WIDTH_S}" Height="{StaticResource POSTER_GRID_HEIGHT_S}" Stretch="Fill">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Movie" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
          </Image.Source>
          <Image.OpacityMask>
            <VisualBrush>
              <VisualBrush.Visual>
                <Border Name="mask" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
              </VisualBrush.Visual>
            </VisualBrush>
          </Image.OpacityMask>
        </Image>
        <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4" BorderThickness="0"
              IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
          <Border.Background>
            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
        <Image Width="{StaticResource POSTER_GRID_WIDTH_S}" Height="{StaticResource POSTER_GRID_HEIGHT_S}"
             Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>
      </Grid>
      
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="CoverViewMovieItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="72"/>
      </Grid.RowDefinitions>

      <Rectangle Name="ButtonBase" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                       RadiusX="5" RadiusY="5" StrokeThickness="3" Margin="-2,2,-2,2"
                       IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Stroke>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0.02,1.4">
            <GradientStop Color="#CCFFFFFF" Offset="0"/>
            <GradientStop Color="#CCFFFFFF" Offset="0.7"/>
            <GradientStop Color="#66FFFFFF" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Stroke>
      </Rectangle>

      <Image x:Name="thumb" Width="{StaticResource POSTER_COVER_WIDTH}" Height="{StaticResource POSTER_COVER_HEIGHT}" Stretch="Fill">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Movie" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Image.OpacityMask>
      </Image>
      <Border VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="4" BorderThickness="0" 
              Width="{StaticResource POSTER_COVER_WIDTH}" Height="{StaticResource POSTER_COVER_HEIGHT}"
              IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image Width="{StaticResource POSTER_COVER_WIDTH}" Height="{StaticResource POSTER_COVER_HEIGHT}"
             Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>
      <!-- watched indicator -->
      <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,2,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableCoverWatchedFlags}"/>
      <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_OfflineFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>

      <Rectangle Name="ButtonUpperShine" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                       RadiusX="5" RadiusY="5" StrokeThickness="0" Margin="0"
                       IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Fill>
          <ImageBrush ImageSource="Glass_frame.PNG" Stretch="Fill"/>
        </Rectangle.Fill>
      </Rectangle>

      <Label x:Name="ItemLabel" Grid.Row="1" Grid.Column="0" Content="{Binding SimpleTitle}" Wrap="True" Margin="0,10,0,0"
             TextTrimming="CharacterEllipsis" FontFamily="SegoeUIBold" Opacity="1.3"
             HorizontalAlignment="Center" FontSize="{ThemeResource SmallerFontSize}" Width="{StaticResource POSTER_COVER_WIDTH}">
        <Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="!HasFocus"/>
            <Binding Source="{ThemeResource MenuTextBackground}"/>
            <Binding Source="{ThemeResource TextColor}"/>
          </MultiBinding>
        </Label.Color>
      </Label>
    </Grid>
  </ControlTemplate>

  <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--+++++++++++++++++++++++++ Video +++++++++++++++++++++++++++-->
  
  <ControlTemplate x:Key="ListViewVideoItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="5,0,5,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            Source="{Binding MediaItem}" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>

        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
            Source="{Binding MediaItem}" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
            Source="{Binding MediaItem}" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding Title}" Color="{ThemeResource MediaItemUnwatchedColor}" FontSize="{ThemeResource SmallFontSize}" FontFamily="SegoeUIBold">
      </Label>
      <Control Grid.Row="0" Grid.Column="2" Template="{StaticResource List_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewVideoItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource VIDEO_GRID_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource VIDEO_GRID_HEIGHT}"/>
      </Grid.RowDefinitions>
      <Grid.OpacityMask>
        <VisualBrush>
          <VisualBrush.Visual>
            <Border Name="mask" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
          </VisualBrush.Visual>
        </VisualBrush>
      </Grid.OpacityMask>
      <Image x:Name="thumb" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="UniformToFill" Source="{Binding MediaItem}">
        <Image.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask2" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Image.OpacityMask>
      </Image>
      <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="6" BorderThickness="0"
              IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>

      <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-2.4,-2.4,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>
      <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-2.4,-2.4,0" Template="{StaticResource Cover_OfflineFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewVideoItemSmallTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource VIDEO_GRID_WIDTH_S}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource VIDEO_GRID_HEIGHT_S}"/>
      </Grid.RowDefinitions>
      <Grid.OpacityMask>
        <VisualBrush>
          <VisualBrush.Visual>
            <Border Name="mask" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
          </VisualBrush.Visual>
        </VisualBrush>
      </Grid.OpacityMask>
      <Image x:Name="thumb" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="UniformToFill" Source="{Binding MediaItem}">
        <Image.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask2" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Image.OpacityMask>
      </Image>
      <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="6" BorderThickness="0"
              IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="CoverViewVideoItemTemplate">
    <Grid x:Name="ItemControl" Width="{StaticResource VIDEO_COVER_WIDTH}">
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="72"/>
      </Grid.RowDefinitions>

      <Border Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4" BorderThickness="0" Margin="1">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>

      <Grid Name="PosterGrid" Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center">
        <Grid.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="7" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Grid.OpacityMask>
        <Grid>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
        </Grid>
        <Image x:Name="thumb" Grid.Row="0" HorizontalAlignment="Center" VerticalAlignment="Center" Stretch="Uniform"
               Source="{Binding MediaItem}"/>
        <Border VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="4" BorderThickness="0" 
              Width="{StaticResource VIDEO_COVER_HEIGHT}" Height="{StaticResource VIDEO_COVER_HEIGHT}"
              IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
          <Border.Background>
            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
              <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
        <Image Width="{StaticResource VIDEO_COVER_HEIGHT}" Height="{StaticResource VIDEO_COVER_HEIGHT}"
             Source="video.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>
      </Grid>

      <Rectangle Name="ButtonBase" VerticalAlignment="Stretch" Grid.Row="1"
                 RadiusX="4" RadiusY="4" StrokeThickness="3" Margin="-2"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Stroke>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0.02,1.4">
            <GradientStop Color="#CCFFFFFF" Offset="0"/>
            <GradientStop Color="#CCFFFFFF" Offset="0.7"/>
            <GradientStop Color="#66FFFFFF" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Stroke>
      </Rectangle>

      <!-- watched indicator -->
      <Control Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-2.4,-2.4,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableCoverWatchedFlags}"/>
      <Control Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-2.4,-2.4,0" Template="{StaticResource Cover_OfflineFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>

      <Rectangle Name="ButtonUpperShine" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                           RadiusX="4" RadiusY="4" StrokeThickness="0" Grid.Row="1"
                           IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Fill>
          <ImageBrush ImageSource="Glass_frame.PNG" Stretch="Fill"/>
        </Rectangle.Fill>
      </Rectangle>

      <Label x:Name="ItemLabel" Grid.Row="2" Grid.Column="0" Content="{Binding SimpleTitle}" Wrap="True" Margin="0,10,0,0" 
             TextTrimming="CharacterEllipsis" FontFamily="SegoeUIBold" Opacity="1.3"
             HorizontalAlignment="Center" FontSize="{ThemeResource SmallerFontSize}" Width="{StaticResource VIDEO_COVER_WIDTH}">
        <Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="!HasFocus"/>
            <Binding Source="{ThemeResource MenuTextBackground}"/>
            <Binding Source="{ThemeResource TextColor}"/>
          </MultiBinding>
        </Label.Color>
      </Label>

    </Grid>
  </ControlTemplate>

  <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--+++++++++++++++++++++++++ Audio +++++++++++++++++++++++++++-->
  
  <ControlTemplate x:Key="ListViewAudioItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
       
      <media:AudioAspectWrapper MediaItem="{Binding MediaItem}" Grid.Column="1" Margin="0,0,10,0">
        <media:AudioAspectWrapper.Template>
          <ControlTemplate>
            <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Margin="0,0,20,0">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <StackPanel Orientation="Horizontal" IsVisible="{Binding Path=NumDiscs,Converter={StaticResource ReferenceToBoolConverter}}">
                <StackPanel Orientation="Horizontal">
                  <StackPanel.IsVisible>
                    <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} > 1">
                      <Binding Path="NumDiscs"/>
                    </MultiBinding>
                  </StackPanel.IsVisible>
                  <Image HorizontalAlignment="Left" VerticalAlignment="Center" Stretch="Uniform" Source="Medialogos\audio\disc_small.png" Margin="-10,5,0,5" Height="30">
                  <Image.Opacity>
                    <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                      <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
                      <Binding Source="1"/>
                      <Binding Source="0.7"/>
                    </MultiBinding>
                  </Image.Opacity>
                </Image>
                  <Label FontSize="{ThemeResource SmallFontSize}" Margin="-5,0,0,0"
                         FontFamily="SegoeUIBold" VerticalAlignment="Center">
                    <Label.Content>
                      <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} + {1}">
                        <Binding Path="DiscId"/>
                        <Binding Source=" - "/>
                      </MultiBinding>
                    </Label.Content>
                    <Label.Color>
                    <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                      <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
                      <Binding Source="{ThemeResource MediaItemFocussedColor}"/>
                      <Binding Source="{ThemeResource MediaItemUnwatchedColor}"/>
                    </MultiBinding>
                  </Label.Color>
                </Label>
                </StackPanel>
              </StackPanel>
              <Label x:Name="ItemLabel" Grid.Column="1" FontSize="{ThemeResource SmallFontSize}" FontFamily="SegoeUIBold" Color="{ThemeResource MediaItemUnwatchedColor}">
                <Label.Content>
                  <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} + {1} + {2}">
                    <Binding Path="Track"/>
                    <Binding Source=" - "/>
                    <Binding Path="TrackName"/>
                  </MultiBinding>
                </Label.Content>
              </Label>
            </Grid>
          </ControlTemplate>
        </media:AudioAspectWrapper.Template>
      </media:AudioAspectWrapper>        
      
      <Image x:Name="ItemTypeSmall" Stretch="Uniform" Margin="10,2,0,2" Source="{Binding MediaItem}"
             Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
        </Image.IsVisible>
      </Image>
      <Image x:Name="ItemTypeMedium" Stretch="Uniform" Margin="-20,2,-10,2" Source="{Binding MediaItem}"
             Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
        </Image.IsVisible>
      </Image>
      <Image x:Name="ItemTypeLarge" Stretch="Uniform" Margin="-40,2,-30,2" Source="{Binding MediaItem}"
             Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
        </Image.IsVisible>
      </Image>
      <Label x:Name="NumberLabel" Grid.Row="0" Grid.Column="2" Content="{Binding Duration}" Margin="0,0,10,0" FontFamily="SegoeUIBold" 
             FontSize="{ThemeResource SmallFontSize}">
        <Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding Path="!Virtual"/>
            <Binding Source="{ThemeResource MediaItemUnwatchedColor}"/>
            <Binding Source="{ThemeResource MediaItemOfflineColor}"/>
          </MultiBinding>
        </Label.Color>
      </Label>
    </Grid>
  </ControlTemplate>

   <ControlTemplate x:Key="GridViewAudioItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <Image x:Name="thumb" Stretch="Fill" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="{StaticResource AUDIO_GRID_WIDTH}" Height="{StaticResource AUDIO_GRID_HEIGHT}"
             Source="{Binding MediaItem}">
        <Image.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Image.OpacityMask>
      </Image>
      <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4" BorderThickness="0" Width="{StaticResource AUDIO_GRID_WIDTH}" Height="{StaticResource AUDIO_GRID_HEIGHT}"
              IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Width="{StaticResource AUDIO_GRID_WIDTH}" Height="{StaticResource AUDIO_GRID_HEIGHT}"
             Source="audio.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>
      <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
      <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_OfflineFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewAudioItemSmallTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource AUDIO_GRID_WIDTH_S}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource AUDIO_GRID_HEIGHT_S}"/>
      </Grid.RowDefinitions>
      <Image x:Name="thumb" Stretch="Fill" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
             Source="{Binding MediaItem}">
        <Image.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Image.OpacityMask>
      </Image>
      <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4" BorderThickness="0" 
              IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
             Source="audio.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="CoverViewAudioItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="{StaticResource AUDIO_COVER_HEIGHT}"/>
        <RowDefinition Height="130"/>
      </Grid.RowDefinitions>

      <Rectangle Name="ButtonBase" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                 RadiusX="4" RadiusY="4" StrokeThickness="3.5" Margin="-2.5" Grid.Row="1"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Stroke>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0.02,1.4">
            <GradientStop Color="#CCFFFFFF" Offset="0"/>
            <GradientStop Color="#CCFFFFFF" Offset="0.7"/>
            <GradientStop Color="#66FFFFFF" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Stroke>
      </Rectangle>

      <Image Grid.Row="1" x:Name="thumb" Width="{StaticResource AUDIO_COVER_WIDTH}" Height="{StaticResource AUDIO_COVER_HEIGHT}" Stretch="Fill"
             Source="{Binding MediaItem}" Margin="0">
        <Image.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="5" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Image.OpacityMask>
      </Image>
      <Border Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="4" BorderThickness="0" 
              Width="{StaticResource AUDIO_COVER_WIDTH}" Height="{StaticResource AUDIO_COVER_HEIGHT}"
              IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image Grid.Row="1" Width="{StaticResource AUDIO_COVER_WIDTH}" Height="{StaticResource AUDIO_COVER_HEIGHT}"
             Source="audio.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>

      <Control Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
      <Control Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_OfflineFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>

      <Rectangle Grid.Row="1" Name="ButtonUpperShine" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                 RadiusX="5" RadiusY="5" StrokeThickness="0" Margin="0"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Fill>
          <ImageBrush ImageSource="Glass_frame.PNG" Stretch="Fill"/>
        </Rectangle.Fill>
      </Rectangle>

      <Label x:Name="ItemLabel" Grid.Row="2" Grid.Column="0" Content="{Binding SimpleTitle}" Wrap="True" Margin="0,10,0,0"
             Opacity="1.3" FontFamily="SegoeUIBold" TextTrimming="CharacterEllipsis"
             HorizontalAlignment="Center" FontSize="{ThemeResource SmallerFontSize}" Width="{StaticResource AUDIO_COVER_WIDTH}">
        <Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="!HasFocus"/>
            <Binding Source="{ThemeResource MenuTextBackground}"/>
            <Binding Source="{ThemeResource TextColor}"/>
          </MultiBinding>
        </Label.Color>
      </Label>
    </Grid>
  </ControlTemplate>

  <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--++++++++++++++++++++++ Audio Album ++++++++++++++++++++++++-->

  <ControlTemplate x:Key="ListViewAlbumItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}" Margin="0,0,10,0" FontFamily="SegoeUIBold"
             FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource MediaItemUnwatchedColor}">
        <!--Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == 0 ? {1} : {2}">
            <Binding Path="PlayCount"/>
            <Binding Source="{ThemeResource TextColor}"/>
            <Binding Source="{ThemeResource WatchedTextColor}"/>
          </MultiBinding>
        </-->
      </Label>
      <Image x:Name="ItemTypeSmall" Stretch="Uniform" Margin="10,2,0,2"
             Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Album" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
        </Image.IsVisible>
      </Image>
      <Image x:Name="ItemTypeMedium" Stretch="Uniform" Margin="-20,2,-10,2"
             Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Album" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
        </Image.IsVisible>
      </Image>
      <Image x:Name="ItemTypeLarge" Stretch="Uniform" Margin="-40,2,-30,2"
             Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Album" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
        </Image.IsVisible>
      </Image>
      <Label x:Name="NumberLabel" Grid.Row="0" Grid.Column="2" Content="{Binding Tracks}" Margin="0,0,10,0" FontFamily="SegoeUIBold"
          Color="{ThemeResource MediaItemUnwatchedColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <!--Name needs to be duration, so the TextColor can be changed-->
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewAlbumItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <Image x:Name="thumb" Stretch="Fill" Width="{StaticResource AUDIO_GRID_WIDTH}" Height="{StaticResource AUDIO_GRID_HEIGHT}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Album" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Image.OpacityMask>
      </Image>
      <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4" BorderThickness="0" Width="{StaticResource AUDIO_GRID_WIDTH}" Height="{StaticResource AUDIO_GRID_HEIGHT}"
              IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image Source="audio.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}" Width="{StaticResource AUDIO_GRID_WIDTH}" Height="{StaticResource AUDIO_GRID_HEIGHT}" />
      <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
      <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_OfflineFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewAlbumItemSmallTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource AUDIO_GRID_WIDTH_S}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource AUDIO_GRID_HEIGHT_S}"/>
      </Grid.RowDefinitions>
      <Image x:Name="thumb" Stretch="Fill">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Album" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Image.OpacityMask>
      </Image>
      <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" CornerRadius="4" BorderThickness="0" 
              IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image Source="audio.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="CoverViewAlbumItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="{StaticResource AUDIO_COVER_HEIGHT}"/>
        <RowDefinition Height="130"/>
      </Grid.RowDefinitions>

      <Rectangle Name="ButtonBase" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                 RadiusX="4" RadiusY="4" StrokeThickness="3.5" Margin="-2.5" Grid.Row="1"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Stroke>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0.02,1.4">
            <GradientStop Color="#CCFFFFFF" Offset="0"/>
            <GradientStop Color="#CCFFFFFF" Offset="0.7"/>
            <GradientStop Color="#66FFFFFF" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Stroke>
      </Rectangle>

      <Image x:Name="thumb" Grid.Row="1" Width="{StaticResource AUDIO_COVER_WIDTH}" Height="{StaticResource AUDIO_COVER_HEIGHT}" Stretch="Fill">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Album" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="5" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Image.OpacityMask>
      </Image>

      <Border Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="4" BorderThickness="0" 
              Width="{StaticResource AUDIO_COVER_WIDTH}" Height="{StaticResource AUDIO_COVER_HEIGHT}"
              IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image Grid.Row="1" Width="{StaticResource AUDIO_COVER_WIDTH}" Height="{StaticResource AUDIO_COVER_HEIGHT}"
             Source="audio.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>
      <Control Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
      <Control Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_OfflineFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableGridWatchedFlags}"/>

      <Rectangle Grid.Row="1" Name="ButtonUpperShine" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                 RadiusX="5" RadiusY="5" StrokeThickness="0" Margin="0"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Fill>
          <ImageBrush ImageSource="Glass_frame.PNG" Stretch="Fill"/>
        </Rectangle.Fill>
      </Rectangle>

      <Label x:Name="ItemLabel" Grid.Row="2" Grid.Column="0" Content="{Binding SimpleTitle}" Wrap="True" Margin="0,10,0,0"
             Opacity="1.3" FontFamily="SegoeUIBold" TextTrimming="CharacterEllipsis"
             HorizontalAlignment="Center" FontSize="{ThemeResource SmallerFontSize}" Width="{StaticResource AUDIO_COVER_WIDTH}">
        <Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="!HasFocus"/>
            <Binding Source="{ThemeResource MenuTextBackground}"/>
            <Binding Source="{ThemeResource TextColor}"/>
          </MultiBinding>
        </Label.Color>
      </Label>
    </Grid>
  </ControlTemplate>

  <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--+++++++++++++++++++++++++ Image +++++++++++++++++++++++++++-->
  
  <ControlTemplate x:Key="ListViewImageItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="5,4,5,4">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
               Source="{Binding MediaItem}" FallbackSource="ImageSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
               Source="{Binding MediaItem}" FallbackSource="ImageSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
               Source="{Binding MediaItem}" FallbackSource="ImageLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}" Color="{ThemeResource MediaItemUnwatchedColor}"
             FontSize="{ThemeResource SmallFontSize}" FontFamily="SegoeUIBold"/>
      <Label x:Name="NumberLabel" Grid.Row="0" Grid.Column="2" Content="{Binding Size}" FontFamily="SegoeUIBold"
             Color="{ThemeResource MediaItemUnwatchedColor}" FontSize="{ThemeResource SmallFontSize}" Margin="0,0,10,0"/>
      <Grid x:Name="Details" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Stretch">
        <Grid.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
        </Grid.IsVisible>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="200"/>
        </Grid.ColumnDefinitions>
        <Label x:Name="FileTypeTitle" Grid.Column="0" Content="File type: " FontSize="{ThemeResource SmallFontSize}" 
               FontFamily="SegoeUIBold" Color="{StaticResource MenuTextBackground}"/>
        <Label x:Name="FileType" Grid.Column="1" Content="{Binding Extension}" FontSize="{ThemeResource SmallFontSize}"
               FontFamily="SegoeUIBold" Color="{StaticResource MenuTextBackground}"/>
      </Grid>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewImageItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="0" 
              Width="{StaticResource AUDIO_GRID_WIDTH}" Height="{StaticResource AUDIO_GRID_HEIGHT}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image Stretch="Uniform" Width="{StaticResource AUDIO_GRID_WIDTH}" Height="{StaticResource AUDIO_GRID_HEIGHT}" FallbackSource="Image.png">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Image" fanart:FanArtType="Thumbnail"
                              fanart:FanArtName="{Binding Source={Binding MediaItem}, Path=MediaItemId}" fanart:MaxWidth="250" fanart:MaxHeight="250" fanart:Cache="false"/>
        </Image.Source>
      </Image>
      <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
      <Grid.OpacityMask>
        <VisualBrush>
          <VisualBrush.Visual>
            <Border Name="mask" Background="White" CornerRadius="5" BorderThickness="0" BorderBrush="Black"/>
          </VisualBrush.Visual>
        </VisualBrush>
      </Grid.OpacityMask>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewImageItemSmallTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource AUDIO_GRID_WIDTH_S}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource AUDIO_GRID_HEIGHT_S}"/>
      </Grid.RowDefinitions>
      <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="0">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image x:Name="ItemTypeImage" Stretch="UniformToFill" FallbackSource="Image.png">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Image" fanart:FanArtType="Thumbnail"
                              fanart:FanArtName="{Binding Source={Binding MediaItem}, Path=MediaItemId}" fanart:MaxWidth="250" fanart:MaxHeight="250" fanart:Cache="false"/>
        </Image.Source>
      </Image>
      <Image Stretch="Uniform" Source="Image.png" IsVisible="{Binding ElementName=ItemTypeImage, Path=!HasImage}"/>
      <Control HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
      <Grid.OpacityMask>
        <VisualBrush>
          <VisualBrush.Visual>
            <Border Name="mask" Background="White" CornerRadius="5" BorderThickness="0" BorderBrush="Black"/>
          </VisualBrush.Visual>
        </VisualBrush>
      </Grid.OpacityMask>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="CoverViewImageItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource AUDIO_COVER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="{StaticResource AUDIO_COVER_HEIGHT}"/>
        <RowDefinition Height="130"/>
      </Grid.RowDefinitions>

      <Rectangle Name="ButtonBase" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                 RadiusX="4" RadiusY="4" StrokeThickness="3.5" Margin="-2.5" Grid.Row="1"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Stroke>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0.02,1.4">
            <GradientStop Color="#CCFFFFFF" Offset="0"/>
            <GradientStop Color="#CCFFFFFF" Offset="0.7"/>
            <GradientStop Color="#66FFFFFF" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Stroke>
      </Rectangle>

      <Border Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="4" BorderThickness="0" 
              Width="{StaticResource AUDIO_COVER_WIDTH}" Height="{StaticResource AUDIO_COVER_HEIGHT}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image Name="thumb" Stretch="Uniform" Grid.Row="1" Source="{Binding MediaItem}" FallbackSource="Image.png" Margin="7"/>
      <Control Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-3,-3,0" Template="{StaticResource Cover_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
      
      <Rectangle Grid.Row="1" Name="ButtonUpperShine" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                 RadiusX="5" RadiusY="5" StrokeThickness="0" Margin="0"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Fill>
          <ImageBrush ImageSource="Glass_frame.PNG" Stretch="Fill"/>
        </Rectangle.Fill>
      </Rectangle>

      <Label x:Name="ItemLabel" Grid.Row="2" Grid.Column="0" Content="{Binding SimpleTitle}" Wrap="True" Margin="0,10,0,0"
             Opacity="1.3" FontFamily="SegoeUIBold" TextTrimming="CharacterEllipsis"
             HorizontalAlignment="Center" FontSize="{ThemeResource SmallerFontSize}" Width="{StaticResource AUDIO_COVER_WIDTH}">
        <Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="!HasFocus"/>
            <Binding Source="{ThemeResource MenuTextBackground}"/>
            <Binding Source="{ThemeResource TextColor}"/>
          </MultiBinding>
        </Label.Color>
      </Label>
    </Grid>
  </ControlTemplate>

  <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--++++++++++++++++++++++++ Person +++++++++++++++++++++++++++-->
  
  <ControlTemplate x:Key="GridViewPersonFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource ARTIST_GRID_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource ARTIST_GRID_HEIGHT}"/>
      </Grid.RowDefinitions>
      <Grid.OpacityMask>
        <VisualBrush>
          <VisualBrush.Visual>
            <Border Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
          </VisualBrush.Visual>
        </VisualBrush>
      </Grid.OpacityMask>
      <Image x:Name="ItemTypeImage" Stretch="UniformToFill" Margin="0,1.5,0,0">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Undefined" fanart:FanArtType="Thumbnail" fanart:FanArtName="{Binding FirstMediaItem.MediaItemId}"
             fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
      </Image>
      <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="0" 
              Margin="0,1.5,0,0" IsVisible="{Binding ElementName=ItemTypeImage, Path=!HasImage}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image Stretch="UniformToFill" Source="person.png" Margin="0,0,0,25"
             IsVisible="{Binding ElementName=ItemTypeImage, Path=!HasImage}">
      </Image>
      <Label x:Name="ItemLabel" HorizontalAlignment="Center" VerticalAlignment="Bottom" 
             TextTrimming="CharacterEllipsis" IsVisible="{Binding ElementName=ItemTypeImage, Path=!HasImage}"
             Content="{Binding SimpleTitle}" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}" Margin="5"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="ListViewPersonFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="5,0,5,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Undefined" fanart:FanArtType="Thumbnail" fanart:FanArtName="{Binding FirstMediaItem.MediaItemId}"
             fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform" FallbackSource="person.png"
            Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Undefined" fanart:FanArtType="Thumbnail" fanart:FanArtName="{Binding FirstMediaItem.MediaItemId}"
             fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform" FallbackSource="person.png"
            Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Undefined" fanart:FanArtType="Thumbnail" fanart:FanArtName="{Binding FirstMediaItem.MediaItemId}"
             fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}" FontFamily="SegoeUIBold"
          Color="{ThemeResource MediaItemUnwatchedColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="NumItems" Grid.Row="0" Grid.Column="2" Content="{Binding NumItems}" FontFamily="SegoeUIBold"
          Color="{ThemeResource MediaItemUnwatchedColor}" FontSize="{ThemeResource SmallFontSize}" Margin="10,0,10,0"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="CoverViewPersonFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="{StaticResource AUDIO_COVER_HEIGHT}"/>
        <RowDefinition Height="130"/>
      </Grid.RowDefinitions>

      <Rectangle Name="ButtonBase" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                 RadiusX="4" RadiusY="4" StrokeThickness="3.5" Margin="-2.5" Grid.Row="1"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Stroke>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0.02,1.4">
            <GradientStop Color="#CCFFFFFF" Offset="0"/>
            <GradientStop Color="#CCFFFFFF" Offset="0.7"/>
            <GradientStop Color="#66FFFFFF" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Stroke>
      </Rectangle>

      <Image x:Name="thumb" Grid.Row="1" Width="{StaticResource AUDIO_COVER_WIDTH}" Height="{StaticResource AUDIO_COVER_HEIGHT}" Stretch="Fill">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Undefined" fanart:FanArtType="Thumbnail" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="5" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Image.OpacityMask>
      </Image>

      <Border Grid.Row="1" VerticalAlignment="Center" HorizontalAlignment="Center" CornerRadius="4" BorderThickness="0" 
              Width="{StaticResource AUDIO_COVER_WIDTH}" Height="{StaticResource AUDIO_COVER_HEIGHT}"
              IsVisible="{Binding ElementName=thumb, Path=!HasImage}">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image Grid.Row="1" Width="{StaticResource AUDIO_COVER_WIDTH}" Height="{StaticResource AUDIO_COVER_HEIGHT}"
             Source="person.png" Stretch="Uniform" IsVisible="{Binding ElementName=thumb, Path=!HasImage}"/>

      <Rectangle Grid.Row="1" Name="ButtonUpperShine" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                 RadiusX="5" RadiusY="5" StrokeThickness="0" Margin="0"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Fill>
          <ImageBrush ImageSource="Glass_frame.PNG" Stretch="Fill"/>
        </Rectangle.Fill>
      </Rectangle>

      <Label x:Name="ItemLabel" Grid.Row="2" Grid.Column="0" Content="{Binding SimpleTitle}" Wrap="True" Margin="0,10,0,0"
             Opacity="1.3" FontFamily="SegoeUIBold" TextTrimming="CharacterEllipsis"
             HorizontalAlignment="Center" FontSize="{ThemeResource SmallerFontSize}" Width="{StaticResource AUDIO_COVER_WIDTH}">
        <Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="!HasFocus"/>
            <Binding Source="{ThemeResource MenuTextBackground}"/>
            <Binding Source="{ThemeResource TextColor}"/>
          </MultiBinding>
        </Label.Color>
      </Label>
    </Grid>
  </ControlTemplate>

  <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--++++++++++++++++++++++ MovieGenre +++++++++++++++++++++++++-->

  <ControlTemplate x:Key="GridViewMovieGenreFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource VIDEO_GRID_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource VIDEO_GRID_HEIGHT}"/>
      </Grid.RowDefinitions>
      <Grid.OpacityMask>
        <VisualBrush>
          <VisualBrush.Visual>
            <Border Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
          </VisualBrush.Visual>
        </VisualBrush>
      </Grid.OpacityMask>
      <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="0">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image x:Name="ItemTypeImage" Stretch="Fill">
        <Image.Source>
          <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}GenreVideo\Wide\{0}.jpg"/>
        </Image.Source>
      </Image>
      <Border VerticalAlignment="Bottom" HorizontalAlignment="Stretch" BorderThickness="0" Background="Black" Opacity="0.5" Height="37"/>
      <Label x:Name="ItemLabel" HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="5,7,5,3" Color="{ThemeResource TextColor}" Height="35"
             TextTrimming="CharacterEllipsis" FontSize="{ThemeResource SmallerFontSize}"
             Content="{Binding Path=SimpleTitle}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="ListViewMovieGenreFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="5,0,5,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform" Margin="0"
               Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.Source>
            <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}GenreVideo\Wide\{0}.jpg"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform" 
               Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.Source>
            <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}GenreVideo\Wide\{0}.jpg"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform" Margin="5"
               Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.Source>
            <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}GenreVideo\Wide\{0}.jpg"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label Grid.Row="0" Grid.Column="1" x:Name="ItemLabel" FontSize="{ThemeResource SmallFontSize}" FontFamily="SegoeUIBold" Color="{ThemeResource MediaItemUnwatchedColor}">
        <Label.Content>
          <Binding Path="SimpleTitle" />
        </Label.Content>
      </Label>
      <Label x:Name="NumItems" Grid.Row="0" Grid.Column="2" Content="{Binding NumItems}" FontFamily="SegoeUIBold"
          Color="{ThemeResource MediaItemUnwatchedColor}" FontSize="{ThemeResource SmallFontSize}" Margin="10,0,10,0"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="CoverViewMovieGenreFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource AUDIO_COVER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="{StaticResource AUDIO_COVER_HEIGHT}"/>
        <RowDefinition Height="130"/>
      </Grid.RowDefinitions>
      <Rectangle Name="ButtonBase" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                 RadiusX="4" RadiusY="4" StrokeThickness="3.5" Margin="-2.5" Grid.Row="1"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Stroke>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0.02,1.4">
            <GradientStop Color="#CCFFFFFF" Offset="0"/>
            <GradientStop Color="#CCFFFFFF" Offset="0.7"/>
            <GradientStop Color="#66FFFFFF" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Stroke>
      </Rectangle>

      <Grid Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
            Width="{StaticResource AUDIO_COVER_WIDTH}" Height="{StaticResource AUDIO_COVER_HEIGHT}">
        <Grid.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Grid.Background>
        <Grid.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Grid.OpacityMask>
        <Image x:Name="thumb" Stretch="UniformToFill">
          <Image.Source>
            <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}GenreVideo\Square\{0}.jpg"/>
          </Image.Source>
        </Image>        
      </Grid>

      <Rectangle Grid.Row="1" Name="ButtonUpperShine" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                 RadiusX="5" RadiusY="5" StrokeThickness="0" Width="{StaticResource AUDIO_COVER_WIDTH}" Height="{StaticResource AUDIO_COVER_HEIGHT}"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Fill>
          <ImageBrush ImageSource="Glass_frame.PNG" Stretch="Fill"/>
        </Rectangle.Fill>
      </Rectangle>

      <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="0" Margin="0,10,0,0">
        <Label x:Name="ItemLabel" Content="{Binding SimpleTitle}" Wrap="True" 
               Opacity="1.3" FontFamily="SegoeUIBold" TextTrimming="CharacterEllipsis"
               HorizontalAlignment="Center" FontSize="{ThemeResource SmallerFontSize}" Width="{StaticResource AUDIO_COVER_WIDTH}">
          <Label.Color>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
              <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="!HasFocus"/>
              <Binding Source="{ThemeResource MenuTextBackground}"/>
              <Binding Source="{ThemeResource TextColor}"/>
            </MultiBinding>
          </Label.Color>
        </Label>
        <Label x:Name="NumberLabel" Content="{Binding NumItems}" Wrap="True" Opacity="1.3" Margin="0,-5,0,0" FontFamily="SegoeUIBold"
               HorizontalAlignment="Center" FontSize="{ThemeResource SmallerFontSize}" Width="{StaticResource AUDIO_COVER_WIDTH}">
          <Label.Color>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
              <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="!HasFocus"/>
              <Binding Source="{ThemeResource MenuTextBackground}"/>
              <Binding Source="{ThemeResource TextColor}"/>
            </MultiBinding>
          </Label.Color>
        </Label>
      </StackPanel>

    </Grid>
  </ControlTemplate>

  <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--++++++++++++++++++++++ SeriesGenre +++++++++++++++++++++++++-->

  <ControlTemplate x:Key="GridViewSeriesGenreFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource VIDEO_GRID_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource VIDEO_GRID_HEIGHT}"/>
      </Grid.RowDefinitions>
      <Grid.OpacityMask>
        <VisualBrush>
          <VisualBrush.Visual>
            <Border Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
          </VisualBrush.Visual>
        </VisualBrush>
      </Grid.OpacityMask>
      <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="0">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image x:Name="ItemTypeImage" Stretch="Fill">
        <Image.Source>
          <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}GenreVideo\Wide\{0}.jpg"/>
        </Image.Source>
      </Image>
      <Border VerticalAlignment="Bottom" HorizontalAlignment="Stretch" BorderThickness="0" Background="Black" Opacity="0.5" Height="37"/>
      <Label HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="5,7,5,3" Color="{ThemeResource TextColor}" Height="35"
             TextTrimming="CharacterEllipsis" Content="{Binding SimpleTitle}" FontSize="{ThemeResource SmallerFontSize}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="ListViewSeriesGenreFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="5,0,5,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform" Margin="0"
               Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.Source>
            <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}GenreVideo\Wide\{0}.jpg"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
               Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.Source>
            <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}GenreVideo\Wide\{0}.jpg"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform" Margin="5"
               Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.Source>
            <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}GenreVideo\Wide\{0}.jpg"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label Grid.Row="0" Grid.Column="1" x:Name="ItemLabel" FontSize="{ThemeResource SmallFontSize}" FontFamily="SegoeUIBold" Color="{ThemeResource MediaItemUnwatchedColor}">
        <Label.Content>
          <Binding Path="SimpleTitle" />
        </Label.Content>
      </Label>
      <Label x:Name="NumItems" Grid.Row="0" Grid.Column="2" Content="{Binding NumItems}" FontFamily="SegoeUIBold"
          Color="{ThemeResource MediaItemUnwatchedColor}" FontSize="{ThemeResource SmallFontSize}" Margin="10,0,10,0"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="CoverViewSeriesGenreFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource AUDIO_COVER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="{StaticResource AUDIO_COVER_HEIGHT}"/>
        <RowDefinition Height="130"/>
      </Grid.RowDefinitions>

      <Rectangle Name="ButtonBase" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                 RadiusX="4" RadiusY="4" StrokeThickness="3.5" Margin="-2.5" Grid.Row="1"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Stroke>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0.02,1.4">
            <GradientStop Color="#CCFFFFFF" Offset="0"/>
            <GradientStop Color="#CCFFFFFF" Offset="0.7"/>
            <GradientStop Color="#66FFFFFF" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Stroke>
      </Rectangle>

      <Grid Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
            Width="{StaticResource AUDIO_COVER_WIDTH}" Height="{StaticResource AUDIO_COVER_HEIGHT}">
        <Grid.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Grid.Background>
        <Grid.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Grid.OpacityMask>
        <Image x:Name="thumb" Stretch="UniformToFill">
          <Image.Source>
            <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}GenreVideo\Square\{0}.jpg"/>
          </Image.Source>
        </Image>
      </Grid>

      <Rectangle Grid.Row="1" Name="ButtonUpperShine" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                 RadiusX="5" RadiusY="5" StrokeThickness="0" Width="{StaticResource AUDIO_COVER_WIDTH}" Height="{StaticResource AUDIO_COVER_HEIGHT}"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Fill>
          <ImageBrush ImageSource="Glass_frame.PNG" Stretch="Fill"/>
        </Rectangle.Fill>
      </Rectangle>

      <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="0" Margin="0,10,0,0">
        <Label x:Name="ItemLabel" Content="{Binding SimpleTitle}" Wrap="True" 
               Opacity="1.3" FontFamily="SegoeUIBold" TextTrimming="CharacterEllipsis"
               HorizontalAlignment="Center" FontSize="{ThemeResource SmallerFontSize}" Width="{StaticResource AUDIO_COVER_WIDTH}">
          <Label.Color>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
              <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="!HasFocus"/>
              <Binding Source="{ThemeResource MenuTextBackground}"/>
              <Binding Source="{ThemeResource TextColor}"/>
            </MultiBinding>
          </Label.Color>
        </Label>
        <Label x:Name="NumberLabel" Content="{Binding NumItems}" Wrap="True" Opacity="1.3" Margin="0,-5,0,0" FontFamily="SegoeUIBold"
               HorizontalAlignment="Center" FontSize="{ThemeResource SmallerFontSize}" Width="{StaticResource AUDIO_COVER_WIDTH}">
          <Label.Color>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
              <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="!HasFocus"/>
              <Binding Source="{ThemeResource MenuTextBackground}"/>
              <Binding Source="{ThemeResource TextColor}"/>
            </MultiBinding>
          </Label.Color>
        </Label>
      </StackPanel>
    </Grid>
  </ControlTemplate>

  <!--+++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
  <!--+++++++++++++++++++++ AudioGenre ++++++++++++++++++++++++++-->

  <ControlTemplate x:Key="GridViewAudioGenreFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource VIDEO_GRID_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource VIDEO_GRID_HEIGHT}"/>
      </Grid.RowDefinitions>
      <Grid.OpacityMask>
        <VisualBrush>
          <VisualBrush.Visual>
            <Border Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
          </VisualBrush.Visual>
        </VisualBrush>
      </Grid.OpacityMask>
      <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="0">
        <Border.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Border.Background>
      </Border>
      <Image x:Name="ItemTypeImage" Stretch="Fill">
        <Image.Source>
          <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}GenreAudio\Wide\{0}.jpg"/>
        </Image.Source>
      </Image>
      <Border VerticalAlignment="Bottom" HorizontalAlignment="Stretch" BorderThickness="0" Background="Black" Opacity="0.5" Height="35"/>

      <Label HorizontalAlignment="Center" VerticalAlignment="Bottom" Margin="5,7,5,3" Color="{ThemeResource TextColor}" Height="35"
             TextTrimming="CharacterEllipsis" Content="{Binding SimpleTitle}" FontSize="{ThemeResource SmallerFontSize}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="ListViewAudioGenreFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="5,0,5,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform" Margin="0"
               Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.Source>
            <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}GenreAudio\Wide\{0}.jpg"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
               Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.Source>
            <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}GenreAudio\Wide\{0}.jpg"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform" Margin="5"
               Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.Source>
            <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}GenreAudio\Wide\{0}.jpg"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label Grid.Row="0" Grid.Column="1" x:Name="ItemLabel" FontSize="{ThemeResource SmallFontSize}" FontFamily="SegoeUIBold" Color="{ThemeResource MediaItemUnwatchedColor}">
        <Label.Content>
          <Binding Path="SimpleTitle" />
        </Label.Content>
      </Label>
      <Label x:Name="NumItems" Grid.Row="0" Grid.Column="2" Content="{Binding NumItems}" FontFamily="SegoeUIBold"
          Color="{ThemeResource MediaItemUnwatchedColor}" FontSize="{ThemeResource SmallFontSize}" Margin="10,0,10,0"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="CoverViewAudioGenreFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource AUDIO_COVER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="{StaticResource AUDIO_COVER_HEIGHT}"/>
        <RowDefinition Height="130"/>
      </Grid.RowDefinitions>

      <Rectangle Name="ButtonBase" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                 RadiusX="4" RadiusY="4" StrokeThickness="3.5" Margin="-2.5" Grid.Row="1"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Stroke>
          <LinearGradientBrush StartPoint="0,0" EndPoint="0.02,1.4">
            <GradientStop Color="#CCFFFFFF" Offset="0"/>
            <GradientStop Color="#CCFFFFFF" Offset="0.7"/>
            <GradientStop Color="#66FFFFFF" Offset="1"/>
          </LinearGradientBrush>
        </Rectangle.Stroke>
      </Rectangle>

      <Grid Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
            Width="{StaticResource AUDIO_COVER_WIDTH}" Height="{StaticResource AUDIO_COVER_HEIGHT}">
        <Grid.Background>
          <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor1}" Offset="0"/>
            <GradientStop Color="{ThemeResource MediaItemBackgroundColor2}" Offset="1"/>
          </LinearGradientBrush>
        </Grid.Background>
        <Grid.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Background="White" CornerRadius="6" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Grid.OpacityMask>
        <Image x:Name="thumb" Stretch="UniformToFill">
          <Image.Source>
            <Binding Path="Id" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}GenreAudio\Square\{0}.jpg"/>
          </Image.Source>
        </Image>
      </Grid>

      <Rectangle Grid.Row="1" Name="ButtonUpperShine" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                 RadiusX="5" RadiusY="5" StrokeThickness="0" Width="{StaticResource AUDIO_COVER_WIDTH}" Height="{StaticResource AUDIO_COVER_HEIGHT}"
                 IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Rectangle.Fill>
          <ImageBrush ImageSource="Glass_frame.PNG" Stretch="Fill"/>
        </Rectangle.Fill>
      </Rectangle>

      <StackPanel Orientation="Vertical" Grid.Row="2" Grid.Column="0" Margin="0,10,0,0">
        <Label x:Name="ItemLabel" Content="{Binding SimpleTitle}" Wrap="True" 
               Opacity="1.3" FontFamily="SegoeUIBold" TextTrimming="CharacterEllipsis"
               HorizontalAlignment="Center" FontSize="{ThemeResource SmallerFontSize}" Width="{StaticResource AUDIO_COVER_WIDTH}">
          <Label.Color>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
              <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="!HasFocus"/>
              <Binding Source="{ThemeResource MenuTextBackground}"/>
              <Binding Source="{ThemeResource TextColor}"/>
            </MultiBinding>
          </Label.Color>
        </Label>
        <Label x:Name="NumberLabel" Content="{Binding NumItems}" Wrap="True" Opacity="1.3" Margin="0,-5,0,0" FontFamily="SegoeUIBold"
               HorizontalAlignment="Center" FontSize="{ThemeResource SmallerFontSize}" Width="{StaticResource AUDIO_COVER_WIDTH}">
          <Label.Color>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
              <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="!HasFocus"/>
              <Binding Source="{ThemeResource MenuTextBackground}"/>
              <Binding Source="{ThemeResource TextColor}"/>
            </MultiBinding>
          </Label.Color>
        </Label>
      </StackPanel>
    </Grid>
  </ControlTemplate>

  <!-- Specific media navigation data templates -->
  <DataTemplate DataType="{x:Type navitems:SeriesFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewSeriesFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewSeriesFilterItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewSeriesFilterItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:SeasonFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewSeriesSeasonFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewSeriesSeasonFilterItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewSeriesSeasonFilterItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:EpisodeItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewEpisodeItemTemplate}"/>
          <Binding Source="{StaticResource GridViewEpisodeItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewEpisodeItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:MovieFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewMovieFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewMovieFilterItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewMovieFilterItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:MovieItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewMovieItemTemplate}"/>
          <Binding Source="{StaticResource GridViewMovieItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewMovieItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>


  <DataTemplate DataType="{x:Type navitems:ContainerItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewContainerItemTemplate}"/>
          <Binding Source="{StaticResource GridViewContainerItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewContainerItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:FilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewFilterItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewFilterItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:CertificationFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewCertificationFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewCertificationFilterItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewCertificationFilterItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:VideoItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewVideoItemTemplate}"/>
          <Binding Source="{StaticResource GridViewVideoItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewVideoItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:AudioItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewAudioItemTemplate}"/>
          <Binding Source="{StaticResource GridViewAudioItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewAudioItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:AlbumFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewAlbumItemTemplate}"/>
          <Binding Source="{StaticResource GridViewAlbumItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewAlbumItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:ImageItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewImageItemTemplate}"/>
          <Binding Source="{StaticResource GridViewImageItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewImageItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:ArtistFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewPersonFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewPersonFilterItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewPersonFilterItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:ActorFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewPersonFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewPersonFilterItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewPersonFilterItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:ComposerFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewPersonFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewPersonFilterItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewPersonFilterItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:CharacterFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewPersonFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewPersonFilterItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewPersonFilterItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:WriterFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewPersonFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewPersonFilterItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewPersonFilterItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:SeriesGenreFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewSeriesGenreFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewSeriesGenreFilterItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewSeriesGenreFilterItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:MovieGenreFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewMovieGenreFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewMovieGenreFilterItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewMovieGenreFilterItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:AudioGenreFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewAudioGenreFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewAudioGenreFilterItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewAudioGenreFilterItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataStringProvider x:Key="MediaItemDataStringProvider" Path="SimpleTitle"/>

  <Style x:Key="MediaItemWithContextMenuContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Style="{ThemeResource ButtonWideStyle_List}"
                  Command="{DynamicResource ResourceKey=Menu_Command}"
                  IsEnabled="{Binding Enabled}"
                  SetFocusPrio="{Binding Path=Selected,Mode=OneTime,Converter={StaticResource BoolToFocusPriorityConverter},ConverterParameter=Highest}">
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
                <Setter TargetName="ItemLabel" Property="Color" Value="{ThemeResource MediaItemFocussedColor}"/>
                <Setter TargetName="NumberLabel" Property="Color" Value="{ThemeResource MediaItemFocussedColor}"/>
                <Setter TargetName="PartlyWatchedLabel" Property="Opacity" Value="1"/>
                <Setter TargetName="WatchedLabel" Property="Opacity" Value="1"/>
                <Setter Property="StackPanel.ZIndex" Value="100.0"/>
              </Trigger>
            </Button.Triggers>
            <Button.ContextMenuCommand>
              <Command Source="{StaticResource MediaItemsActionModel}" Path="ShowMediaItemActions" Parameters="{LateBoundValue BindingValue={Binding MediaItem}}"/>
            </Button.ContextMenuCommand>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MediaItemGridViewContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Style="{ThemeResource ButtonWideStyle_Grid}"
                  Command="{DynamicResource ResourceKey=Menu_Command}"
                  IsEnabled="{Binding Enabled}"
                  SetFocusPrio="{Binding Path=Selected,Mode=OneTime,Converter={StaticResource BoolToFocusPriorityConverter},ConverterParameter=Highest}">
            <Button.ContextMenuCommand>
              <Command Source="{StaticResource MediaItemsActionModel}" Path="ShowMediaItemActions" Parameters="{LateBoundValue BindingValue={Binding MediaItem}}"/>
            </Button.ContextMenuCommand>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="CoverMediaItemContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Style="{ThemeResource ButtonWideStyle_Cover}"
                  Command="{DynamicResource ResourceKey=Menu_Command}"
                  IsEnabled="{Binding Enabled}"
                  SetFocusPrio="{Binding Path=Selected,Mode=OneTime,Converter={StaticResource BoolToFocusPriorityConverter},ConverterParameter=Highest}">
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="ItemLabel" Property="IsVisible" Value="True"/>
                <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
              </Trigger>
            </Button.Triggers>
            <Button.ContextMenuCommand>
              <Command Source="{StaticResource MediaItemsActionModel}" Path="ShowMediaItemActions" Parameters="{LateBoundValue BindingValue={Binding MediaItem}}"/>
            </Button.ContextMenuCommand>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MediaItemsListListViewStyle" BasedOn="{ThemeResource ContentsMenuListViewStyle}">
    <EventSetter Event="SelectionChanged" Handler="{CommandStencil Source={StaticResource FanArtBackgroundModel}, Path=SetSelectedItem}"/>
    <Setter Property="ItemTemplate"/>
    <!-- Don't inherit the ItemTemplate from ContentsMenuListViewStyle - It should remain null to make the SkinEngine choose an appropriate template -->
    <Setter Property="DataStringProvider" Value="{ThemeResource MediaItemDataStringProvider}"/>
    <Setter Property="GroupHeaderContainerStyle" Value="{ThemeResource DefaultGroupHeaderContainerStyle}"/>
    <BindingSetter Property="ItemContainerStyle">
      <BindingSetter.BindingWrapper>
        <BindingWrapper>
          <BindingWrapper.Binding>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
              <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
              <Binding Source="{ThemeResource MediaItemWithContextMenuContainerStyle}"/>
              <Binding Source="{ThemeResource MediaItemGridViewContainerStyle}"/>
              <Binding Source="{ThemeResource CoverMediaItemContainerStyle}"/>
              
            </MultiBinding>
          </BindingWrapper.Binding>
        </BindingWrapper>
      </BindingSetter.BindingWrapper>
    </BindingSetter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <ScrollViewer CanContentScroll="True" Margin="5"
                        HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled"
                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <ScrollViewer.Style>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{GridLayout} ? {1} : ({0} == {LayoutType}.{ListLayout} ? {2} : {3})">
                <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
                <Binding Source="{ThemeResource HorizontalMediaScrollViewerStyle}"/>
                <!--Grid-->
                <Binding Source="{ThemeResource VerticalMediaScrollViewerStyle}"/>
                <!--List-->
                <Binding Source="{ThemeResource HorizontalMediaScrollViewerStyle}"/>
                <!--Cover-->
              </MultiBinding>
            </ScrollViewer.Style>
            <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>

    <BindingSetter Property="GroupHeaderTemplate">
      <BindingSetter.BindingWrapper>
        <BindingWrapper>
          <BindingWrapper.Binding>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
              <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
              <!-- List layout = vertical -->
              <Binding>
                <Binding.Source>
                  <DataTemplate>
                      <Border Margin="3,10,3,3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                        <Border.Background>
                          <LinearGradientBrush StartPoint="0,0" EndPoint="1,0.3">
                            <GradientStop Color="#33000000" Offset="0"/>
                            <GradientStop Color="#0D000000" Offset="1"/>
                          </LinearGradientBrush>
                        </Border.Background>
                      <Label FontSize="{ThemeResource SmallerFontSize}" Color="{ThemeResource MediaItemUnwatchedColor}" HorizontalAlignment="Left" VerticalAlignment="Center"
                               Content="{Binding Path=GroupingValue}" Margin="6,1,1,2" />
                      </Border>
                  </DataTemplate>
                </Binding.Source>
              </Binding>
              <!-- Grid or Cover layout = horizontal -->
              <Binding>
                <Binding.Source>
                  <DataTemplate>
                    <Grid>
                      <Grid.LayoutTransform>
                        <RotateTransform Angle="-90"/>
                      </Grid.LayoutTransform>

                      <StackPanel Orientation="Horizontal" Margin="3" HorizontalAlignment="Left" VerticalAlignment="Top">
                        <Label FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource MediaItemUnwatchedColor}"
                                 Content="{Binding Path=GroupingValue}" />
                      </StackPanel>
                    </Grid>
                  </DataTemplate>
                </Binding.Source>
              </Binding>
            </MultiBinding>
          </BindingWrapper.Binding>
        </BindingWrapper>
      </BindingSetter.BindingWrapper>
    </BindingSetter>

    <BindingSetter Property="ItemsPanel">
      <BindingSetter.BindingWrapper>
        <BindingWrapper>
          <BindingWrapper.Binding>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
              <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
              <!-- List layout -->
              <Binding>
                <Binding.Source>
                  <ItemsPanelTemplate>
                    <!--VirtualizingStackPanel x:Name="ListItemsHost" IsItemsHost="True"/-->
                    <AnimatedStackPanel x:Name="ListItemsHost" IsItemsHost="True" ScrollMargin="130,130" Margin="0,-20,0,-60">
                      <AnimatedStackPanel.Resources>
                        <Storyboard x:Key="ScrollAnimation" FillBehavior="HoldEnd">
                          <DoubleAnimation BeginTime="00:00:00" From="0" To="1" Duration="00:00:00.400" AccelerationRatio="0.5" DecelerationRatio="0.5"
                                           FillBehavior="HoldEnd" Storyboard.TargetName="ListItemsHost" Storyboard.TargetProperty="ScrollOffsetMultiplier" />
                        </Storyboard>
                      </AnimatedStackPanel.Resources>
                      <AnimatedStackPanel.Triggers>
                        <EventTrigger RoutedEvent="AnimatedStackPanel.Scroll">
                          <EventTrigger.Actions>
                            <BeginStoryboard Storyboard="{ThemeResource ScrollAnimation}"/>
                          </EventTrigger.Actions>
                        </EventTrigger>
                      </AnimatedStackPanel.Triggers>
                    </AnimatedStackPanel>
                  </ItemsPanelTemplate>
                </Binding.Source>
              </Binding>
              <!-- Grid layout -->
              <Binding>
                <Binding.Source>
                  <ItemsPanelTemplate>
                    <AnimatedWrapPanel x:Name="GridItemsHost" IsItemsHost="True" Orientation="Vertical" ScrollMargin="500,500" Margin="-240,0,-290,5">
                      <AnimatedWrapPanel.Resources>
                        <Storyboard x:Key="ScrollAnimation" FillBehavior="HoldEnd">
                          <DoubleAnimation BeginTime="00:00:00" From="0" To="1" Duration="00:00:00.400" AccelerationRatio="0.5" DecelerationRatio="0.5"
                                           FillBehavior="HoldEnd" Storyboard.TargetName="GridItemsHost" Storyboard.TargetProperty="ScrollOffsetMultiplier" />
                        </Storyboard>
                      </AnimatedWrapPanel.Resources>
                      <AnimatedWrapPanel.Triggers>
                        <EventTrigger RoutedEvent="AnimatedWrapPanel.Scroll">
                          <EventTrigger.Actions>
                            <BeginStoryboard Storyboard="{ThemeResource ScrollAnimation}"/>
                          </EventTrigger.Actions>
                        </EventTrigger>
                      </AnimatedWrapPanel.Triggers>
                    </AnimatedWrapPanel>
                  </ItemsPanelTemplate>
                </Binding.Source>
              </Binding>
              <!-- Cover layout -->
              <Binding>
                <Binding.Source>
                  <ItemsPanelTemplate>
                    <AnimatedStackPanel x:Name="CoverListItemsHost" IsItemsHost="True" Orientation="Horizontal" ScrollMargin="280,260" Margin="-140,0,-170,0">
                      <AnimatedStackPanel.Resources>
                        <Storyboard x:Key="ScrollAnimation" FillBehavior="HoldEnd">
                          <DoubleAnimation BeginTime="00:00:00" From="0" To="1" Duration="00:00:00.400" AccelerationRatio="0.5" DecelerationRatio="0.5"
                                           FillBehavior="HoldEnd" Storyboard.TargetName="CoverListItemsHost" Storyboard.TargetProperty="ScrollOffsetMultiplier" />
                        </Storyboard>
                      </AnimatedStackPanel.Resources>
                      <AnimatedStackPanel.Triggers>
                        <EventTrigger RoutedEvent="AnimatedStackPanel.Scroll">
                          <EventTrigger.Actions>
                            <BeginStoryboard Storyboard="{ThemeResource ScrollAnimation}"/>
                          </EventTrigger.Actions>
                        </EventTrigger>
                      </AnimatedStackPanel.Triggers>
                    </AnimatedStackPanel>
                  </ItemsPanelTemplate>
                </Binding.Source>
              </Binding>
            </MultiBinding>
          </BindingWrapper.Binding>
        </BindingWrapper>
      </BindingSetter.BindingWrapper>
    </BindingSetter>
  </Style>

  <!-- Latest media styles -->
  <Model x:Key="MediaModel" Id="4CDD601F-E280-43b9-AD0A-6D7B2403C856"/>

  <Style x:Key="LatestMediaListViewStyle" BasedOn="{ThemeResource MediaItemsListListViewStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <ScrollViewer CanContentScroll="True" Margin="5"
                        HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled"
                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <AnimatedStackPanel x:Name="CoverListItemsHost" IsItemsHost="True" Orientation="Horizontal">
            <AnimatedStackPanel.Resources>
              <Storyboard x:Key="ScrollAnimation" FillBehavior="HoldEnd">
                <DoubleAnimation BeginTime="00:00:00" From="0" To="1" Duration="00:00:00.300" 
                                           FillBehavior="HoldEnd" Storyboard.TargetName="CoverListItemsHost" Storyboard.TargetProperty="ScrollOffsetMultiplier" />
              </Storyboard>
            </AnimatedStackPanel.Resources>
            <AnimatedStackPanel.Triggers>
              <EventTrigger RoutedEvent="AnimatedStackPanel.Scroll">
                <EventTrigger.Actions>
                  <BeginStoryboard Storyboard="{ThemeResource ScrollAnimation}"/>
                </EventTrigger.Actions>
              </EventTrigger>
            </AnimatedStackPanel.Triggers>
          </AnimatedStackPanel>

            <!--UniformGrid x:Name="ListItemsHost" Columns="{x:Static latestmedia:LatestMediaModel.QUERY_LIMIT}" IsItemsHost="True" /-->
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate x:Key="NestedMediaListDataTemplate" DataType="{x:Type collections:ListItem}">
    <StackPanel>
      <Label Content="{Binding [Name]}" FontFamily="SegoeUIBold"
             Color="{ThemeResource MenuTextBackground}" Margin="20,0,20,20"/>

      <ListView x:Name="MediaItemsList" Style="{ThemeResource LatestMediaListViewStyle}" ItemsSource="{Binding Items}"
                HorizontalAlignment="Stretch" Margin="20,0,20,0">
        <ListView.Resources>
          <Command x:Key="Menu_Command" Source="{StaticResource MediaModel}" Path="Select" Parameters="{LateBoundValue BindingValue={Binding}}"/>
        </ListView.Resources>
      </ListView>
    </StackPanel>
  </DataTemplate>

  <Style x:Key="NestedMediaListViewStyle" BasedOn="{ThemeResource DefaultListViewStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <ScrollViewer CanContentScroll="True" Margin="0,-50,0,0"
                        HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled"
                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <ScrollViewer.Style>
              <Binding Source="{ThemeResource VerticalMediaScrollViewerStyle}"/>
            </ScrollViewer.Style>
            <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,50,0,0"/>
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemTemplate" Value="{ThemeResource NestedMediaListDataTemplate}"/>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <AnimatedStackPanel x:Name="ListItemsHost" IsItemsHost="True" ScrollMargin="0,0" Margin="0,0,0,0">
            <AnimatedStackPanel.Resources>
              <Storyboard x:Key="ScrollAnimation" FillBehavior="HoldEnd">
                <DoubleAnimation BeginTime="00:00:00" From="0" To="1" Duration="00:00:00.700" 
                                           FillBehavior="HoldEnd" Storyboard.TargetName="ListItemsHost" Storyboard.TargetProperty="ScrollOffsetMultiplier" />
              </Storyboard>
            </AnimatedStackPanel.Resources>
            <AnimatedStackPanel.Triggers>
              <EventTrigger RoutedEvent="AnimatedStackPanel.Scroll">
                <EventTrigger.Actions>
                  <BeginStoryboard Storyboard="{ThemeResource ScrollAnimation}"/>
                </EventTrigger.Actions>
              </EventTrigger>
            </AnimatedStackPanel.Triggers>
          </AnimatedStackPanel>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>
