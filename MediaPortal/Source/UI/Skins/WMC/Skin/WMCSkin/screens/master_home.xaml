<?xml version="1.0" encoding="utf-8"?>

<!--
This is the master template for all screens:
A header text, player controls and a client area.
Below the client area, the navigation bar is visible.

Usage:

  <Include
      xmlns="www.team-mediaportal.com/2008/mpf/directx"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      Source="screens\master.xaml">
    <Include.Resources>
      <ResourceWrapper x:Key="Header_Text">
        [Header text]
      </ResourceWrapper>
      <ControlTemplate x:Key="Client_Template">
        [UI element to be displayed in the client area]
      </ControlTemplate>
    </Include.Resources>
  </Include>

Parameters which have to be accessible by a DynamicResource lookup:
 - Header_Text (String): The text to be displayed as header
 - Client_Template (ConrolTemplate): Template for element to be shown in the client area.
-->

<Screen
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mp_special_workflow="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Workflow;assembly=SkinEngine"
    xmlns:mp_special_controls="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Controls;assembly=SkinEngine"
    mp_special_workflow:WorkflowContext.StateSlot="Root"
    x:Name="Screen"
    >
  <Screen.Resources>
    <Model x:Key="DefaultMenuModel" Id="9E9D0CD9-4FDB-4c0f-A0C4-F356E151BDE0"/>
    <Model x:Key="HomeContentModel" Id="24BB1BBE-A3B3-474A-8D55-C37EBE182F6C"/>
  </Screen.Resources>
  
  <Screen.Triggers>
    <EventTrigger RoutedEvent="Screen.Show">
      <!--Set default state of side menus to hidden-->
      <TriggerCommand Command="{Command Source={StaticResource DefaultMenuModel}, Path=CloseMenu}"/>
    </EventTrigger>
  </Screen.Triggers>

  <Grid x:Name="RootElement">
    <Grid.RowDefinitions>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*"/>
    </Grid.ColumnDefinitions>

    <Control x:Name="FanArtBackground" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="-1"
             Template="{DynamicResource ResourceKey=FanArtBackgroundHome_Template}"/>

    <Grid.Resources>
      <Model x:Key="MouseModel" Id="CA6428A7-A6E2-4dd3-9661-F89CEBAF8E62"/>
      <Model x:Key="SkinSettingsModel" Id="13961014-16C4-4361-9751-8E2C585EFD44"/>
      <Model x:Key="ScreenModeModel" Id="0E621AA5-0733-4E88-A0F0-887F8D73A055"/>
      <Model x:Key="StateModel" Id="B23D8DC1-405E-4564-92D0-E247C299FFAE"/>
    </Grid.Resources>

    <DockPanel Grid.Column="0" Grid.Row="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
      LastChildFill="True">
      <Grid x:Name="HeaderPanel" Margin="5" DockPanel.Dock="Top">
        <Grid.RowDefinitions>
          <RowDefinition Height="100"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="50"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Grid x:Name="HeaderTextPanel" Grid.Column="2" Grid.Row="0" HorizontalAlignment="Right" Margin="0,30,50,0">
          <Grid.Resources>
            <Model x:Key="TimeModel" Id="E821B1C8-0666-4339-8027-AA45A4F6F107"/>
          </Grid.Resources>
          <Label x:Name="TimeLabel"  Content="{Binding Source={StaticResource TimeModel}, Path=CurrentTime}"
                 FontSize="{ThemeResource NormalFontSize}"
                 Color="{ThemeResource TextColor}" VerticalAlignment="Center" HorizontalAlignment="Right"/>
        </Grid>
      </Grid>
                  
      <!-- Order matters here: The client area control has to be the last control (LastChildFill) -->
      <Control x:Name="ClientArea" DockPanel.Dock="Right" Template="{DynamicResource Client_Template}"/>
    </DockPanel>

    <!-- FooterPanel -->
    <Grid x:Name="FooterPanel" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="1000,0,0,0">
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <mp_special_controls:PlayerControl Margin="15" Style="{ThemeResource NavigationScreenPlayerControlStyle}" 
                  AutoVisibility="True" PlayerContext="PrimaryPlayer" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
      <mp_special_controls:PlayerControl Margin="15" Style="{ThemeResource NavigationScreenPlayerControlStyle}"
                  AutoVisibility="True" PlayerContext="SecondaryPlayer" HorizontalAlignment="Right" VerticalAlignment="Bottom"/>
    </Grid>

    <Grid x:Name="WindowButtonsPanel" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Top" Margin="30,10,0,10">
      <Grid.Resources>
        <Model x:Key="NotificationsModel" Id="843F373D-0B4B-47ba-8DD1-0D18F00FAAD3"/>
        <Model x:Key="StateModel" Id="B23D8DC1-405E-4564-92D0-E247C299FFAE"/>
        <Model x:Key="LoginModel" Id="82582433-FD64-41bd-9059-7F662DBDA713"/>
      </Grid.Resources>
      <Grid.RowDefinitions>
        <RowDefinition Height="90"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="450"/>
      </Grid.ColumnDefinitions>
      <StackPanel Orientation="Horizontal" VerticalAlignment="Center">
        <StackPanel Orientation="Horizontal" Context="{Service Window}" IsVisible="{Binding Source={StaticResource MouseModel},Path=IsMouseUsed}" 
                    IsEnabled="{Binding Source={StaticResource HomeContentModel}, Path=!IsContentFocused}" VerticalAlignment="Center">
          <Control Style="{ThemeResource NotificationControlStyle}" Margin="5,2,5,5" IsVisible="{Binding Source={StaticResource NotificationsModel},Path=IsNotificationsHintVisible}"
                     HorizontalAlignment="Left" VerticalAlignment="Center"/>
        </StackPanel>
        <!-- User Indicator -->
        <Button Style="{ThemeResource UserButtonStyle}" Margin="0,0,5,0" IsVisible="{Binding Source={StaticResource LoginModel},Path=EnableUserLogin}" Focusable="False"
                Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}"/>

        <!-- Importing Indicator -->
        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,5,0"
                    DataContext="{Binding Source={StaticResource StateModel}, Path=[C37B62D0-8E87-42A4-877E-B41944DA9FC9]}"
                    IsVisible="{Binding Converter={StaticResource ReferenceToBoolConverter}}">
          <Label FontSize="{ThemeResource SmallerFontSize}" Margin="10,0,0,0"
                 Color="{ThemeResource TextColor}" VerticalAlignment="Center" HorizontalAlignment="Right">
            <Label.IsVisible>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0}>=0">
                <Binding Path="Progress"/>
              </MultiBinding>
            </Label.IsVisible>
            <Label.Content>
              <Binding Path="Progress" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}{0}%"/>
            </Label.Content>
          </Label>
          <Button Style="{ThemeResource ImportingButtonStyle}" IsVisible="{Binding IsImporting}"/>
        </StackPanel>

        <!--Data Base Upgrade Indicator-->
        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,5,0"
                    DataContext="{Binding Source={StaticResource StateModel}, Path=[431528C9-5610-45CD-9807-0130AE1761DA]}"
                    IsVisible="{Binding Converter={StaticResource ReferenceToBoolConverter}}">
          <Label FontSize="{ThemeResource TinyFontSize}" Content="[Notifications.Upgrading]" Margin="10,-5,0,-10" 
                 Color="{ThemeResource TextColor}" VerticalAlignment="Center" HorizontalAlignment="Right">
            <Label.IsVisible>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0}>=0">
                <Binding Path="Progress"/>
              </MultiBinding>
            </Label.IsVisible>
            <Label.Content>
              <Binding Path="Progress" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}{0}%"/>
            </Label.Content>
          </Label>
          <Button Style="{ThemeResource UpgradingButtonStyle}" IsVisible="{Binding IsUpgrading}"/>
        </StackPanel>

        <!-- Recording Indicator -->
        <StackPanel Orientation="Horizontal" VerticalAlignment="Center" Margin="0,0,5,0"
                        DataContext="{Binding Source={StaticResource StateModel}, Path=[2A58935C-3363-4FA1-B48D-1EF0E81F830D]}"
                        IsVisible="{Binding Converter={StaticResource ReferenceToBoolConverter}}">
          <Button Style="{ThemeResource RecordingButtonStyle}" IsVisible="{Binding IsRecording}"/>
        </StackPanel>

        <!-- Currently Playing Indicator -->
        <mp_special_controls:PlayerControl Style="{ThemeResource CPPlayerControlStyle}" VerticalAlignment="Center"
                  AutoVisibility="True" HorizontalAlignment="Left">
        </mp_special_controls:PlayerControl>
      </StackPanel>
    </Grid>

    <!-- Mouse control buttons -->
    <Grid x:Name="MouseButtonsPanel" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,0,5,0">
      <StackPanel Orientation="Horizontal">
        <StackPanel Margin="0,0,0,0" Orientation="Horizontal" Context="{Service Window}"  IsVisible="{Binding Source={StaticResource MouseModel},Path=IsMouseUsed}">
          <Button x:Name="WindowedButton" Style="{ThemeResource MinMaxButtonStyle}" Margin="5,2,0,0" HorizontalAlignment="Right"
                  IsEnabled="{Binding Source={StaticResource HomeContentModel}, Path=!IsContentFocused}"
                  Command="{Command Source={Service Window},Path=SwitchMode,Parameters=NormalWindowed}">
            <Button.IsVisible>
              <Binding Source="{StaticResource ScreenModeModel}" Path="CurrentScreenMode" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {ScreenMode}.{FullScreen}"/>
            </Button.IsVisible>
          </Button>
          <Button x:Name="MaximizedButton" Style="{ThemeResource MinMaxButtonStyle}" Margin="5,2,0,0" HorizontalAlignment="Right"
                  IsEnabled="{Binding Source={StaticResource HomeContentModel}, Path=!IsContentFocused}"
                  Command="{Command Source={Service Window},Path=SwitchMode,Parameters=FullScreen}">
            <Button.IsVisible>
              <Binding Source="{StaticResource ScreenModeModel}" Path="CurrentScreenMode" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} != {ScreenMode}.{FullScreen}"/>
            </Button.IsVisible>
          </Button>
          <Button x:Name="ExitButton" Style="{ThemeResource ExitButtonStyle}" Margin="5,2,0,0" HorizontalAlignment="Right"
                  IsEnabled="{Binding Source={StaticResource HomeContentModel}, Path=!IsContentFocused}"
                  Command="{Command Source={Service Window},Path=Shutdown}">
            <Button.IsVisible>
              <Binding Source="{StaticResource ScreenModeModel}" Path="CurrentScreenMode" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {ScreenMode}.{FullScreen}"/>
            </Button.IsVisible>
          </Button>
        </StackPanel>
      </StackPanel>
    </Grid>

  </Grid>
</Screen>
