<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
  xmlns="www.team-mediaportal.com/2008/mpf/directx"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:collections="clr-namespace:MediaPortal.UI.Presentation.DataObjects;assembly=MediaPortal.UI"
  xmlns:mp_special_controls="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Controls;assembly=SkinEngine"
  xmlns:media="clr-namespace:MediaPortal.UiComponents.Media.Models.AspectWrappers;assembly=Media"
  DependsOnStyleResources="Buttons,Colors,Consts,mediastyles">

  <Model x:Key="SkinSettingsModel" Id="13961014-16C4-4361-9751-8E2C585EFD44"/>

  <Style x:Key="PrimaryVideoOSDStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <Control Style="{ThemeResource OSDContainer}" Width="{ThemeResource FullScreenContentVideoPrimaryPlayerOSDWidth}"
                   DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <Control.Resources>

              <ControlTemplate x:Key="OSD_Background_Template">
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Bottom">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <Image Source="OSD_background.png" Stretch="Fill" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0"/>
                </Grid>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_Cover_Template">
                 <Image x:Name="Poster" Context="{Model Id=4E2301B4-3C17-4a1d-8DE5-2CEA169A0256}" Stretch="Uniform" Height="145" Source="{Binding CoverUrl}"/>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_InfoArea_Template">
                <Grid x:Name="InfoGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="150"/>
                  </Grid.RowDefinitions>

                  <Label x:Name="VideoName" Content="{Binding Path=MediaItemTitle}" Color="{ThemeResource TextColor}"
                         FontSize="{ThemeResource SmallFontSize}" FontFamily="Noto-Bold"
                         Scroll="Auto" HorizontalAlignment="Left" VerticalAlignment="Center"/>

                  <Label x:Name="CurrentTimeLabel" Grid.Column="1" Content="{Binding Source={StaticResource TimeModel}, Path=CurrentTime}"
                         HorizontalAlignment="Right" VerticalAlignment="Center" Margin="10,0,25,0" FontFamily="Noto-Bold"
                         FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}"/>

                  <Label Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2"
                         x:Name="StoryPlot" Wrap="True" Scroll="Auto" ScrollSpeed="5" ScrollDelay="5"
                         HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0.6" Margin="0,0,20,0"
                         FontSize="{ThemeResource SmallFontSize}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                         Content="{Binding Path=Description}" Color="{ThemeResource TextColor}" />

                </Grid>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_Progress_Template">
                <Control Template="{ThemeResource GenericVideoOSDProgressControl}" />
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_Controls_Template">
                <DockPanel HorizontalAlignment="Stretch" VerticalAlignment="Center" LastChildFill="False">

                  <StackPanel x:Name="PlayControlsPanel_Front" DockPanel.Dock="Left" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="90">
                    <Button x:Name="SkipBackButton" Style="{ThemeResource SkipBackButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSkipBack}"
                            Command="{Command Previous}"/>
                    <Button x:Name="RewindButton" Style="{ThemeResource RewindButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSeekBackward}"
                            Command="{Command SeekBackward}"/>
                    <Button x:Name="PlayPauseButton" Margin="{ThemeResource PlayerControlButtonMargins}" Style="{ThemeResource PlayPauseButtonStyle}"
                            Command="{Command Play}">
                      <Button.IsVisible>
                        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} || {1}">
                          <Binding Path="CanPlay"/>
                          <Binding Path="CanPause"/>
                        </MultiBinding>
                      </Button.IsVisible>
                      <Button.Triggers>
                        <DataTrigger Binding="{Binding CanPause}" Value="True">
                          <Setter Property="Command" Value="{Command Pause}"/>
                        </DataTrigger>
                      </Button.Triggers>
                    </Button>
                    <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanStop}"
                            Command="{Command Stop}"/>
                    <Button x:Name="ForwardButton" Style="{ThemeResource ForwardButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSeekForward}"
                            Command="{Command SeekForward}"/>
                    <Button x:Name="SkipForwardButton" Style="{ThemeResource SkipForwardButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSkipForward}"
                            Command="{Command Next}"/>
                  </StackPanel>

                  <StackPanel x:Name="PlayControlsPanel_Back" DockPanel.Dock="Right" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="90">
                    <Button x:Name="SelectContextMenuButton" Style="{ThemeResource SelectContextMenuButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                            Command="{Command Source={StaticResource VideoPlayerModel},Path=OpenPlayerConfigurationDialog}"/>
                    <Button x:Name="SelectTitleButton" Style="{ThemeResource ShowDvdMenuButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                            IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.TitlesAvailable}"
                            Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseTitleDialog}"/>
                    <Button x:Name="SelectChapterButton" Style="{ThemeResource SelectChapterButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                            IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.ChaptersAvailable}"
                            Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseChapterDialog}"/>
                    <Button x:Name="SelectSubtitleButton" Style="{ThemeResource SelectSubtitleButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                            IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.SubtitlesAvailable}"
                            Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseSubtitleDialog}"/>
                    <Button x:Name="AudioActiveButton" Style="{ThemeResource AudioActiveButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                            Command="{Command AudioButtonPressed}" IsVisible="{Binding IsAudio}"/>
                    <Button x:Name="AudioInactiveButton" Style="{ThemeResource AudioInactiveButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                            Command="{Command AudioButtonPressed}" IsVisible="{Binding !IsAudio}" />
                    <StackPanel Orientation="Vertical" Margin="0,3,1,-3">
                      <Button x:Name="VolumeUpButton" Style="{ThemeResource VolumeUpButtonStyle}"
                              Command="{Command Source={StaticResource GeneralPlayerModel},Path=VolumeUp}"/>
                      <Button x:Name="VolumeDownButton" Style="{ThemeResource VolumeDownButtonStyle}"
                              Command="{Command Source={StaticResource GeneralPlayerModel},Path=VolumeDown}"/>
                    </StackPanel>
                    <Button x:Name="BackButton" Style="{ThemeResource NavigateBackButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                            Command="{Command Source={Service WorkflowManager},Path=NavigatePop,Parameters=1}"/>
                    <Button x:Name="CloseButton" Style="{ThemeResource CloseButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                            Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=BBFA7DB7-5055-48D5-A904-0F0C79849369}"/>
                  </StackPanel>

                  <Control x:Name="ProgressPresenter" DockPanel.Dock="Center" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                           Template="{DynamicResource ResourceKey=OSD_Progress_Template}" Margin="20,0,20,15"/>

                </DockPanel>
              </ControlTemplate>

            </Control.Resources>
          </Control>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="PlayerContext" Value="PrimaryPlayer"/>
  </Style>
  
  <DataTemplate x:Key="CinemaSelectItemDataTemplate" DataType="{x:Type collections:ListItem}">
    <DockPanel x:Name="ItemControl" LastChildFill="False">
      <CheckBox DockPanel.Dock="Left" IsChecked="{Binding Selected}" />
      <Label x:Name="ItemLabel" DockPanel.Dock="Center" Content="{Binding [Text]}"
             HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}"
             Color="{ThemeResource TextColor}"/>
    </DockPanel>
  </DataTemplate>

  <!-- ListView style to be used in the content area of the screens -->
  <Style x:Key="CinemaSelectListViewStyle" BasedOn="{ThemeResource DefaultListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource CinemaSelectItemDataTemplate}"/>
    <Setter Property="DataStringProvider" Value="{ThemeResource ContentsMenuItemDataStringProvider}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource DefaultMenuItemContainerStyle}"/>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel x:Name="ListItemsHost" IsItemsHost="True"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="CinemaMovieGridItemContainerTemplate" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Style="{ThemeResource ButtonWideStyle_Grid}" Margin="0,0,0,0"
                  Command="{DynamicResource ResourceKey=Menu_Command}"
                  IsEnabled="{Binding Enabled}" SetFocus="{Binding Path=Selected,Mode=OneTime}">
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="ItemLabel" Property="Color" Value="{ThemeResource TextColor}"/>
                <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
                <Setter Property="StackPanel.ZIndex" Value="100.0"/>
              </Trigger>
            </Button.Triggers>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="CinemaMovieListItemContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Style="{ThemeResource ButtonWideStyle_List}" Margin="0,0,0,0"
                  Command="{DynamicResource ResourceKey=Menu_Command}"
                  IsEnabled="{Binding Enabled}" SetFocus="{Binding Path=Selected,Mode=OneTime}">
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="ItemLabel" Property="Color" Value="{ThemeResource TextColor}"/>
                <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
                <Setter Property="StackPanel.ZIndex" Value="100.0"/>
              </Trigger>
            </Button.Triggers>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate x:Key="CinemaMovieGridDataTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Grid x:Name="PosterGrid" Width="{StaticResource POSTER_GRID_WIDTH}" Height="{StaticResource POSTER_GRID_HEIGHT}">
        <Image Stretch="Fill" Source="Poster_small.png" Margin="-5"/>
        <Image x:Name="poster" Stretch="Fill" Margin="3" Source="{Binding [CoverUrl]}"/>

        <!-- Fallback Content, if no poster existing -->
        <Image Stretch="UniformToFill" Margin="3" Source="media_item_background.jpg" IsVisible="{Binding ElementName=poster, Path=!HasImage}" Opacity="0.7"/>
        <Image Source="video.png" HorizontalAlignment="Left" VerticalAlignment="Top" Height="70" Width="70" Stretch="Uniform" Margin="-5"
               IsVisible="{Binding ElementName=poster, Path=!HasImage}">
          <Image.Opacity>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
              <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
              <Binding Source="1.3"/>
              <Binding Source="0.6"/>
            </MultiBinding>
          </Image.Opacity>
        </Image>

        <Label Margin="15,50,10,10" IsVisible="{Binding ElementName=poster, Path=!HasImage}" FontSize="{ThemeResource SmallFontSize}"
               Color="{ThemeResource TextColor}" Wrap="True" TextTrimming="CharacterEllipsis"
               Content="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=[Title]}" VerticalAlignment="Center" HorizontalAlignment="Stretch">
          <Label.Opacity>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
              <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
              <Binding Source="1.0"/>
              <Binding Source="0.5"/>
            </MultiBinding>
          </Label.Opacity>
        </Label>
      </Grid>

    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="CinemaMovieListDataTemplate" DataType="{x:Type collections:ListItem}">
    <DockPanel x:Name="ItemControl" LastChildFill="False">
      <Label x:Name="ItemLabel" DockPanel.Dock="Top" Content="{Binding [Name]}" FontFamily="Noto-Bold"
             HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}"
             Color="{ThemeResource MediaItemUnwatchedColor}"/>
    </DockPanel>
  </DataTemplate>

  <!-- ListView style to be used in the content area of the screens -->
  <Style x:Key="CinemaMovieViewStyle" BasedOn="{ThemeResource DefaultListViewStyle}">
    <Setter Property="DataStringProvider" Value="{ThemeResource ContentsMenuItemDataStringProvider}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ScrollViewer CanContentScroll="True" Margin="0,-80,0,0" Style="{ThemeResource VerticalMediaScrollViewerStyle}"
                          HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled" >
              <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
            </ScrollViewer>
            <StackPanel Orientation="Vertical" IsVisible="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsEmpty}"
                      HorizontalAlignment="Center" VerticalAlignment="Center">
              <Image Source="empty.png" Height="100" Stretch="Uniform"/>
              <Label Content="[Media.ViewEmpty]" Color="{ThemeResource HintTextColor}"/>
            </StackPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <BindingSetter Property="ItemTemplate">
      <BindingSetter.BindingWrapper>
        <BindingWrapper>
          <BindingWrapper.Binding>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
              <Binding Source="{StaticResource GenericViewModeModel}" Path="LayoutType"/>
              <Binding Source="{ThemeResource CinemaMovieListDataTemplate}"/>
              <Binding Source="{ThemeResource CinemaMovieGridDataTemplate}"/>
            </MultiBinding>
          </BindingWrapper.Binding>
        </BindingWrapper>
      </BindingSetter.BindingWrapper>
    </BindingSetter>
    <BindingSetter Property="ItemContainerStyle">
      <BindingSetter.BindingWrapper>
        <BindingWrapper>
          <BindingWrapper.Binding>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
              <Binding Source="{StaticResource GenericViewModeModel}" Path="LayoutType"/>
              <Binding Source="{ThemeResource CinemaMovieListItemContainerStyle}"/>
              <Binding Source="{ThemeResource CinemaMovieGridItemContainerTemplate}"/>
            </MultiBinding>
          </BindingWrapper.Binding>
        </BindingWrapper>
      </BindingSetter.BindingWrapper>
    </BindingSetter>
    <BindingSetter Property="ItemsPanel">
      <BindingSetter.BindingWrapper>
        <BindingWrapper>
          <BindingWrapper.Binding>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
              <Binding Source="{StaticResource GenericViewModeModel}" Path="LayoutType"/>
              <!-- List layout -->
              <Binding>
                <Binding.Source>
                  <ItemsPanelTemplate>
                    <AnimatedStackPanel x:Name="ListItemsHost" IsItemsHost="True" ScrollMargin="130,130" Margin="0,-10,0,-40"
                                        LoopScroll="{Binding Source={StaticResource SkinSettingsModel}, Path=[Nereus].EnableLoopScrolling}">
                      <AnimatedStackPanel.Resources>
                        <Storyboard x:Key="ScrollAnimation" FillBehavior="HoldEnd">
                          <DoubleAnimation BeginTime="00:00:00" From="0" To="1" Duration="00:00:00.300"
                                           FillBehavior="HoldEnd" Storyboard.TargetName="ListItemsHost" Storyboard.TargetProperty="ScrollOffsetMultiplier" />
                        </Storyboard>
                      </AnimatedStackPanel.Resources>
                      <AnimatedStackPanel.Triggers>
                        <EventTrigger RoutedEvent="AnimatedStackPanel.Scroll">
                          <EventTrigger.Actions>
                            <BeginStoryboard Storyboard="{ThemeResource ScrollAnimation}"/>
                          </EventTrigger.Actions>
                        </EventTrigger>
                      </AnimatedStackPanel.Triggers>
                    </AnimatedStackPanel>
                  </ItemsPanelTemplate>
                </Binding.Source>
              </Binding>
              <!-- Grid layout -->
              <Binding>
                <Binding.Source>
                  <ItemsPanelTemplate>
                    <AnimatedWrapPanel x:Name="GridItemsHost" IsItemsHost="True" Orientation="Horizontal" ScrollMargin="400,400" Margin="50,-270,0,-305"
                                       LoopScroll="{Binding Source={StaticResource SkinSettingsModel}, Path=[Nereus].EnableLoopScrolling}">
                      <AnimatedWrapPanel.Resources>
                        <Storyboard x:Key="ScrollAnimation" FillBehavior="HoldEnd">
                          <DoubleAnimation BeginTime="00:00:00" From="0" To="1" Duration="00:00:00.400"
                                           FillBehavior="HoldEnd" Storyboard.TargetName="GridItemsHost" Storyboard.TargetProperty="ScrollOffsetMultiplier" />
                        </Storyboard>
                      </AnimatedWrapPanel.Resources>
                      <AnimatedWrapPanel.Triggers>
                        <EventTrigger RoutedEvent="AnimatedWrapPanel.Scroll">
                          <EventTrigger.Actions>
                            <BeginStoryboard Storyboard="{ThemeResource ScrollAnimation}"/>
                          </EventTrigger.Actions>
                        </EventTrigger>
                      </AnimatedWrapPanel.Triggers>
                    </AnimatedWrapPanel>
                  </ItemsPanelTemplate>
                </Binding.Source>
              </Binding>
            </MultiBinding>
          </BindingWrapper.Binding>
        </BindingWrapper>
      </BindingSetter.BindingWrapper>
    </BindingSetter>
  </Style>

</ResourceDictionary>
