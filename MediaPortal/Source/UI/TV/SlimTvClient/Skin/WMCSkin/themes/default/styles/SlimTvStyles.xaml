<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:collections="clr-namespace:MediaPortal.UI.Presentation.DataObjects;assembly=MediaPortal.UI"
    xmlns:mp_special_controls="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Controls;assembly=SkinEngine"
    xmlns:navitems="clr-namespace:MediaPortal.Plugins.SlimTv.Client.Models.Navigation;assembly=SlimTv.Client"
    xmlns:tv="clr-namespace:MediaPortal.Plugins.SlimTv.Client.Controls;assembly=SlimTv.Client"
    xmlns:fanart="clr-namespace:MediaPortal.Extensions.UserServices.FanArtService.Client;assembly=FanArtService.Client"
    DependsOnStyleResources="SlimTvColors,SlimTvConsts,OtherControlsOverrides,OtherControls,FullScreenContentConsts,MediaButtons,MediaColors,MediaStyles,MediaConsts,Consts,Colors,Buttons"
    >
  <!-- SlimTvClient model -->
  <Model x:Key="SlimTvClient" Id="8BEC1372-1C76-484c-8A69-C7F3103708EC"/>
  <Model x:Key="SlimTvMultiChannelGuide" Id="5054408D-C2A9-451f-A702-E84AFCD29C10"/>
  <Model x:Key="TimeModel" Id="E821B1C8-0666-4339-8027-AA45A4F6F107"/>
  <tv:SlimTvDateFormatConverter x:Key="SlimTvDateFormatConverter" />

  <Style x:Key="TVPlayerControlsProgressBarStyle" TargetType="{x:Type ProgressBar}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <Grid x:Name="ProgressBarGrid" UIElement.MouseClick="{CommandStencil RelativeSource={RelativeSource TemplatedParent}, Path=OnMouseClick}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Image Source="PlayerControl\seekbarshadow.png" Height="35" Stretch="Fill" VerticalAlignment="Center" Margin="-15,-1,-15,0"/>
            <Image Source="PlayerControl\seekbardummy.png" Height="35" Stretch="Fill" VerticalAlignment="Center" Margin="-15,-1,-15,0"/>
            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Center"
                       RadiusX="3.5" RadiusY="3.5" Height="10" Fill="{ThemeResource ProgressBarBackgroundColor}" Opacity="0.8"/>
            <StackPanel Orientation="Horizontal" Margin="-27,0,-27,0">
              <StackPanel Width="{TemplateBinding PartIndicatorWidth}"/>
              <Image Source="PlayerControl\Current.Position.Shadow.png" Width="55" Height="55" Stretch="Fill" Margin="-10"
                     VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </StackPanel>
            <Grid x:Name="ProgressBarIndicator" HorizontalAlignment="Left" VerticalAlignment="Center">
              <Grid VerticalAlignment="Center" HorizontalAlignment="Right" Margin="-100,-85,-95,0" Height="114">
                <Image Source="PlayerControl\Time.Indicator.png" Height="114" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0.9"/>
                <Label x:Name="CurrentTimeLabel" Grid.Column="0" Grid.Row="0" Content="{Binding Source={StaticResource TimeModel}, Path=CurrentTime}" Opacity="0.9"
                       HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,24" FontFamily="SegoeUIBold"
                       Color="Black" FontSize="{ThemeResource SmallFontSize}"/>
              </Grid>
              <Rectangle Width="{TemplateBinding PartIndicatorWidth}" HorizontalAlignment="Left" VerticalAlignment="Center"
                         RadiusX="3.5" RadiusY="3.5" Height="10" Fill="{ThemeResource ProgressBarFillColor}" Margin="0,0,0,0"/>
            </Grid>
            <StackPanel Orientation="Horizontal" Margin="-21,0,-21,0">
              <StackPanel Width="{TemplateBinding PartIndicatorWidth}"/>
              <Image Source="PlayerControl\Current.Position.png" Width="40" Height="40" Stretch="Fill"
                       VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </StackPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="PrimarySlimTvOSDStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <ControlTemplate.Resources>
            <Model x:Key="VideoPlayerModel" Id="4E2301B4-3C17-4a1d-8DE5-2CEA169A0256"/>
          </ControlTemplate.Resources>

          <Grid x:Name="MainOSDGrid" HorizontalAlignment="Stretch" Margin="10" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>

            <Image x:Name="ChannelLogo" Grid.Column="0" Grid.Row="0" Grid.RowSpan="3" Width="150" Stretch="Uniform" Margin="10">
              <Image.Source>
                <fanart:FanArtImageSource fanart:FanArtMediaType="ChannelTv" fanart:FanArtType="Banner" 
                                          fanart:FanArtName="{Binding Source={StaticResource SlimTvClient}, Path=ChannelName}"
                                          fanart:MaxWidth="0" fanart:MaxHeight="0"/>
              </Image.Source>
            </Image>

            <DockPanel Grid.Column="1" Grid.Row="0" LastChildFill="true" Margin="20,0,0,0">
              <Grid DockPanel.Dock="Center" HorizontalAlignment="Stretch">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label x:Name="StartTimeLabel" Grid.Column="0" Grid.Row="0" FontFamily="SegoeUIBold" Opacity="0.9" Panel.ZIndex="101"
                       Content="{Binding Source={StaticResource SlimTvClient},Path=CurrentProgram.StartTime, Converter={StaticResource SlimTvDateFormatConverter}}"
                       HorizontalAlignment="Center" VerticalAlignment="Center" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
                
                <Image Grid.Column="0" Grid.Row="0" Source="PlayerControl\Time.shadow.png" Stretch="Fill" Height="70" Margin="-30,0,-30,0" Panel.ZIndex="100">
                  <Image.Width>
                    <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0}+60">
                      <Binding Source="{Binding ElementName=StartTimeLabel, Path=ActualWidth}"/>
                    </MultiBinding>
                  </Image.Width>
                </Image>

                <Label x:Name="EndTimeLabel" Grid.Column="2" Grid.Row="0" FontFamily="SegoeUIBold" Opacity="0.9" Panel.ZIndex="101"
                       Content="{Binding Source={StaticResource SlimTvClient},Path=CurrentProgram.EndTime, Converter={StaticResource SlimTvDateFormatConverter}}"
                       Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" HorizontalAlignment="Center" VerticalAlignment="Center"/>
                <Image Grid.Column="2" Grid.Row="0" Source="PlayerControl\Time.shadow.png" Stretch="Fill" Height="70" Margin="-30,0,-30,0" Panel.ZIndex="100">
                  <Image.Width>
                    <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0}+60">
                      <Binding Source="{Binding ElementName=EndTimeLabel, Path=ActualWidth}"/>
                    </MultiBinding>
                  </Image.Width>
                </Image>

                <ProgressBar Grid.Row="0" Grid.Column="1" x:Name="ProgressBar" Height="35" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="30,0,30,0"
                             Value="{Binding Source={StaticResource SlimTvClient},Path=ProgramProgress, Mode=TwoWay}" Style="{ThemeResource TVPlayerControlsProgressBarStyle}"/>

              </Grid>
            </DockPanel>

            <StackPanel Grid.Column="1" Grid.Row="1" Grid.RowSpan="2" Orientation="Vertical" MaxWidth="900" Margin="20,-5,750,10" Panel.ZIndex="1" VerticalAlignment="Bottom">
              <StackPanel Orientation="Horizontal">
                <Label x:Name="CurrentProgramTitleLabel" Content="{Binding Source={StaticResource SlimTvClient},Path=CurrentProgram.Title}" Scroll="Auto"
                       HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="SegoeUIBold"
                       Color="{ThemeResource TextColor}"/>
                <Label x:Name="CurrentProgramSeriesLabel" Color="{ThemeResource TextColor}"
                       IsVisible="{Binding Source={StaticResource SlimTvClient},Path=CurrentProgram.Series, Converter={StaticResource EmptyStringToFalseConverter}}"
                       HorizontalAlignment="Left" VerticalAlignment="Center" FontFamily="SegoeUIBold" Scroll="Auto">
                  <Label.Content>
                    <Binding Source="{StaticResource SlimTvClient}" Path="CurrentProgram.Series" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{} ({0})"/>
                  </Label.Content>
                </Label>
              </StackPanel>
            </StackPanel>

            <DockPanel Margin="0" HorizontalAlignment="Right" Grid.Row="2" Grid.Column="1" Grid.ColumnSpan="2">
              <Grid DockPanel.Dock="Right">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="20"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Image Source="PlayerControl\BOTTOM.SHADOW.PNG" Stretch="Fill" Height="90" Margin="-190,-10,-20,-20" Opacity="0.8" Grid.ColumnSpan="2" Grid.Row="1" Panel.ZIndex="0" />

                <StackPanel x:Name="PlayControlsPanel" Orientation="Horizontal" Grid.Column="1" Grid.Row="1" Margin="0"
                            VerticalAlignment="Center" HorizontalAlignment="Right">
                  <StackPanel.LayoutTransform>
                    <TransformGroup>
                      <ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
                    </TransformGroup>
                  </StackPanel.LayoutTransform>
                  <Button x:Name="PreviousChannelButton" Style="{ThemeResource PreviousChapterButtonStyle}"
                          Command="{Command ZapPrevChannel}" Context="{Model Id=8BEC1372-1C76-484c-8A69-C7F3103708EC}"/>
                  <Button x:Name="NextChannelButton" Style="{ThemeResource NextChapterButtonStyle}" 
                          Command="{Command ZapNextChannel}" Context="{Model Id=8BEC1372-1C76-484c-8A69-C7F3103708EC}"/>
                  <Button x:Name="RecordButton" Style="{ThemeResource RecordButtonStyle}" Command="{Command RecordDialog}"
                          Context="{Model Id=8BEC1372-1C76-484c-8A69-C7F3103708EC}"/>
                  <Image Source="PlayerControl\DIVIDER.PNG" Height="35" Stretch="Uniform" VerticalAlignment="Center" Margin="3,0,3,0"/>
                  <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="0" IsVisible="{Binding CanStop}"
                          Command="{Command Stop}"/>
                  <Button x:Name="SkipBackButton" Style="{ThemeResource SkipBackButtonStyle}" Margin="0" IsVisible="{Binding CanSkipBack}"
                          Command="{Command Previous}"/>
                  <Button x:Name="RewindButton" Style="{ThemeResource RewindButtonStyle}" Margin="0" IsVisible="{Binding CanSeekBackward}"
                          Command="{Command SeekBackward}"/>
                  <Button x:Name="PlayButton" Style="{ThemeResource PlayButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPlay}"
                          Command="{Command Play}"/>
                  <Button x:Name="PauseButton" Style="{ThemeResource PauseButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPause}"
                          Command="{Command Pause}"/>
                  <Button x:Name="ForwardButton" Style="{ThemeResource ForwardButtonStyle}" Margin="0" IsVisible="{Binding CanSeekForward}"
                          Command="{Command SeekForward}"/>
                  <Button x:Name="SkipForwardButton" Style="{ThemeResource SkipForwardButtonStyle}" Margin="0" IsVisible="{Binding CanSkipForward}"
                          Command="{Command Next}"/>
                  <Image Source="PlayerControl\DIVIDER.PNG" Height="35" Stretch="Uniform" VerticalAlignment="Center" Margin="3,0,3,0"/>
                  <Button x:Name="SelectTitleButton" Style="{ThemeResource SelectChapterButtonStyle}" Margin="0"
                          IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.TitlesAvailable}"
                          Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseTitleDialog}"/>
                  <Button x:Name="SelectMenuButton" Style="{ThemeResource SelectContextMenuButtonStyle}" Margin="0"
                          Command="{Command Source={StaticResource VideoPlayerModel},Path=OpenPlayerConfigurationDialog}"/>
                  <Button x:Name="SelectSubtitleButton" Style="{ThemeResource SelectSubtitleButtonStyle}" Margin="0"
                          IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.SubtitlesAvailable}"
                          Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseSubtitleDialog}"/>
                  <Button x:Name="Audio" Style="{ThemeResource AudioActiveButtonStyle}" Margin="0"
                          IsVisible="{Binding IsAudio}" Command="{Command AudioButtonPressed}"/>
                  <Button x:Name="VolumeDownButton" Style="{ThemeResource VolumeDownButtonStyle}" Margin="0"
                          Command="{Command Source={StaticResource GeneralPlayerModel},Path=VolumeDown}"/>
                  <Button x:Name="VolumeUpButton" Style="{ThemeResource VolumeUpButtonStyle}" Margin="0" 
                          Command="{Command Source={StaticResource GeneralPlayerModel},Path=VolumeUp}"/>
                </StackPanel>
                <!-- PlayControlsPanel -->
              </Grid>
              <!-- PlayerGrid -->
            </DockPanel>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="IsCurrentPlayer" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="CurrentPlayer_BeginStoryboard" Storyboard="{ThemeResource OSDCurrentPlayerControlStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="CurrentPlayer_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="PlayerContext" Value="PrimaryPlayer"/>
  </Style>


  <!-- Button with small FontSize -->
  <Style x:Key="SmallButtonStyle" BasedOn="{ThemeResource ButtonWideStyle}" TargetType="{x:Type Button}">
    <Setter Property="FontSize" Value="{ThemeResource SmallFontSize}"/>
  </Style>

  <!-- SingleChannel Program Guide, Item contains StartTime and Title. -->
  <DataTemplate x:Key="SingleChannelProgramGuideDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid x:Name="ItemControl" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="150"/>
        <ColumnDefinition Width="280"/>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Image x:Name="ChannelLogo" Height="48" Stretch="Uniform" HorizontalAlignment="Left" Margin="6,2,8,2">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding Program.ChannelLogoType}" fanart:FanArtType="Banner" fanart:FanArtName="{Binding Program.ChannelName}"
                                    fanart:MaxWidth="0" fanart:MaxHeight="0"/>
        </Image.Source>
      </Image> 
      <Label x:Name="StartTime" VerticalAlignment="Center" Grid.Column="1" Content="{Binding [StartTime]}"
             Color="{ThemeResource ProgramLabelNoFocus}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="ItemLabel" VerticalAlignment="Center" Grid.Column="2" Content="{Binding [Name]}" 
             Color="{ThemeResource ProgramLabelNoFocus}" FontSize="{ThemeResource SmallFontSize}" Margin="0,0,0,0"/>
      <Label x:Name="SeriesLabel" VerticalAlignment="Center" Grid.Column="3" Content="{Binding [Series]}" ScrollDelay="0"
             Color="{ThemeResource ProgramLabelNoFocus}" FontSize="{ThemeResource SmallFontSize}" Margin="5,0,0,0">
        <Label.Triggers>
          <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
            <Setter TargetName="SeriesLabel" Property="Scroll" Value="Auto"/>
          </DataTrigger>
        </Label.Triggers>
      </Label>

      <Label x:Name="StartTime2" VerticalAlignment="Center" Grid.Column="1" Content="{Binding [StartTime]}" IsVisible="{Binding IsRunning}"
             Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="ItemLabel2" VerticalAlignment="Center" Grid.Column="2" Content="{Binding [Name]}" IsVisible="{Binding IsRunning}"
             Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" Margin="0,0,0,0"/>
      <Label x:Name="SeriesLabel2" VerticalAlignment="Center" Grid.Column="3" Content="{Binding [Series]}" IsVisible="{Binding IsRunning}"
             Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" Margin="5,0,0,0" ScrollDelay="0">
        <Label.Triggers>
          <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
            <Setter TargetName="SeriesLabel2" Property="Scroll" Value="Auto"/>
          </DataTrigger>
        </Label.Triggers>
      </Label>
    </Grid>
  </DataTemplate>

  <!-- ScheduleDataTemplate contains channel logo, title, recording type -->
  <DataTemplate x:Key="ScheduleDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid x:Name="ItemControl" VerticalAlignment="Center" HorizontalAlignment="Stretch">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="110"/>
        <ColumnDefinition Width="280"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="500"/>
      </Grid.ColumnDefinitions>

      <Image x:Name="ChannelLogo" Grid.Column="0" Width="74" Height="50.5" Stretch="Uniform" HorizontalAlignment="Left" Margin="5,1,0,1">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding [ChannelLogoType]}" fanart:FanArtType="Banner" fanart:FanArtName="{Binding [ChannelName]}"
                                    fanart:MaxWidth="0" fanart:MaxHeight="0"/>
        </Image.Source>
      </Image>
      <Label x:Name="StartTimeLabel" Grid.Column="1" Content="{Binding [StartTime]}" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}"/>
      <Label x:Name="ItemLabel" Grid.Column="2" Content="{Binding [Name]}" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}"  Margin="5,0,0,0"/>
      <Label x:Name="TypeLabel" Grid.Column="3" Content="{Binding [ScheduleType]}" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}"/>
      
    </Grid>
  </DataTemplate>

  <Style x:Key="VirtualizingHorizontalListViewStyle" BasedOn="{ThemeResource DefaultListViewStyle}">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel x:Name="ListItemsHost" IsItemsHost="True" Orientation="Horizontal" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="VirtualizingListViewStyle" BasedOn="{ThemeResource DefaultListViewStyle}">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel x:Name="ListItemsHost" IsItemsHost="True" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ProgramGuideButtonControlStyle" TargetType="{x:Type Control}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <DockPanel Name="ButtonControlRectangle">
            <Rectangle DockPanel.Dock="Center" RadiusX="3" RadiusY="3" Name="ButtonBase" Fill="{ThemeResource ProgramBaseFill}" StrokeThickness="0"/>
            <Rectangle DockPanel.Dock="Center" RadiusX="3" RadiusY="3" Name="ButtonGenre" Fill="{Binding Program.EpgGenreColor}"
                       StrokeThickness="0" IsVisible="{Binding Source={StaticResource SlimTvMultiChannelGuide}, Path=ShowGenreColors}"/>
            <Rectangle DockPanel.Dock="Center" Name="ButtonHover" Fill=""/>
            <Rectangle DockPanel.Dock="Center" Name="ButtonOverlay" Fill=""/>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ProgramGuideChannelButtonControlStyle" TargetType="{x:Type Control}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <DockPanel Name="ButtonControlRectangle">
            <Rectangle DockPanel.Dock="Center" RadiusX="3" RadiusY="3" Name="ButtonBase" StrokeThickness="0">
              <Rectangle.Fill>
                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                  <GradientStop Color="{ThemeResource ProgramChannelBaseFill}" Offset="0"/>
                  <GradientStop Color="{ThemeResource ProgramChannelBaseFill}" Offset="0.7"/>
                  <GradientStop Color="{ThemeResource ProgramBaseFill}" Offset="1"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="GroupButtonControlStyle" TargetType="{x:Type Control}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <DockPanel Name="ButtonControlRectangle">
            <Rectangle DockPanel.Dock="Center" RadiusX="3" RadiusY="3" Name="ButtonBase" StrokeThickness="0">
              <Rectangle.Fill>
                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                  <GradientStop Color="{ThemeResource ProgramChannelBaseFill}" Offset="0"/>
                  <GradientStop Color="{ThemeResource ProgramChannelBaseFill}" Offset="1"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ProgramGuideSingleButtonControlStyle" TargetType="{x:Type Control}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <DockPanel Name="ButtonControlRectangle">
            <Rectangle DockPanel.Dock="Center" RadiusX="3" RadiusY="3" Name="ButtonBase" StrokeThickness="0">
              <Rectangle.Fill>
                <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                  <GradientStop Color="{ThemeResource ProgramChannelBaseFill}" Offset="0"/>
                  <GradientStop Color="{ThemeResource ProgramChannelBaseFill}" Offset="0.1"/>
                  <GradientStop Color="{ThemeResource ProgramBaseFill}" Offset="0.35"/>
                  <GradientStop Color="{ThemeResource ProgramBaseFill}" Offset="1"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ProgramGuideButtonOverlayControlStyle" TargetType="{x:Type Control}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <DockPanel Name="ButtonOverlayControlRectangle">
            <Rectangle DockPanel.Dock="Center" Name="ButtonFocusFrame" RadiusX="4" RadiusY="4" StrokeThickness="6" Margin="1" IsVisible="False">
              <Rectangle.Stroke>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0.02,1.4">
                  <GradientStop Color="#D9FFFFFF" Offset="0"/>
                  <GradientStop Color="#59FFFFFF" Offset="0.7"/>
                  <GradientStop Color="#59FFFFFF" Offset="1"/>
                </LinearGradientBrush>
              </Rectangle.Stroke>
            </Rectangle>
            <Rectangle Name="ButtonUpperShine" DockPanel.Dock="Center" RadiusX="2" RadiusY="2" StrokeThickness="0" Margin="0" IsVisible="False">
              <Rectangle.Fill>
                <ImageBrush ImageSource="Glass_frame.PNG" Stretch="Fill"/>
              </Rectangle.Fill>
            </Rectangle>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--
  ProgramGuideButtonStyle is used as style for a single Program in MultiChannelGuide 
  It's basically the DefaultButtonStyle without the Margin for ButtonControlStyle, 
  which would lead to incorrect Layout for short Programs (minimum Width).
  -->

  <Style x:Key="ProgramGuideChannelButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="GrowControl" RenderTransformOrigin="0.5,0.5" Margin="0,2,0,2">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.RenderTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
              </TransformGroup>
            </Grid.RenderTransform>
            <Control Grid.Column="1" Style="{ThemeResource ProgramGuideChannelButtonControlStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.ZIndex="1"/>
            <ContentPresenter Grid.Column="1" x:Name="ButtonContentPresenter" Margin="3,5,0,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.ZIndex="2"/>
            <Control Grid.Column="1" Style="{ThemeResource ProgramGuideButtonOverlayControlStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.ZIndex="3"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasFocus" Value="True">
              <!--Setter TargetName="ButtonHover" Property="Fill" Value="{ThemeResource FocusedButtonGradient3Color}"/-->
              <Setter TargetName="ButtonFocusFrame" Property="IsVisible" Value="True"/>
              <Setter TargetName="ButtonUpperShine" Property="IsVisible" Value="True"/>
              <Trigger.EnterActions>
                <SoundPlayerAction Source="navigate.wav" DisableOnAudioOutput="True"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="GroupButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="GrowControl" Margin="0,2,0,2">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Control Grid.Column="1" Style="{ThemeResource GroupButtonControlStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            <ContentPresenter Grid.Column="1" x:Name="ButtonContentPresenter" Margin="3,5,0,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
            <Control x:Name="Overlay" Grid.Column="1" Style="{ThemeResource ProgramGuideButtonOverlayControlStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasFocus" Value="True">
              <Setter TargetName="ButtonFocusFrame" Property="IsVisible" Value="True"/>
              <Setter TargetName="ButtonUpperShine" Property="IsVisible" Value="True"/>
              <Trigger.EnterActions>
                <SoundPlayerAction Source="navigate.wav" DisableOnAudioOutput="True"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ProgramGuideButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="GrowControl" RenderTransformOrigin="0.5,0.5" Margin="2,2,2,2">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.RenderTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
              </TransformGroup>
            </Grid.RenderTransform>
            <Control Grid.ColumnSpan="2" Style="{ThemeResource ProgramGuideButtonControlStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.ZIndex="1"/>
            <ContentPresenter Grid.ColumnSpan="2" x:Name="ButtonContentPresenter" Margin="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.ZIndex="2"/>
            <Image Grid.Column="1" x:Name="SeriesRecIndicator" Source="RECORD.SERIES.png" IsVisible="False" Grid.ZIndex="4"
                   Height="{ThemeResource SeriesRecIndicatorHeight}" Stretch="Uniform"/>
            <Image Grid.Column="1" x:Name="RecIndicator" Source="RECORD.SINGLE.png" IsVisible="False" Grid.ZIndex="4"
                   Height="{ThemeResource SeriesRecIndicatorHeight}" Stretch="Uniform"/>
            <Control Grid.ColumnSpan="2" Style="{ThemeResource ProgramGuideButtonOverlayControlStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.ZIndex="3"/>
          </Grid>
          <ControlTemplate.Triggers>
            <!-- Handling of different program states -->
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding IsRunning}" Value="True" />
                <Condition Binding="{Binding Source={StaticResource SlimTvMultiChannelGuide}, Path=ShowGenreColors}" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="ButtonBase" Property="Fill" Value="{ThemeResource ProgramRunningFill}"/>
            </MultiTrigger>
            <!--DataTrigger Binding="{Binding IsRunning}" Value="True"> IsVisible="{Binding ShowGenreColors}"
              <Setter TargetName="ButtonBase" Property="Fill" Value="{ThemeResource ProgramRunningFill}"/>
            </DataTrigger-->
            <DataTrigger Binding="{Binding Program.IsSeriesScheduled}" Value="True">
              <Setter TargetName="SeriesRecIndicator" Property="IsVisible" Value="True"/>
            </DataTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding Program.IsSeriesScheduled}" Value="False" />
                <Condition Binding="{Binding Program.IsScheduled}" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="RecIndicator" Property="IsVisible" Value="True"/>
            </MultiTrigger>
            <Trigger Property="HasFocus" Value="True">
              <!--Setter TargetName="ButtonHover" Property="Fill" Value="{ThemeResource ProgramFocusedFill}"/-->
              <Setter TargetName="ButtonFocusFrame" Property="IsVisible" Value="True"/>
              <Setter TargetName="ButtonUpperShine" Property="IsVisible" Value="True"/>
              <Setter TargetName="ButtonFocusFrame" Property="Panel.ZIndex" Value="1000"/>
              <Trigger.EnterActions>
                <!--BeginStoryboard x:Name="Focused_BeginStoryboard" Storyboard="{ThemeResource FocusedButtonWideStoryboard}"/-->
                <SoundPlayerAction Source="navigate.wav" DisableOnAudioOutput="True"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <!--StopStoryboard BeginStoryboardName="Focused_BeginStoryboard"/-->
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="Pressed_BeginStoryboard" Storyboard="{ThemeResource PressedButtonWideStoryboard}"
                    HandoffBehavior="TemporaryReplace"/>
                <SoundPlayerAction Source="click.wav" DisableOnAudioOutput="True"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="Pressed_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Trigger.EnterActions>
                <!--BeginStoryboard x:Name="Disabled_BeginStoryBoard" Storyboard="{ThemeResource DisabledButtonStoryboard}"/-->
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <!--StopStoryboard BeginStoryboardName="Disabled_BeginStoryBoard"/-->
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ProgramGuideSingleButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="GrowControl" RenderTransformOrigin="0.5,0.5" Margin="2,2,2,2">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.RenderTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
              </TransformGroup>
            </Grid.RenderTransform>
            <Control Grid.ColumnSpan="2" Style="{ThemeResource ProgramGuideSingleButtonControlStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.ZIndex="1"/>
            <ContentPresenter Grid.ColumnSpan="2" x:Name="ButtonContentPresenter" Margin="3" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.ZIndex="2"/>
            <Image Grid.Column="1" x:Name="SeriesRecIndicator" Source="RECORD.SERIES.png" IsVisible="False" Margin="5,0,15,0"
                               Height="{ThemeResource SeriesRecIndicatorHeight}" Stretch="Uniform" Grid.ZIndex="3"/>
            <Image Grid.Column="1" x:Name="RecIndicator" Source="RECORD.SINGLE.png" IsVisible="False" Margin="5,0,15,0"
                               Height="{ThemeResource SeriesRecIndicatorHeight}" Stretch="Uniform" Grid.ZIndex="3"/>
            <Control Grid.ColumnSpan="2" Style="{ThemeResource ProgramGuideButtonOverlayControlStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.ZIndex="4"/>
          </Grid>
          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding Program.IsSeriesScheduled}" Value="True">
              <Setter TargetName="SeriesRecIndicator" Property="IsVisible" Value="True"/>
            </DataTrigger>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding Program.IsSeriesScheduled}" Value="False" />
                <Condition Binding="{Binding Program.IsScheduled}" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="RecIndicator" Property="IsVisible" Value="True"/>
            </MultiTrigger>
            <Trigger Property="HasFocus" Value="True">
              <!--Setter TargetName="ButtonHover" Property="Fill" Value="{ThemeResource FocusedButtonGradient3Color}"/-->
              <Setter TargetName="ButtonFocusFrame" Property="IsVisible" Value="True"/>
              <Setter TargetName="ButtonUpperShine" Property="IsVisible" Value="True"/>
              <Trigger.EnterActions>
                <!--BeginStoryboard x:Name="Focused_BeginStoryboard" Storyboard="{ThemeResource FocusedButtonWideStoryboard}"/-->
                <SoundPlayerAction Source="navigate.wav" DisableOnAudioOutput="True"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <!--StopStoryboard BeginStoryboardName="Focused_BeginStoryboard"/-->
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="Pressed_BeginStoryboard" Storyboard="{ThemeResource PressedButtonWideStoryboard}"
                    HandoffBehavior="TemporaryReplace"/>
                <SoundPlayerAction Source="click.wav" DisableOnAudioOutput="True"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="Pressed_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Trigger.EnterActions>
                <!--BeginStoryboard x:Name="Disabled_BeginStoryBoard" Storyboard="{ThemeResource DisabledButtonStoryboard}"/-->
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <!--StopStoryboard BeginStoryboardName="Disabled_BeginStoryBoard"/-->
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- An item list container represented by a ProgramGuideButtonStyle, scrolling its "ItemLabel" label when focused -->
  <Style x:Key="ProgramGuideItemContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Style="{ThemeResource ProgramGuideSingleButtonStyle}"
                  Command="{DynamicResource ResourceKey=Menu_Command}"
                  IsEnabled="{Binding Enabled}"
                  SetFocus="{Binding Path=Selected,Mode=OneTime}">
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
              </Trigger>
            </Button.Triggers>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- SingleProgramGuideListViewStyle is used for Single Channel Guide-->
  <Style x:Key="SingleProgramGuideListViewStyle" BasedOn="{ThemeResource VirtualizingListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource SingleChannelProgramGuideDataTemplate}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource ProgramGuideItemContainerStyle}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <ScrollViewer CanContentScroll="True" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden"
                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ScheduleListViewStyle is used for schedule list, including channel, program and recording type -->
  <Style x:Key="ScheduleListViewStyle" BasedOn="{ThemeResource VirtualizingListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource ScheduleDataTemplate}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource ProgramGuideItemContainerStyle}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <ScrollViewer CanContentScroll="True" Margin="0" 
              HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- 
  DataTemplate for ChannelWithLogoDataTemplate
  -->
  <DataTemplate x:Key="ChannelWithLogoDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid x:Name="ItemControl" VerticalAlignment="Center" HorizontalAlignment="Stretch">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{ThemeResource ChannelLogoContainerSmall}"/>
        <!-- Channel Logo -->
        <ColumnDefinition Width="*"/>
        <!-- Channel Name -->
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <Grid.RenderTransform>
        <TransformGroup>
          <ScaleTransform ScaleX="1" ScaleY="1"/>
        </TransformGroup>
      </Grid.RenderTransform>
      <Control Style="{ThemeResource ButtonControlStyle}" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
      <Image x:Name="ChannelLogo" Grid.Column="0" Grid.Row="0" Width="{ThemeResource ChannelLogoSmall}" Height="{ThemeResource ChannelLogoSmall}" Stretch="Uniform">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding ChannelLogoType}" fanart:FanArtType="Banner" fanart:FanArtName="{Binding ChannelLogoPath}" fanart:MaxWidth="0" fanart:MaxHeight="0"/>
        </Image.Source>
      </Image>
      <ContentPresenter Grid.Column="1" Grid.Row="0" x:Name="ButtonContentPresenter" Margin="5,5,0,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
    </Grid>
  </DataTemplate>

  <!-- 
  DataTemplate used for main channel list and miniguide, using channel logo, name, program and time.
  -->
  <DataTemplate x:Key="ChannelWithLogoAndProgramDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid x:Name="ItemControl" VerticalAlignment="Center" HorizontalAlignment="Stretch" RenderTransformOrigin="0.5,0.5" Margin="{ThemeResource ChannelWithLogoAndProgramMargin}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{ThemeResource ChannelLogoContainerMedium}"/>
        <!-- Channel Logo -->
        <ColumnDefinition Width="{ThemeResource MainListChannelNameLength}"/>
        <!-- Channel Name -->
        <ColumnDefinition Width="{ThemeResource MainListTimeLength}"/>
        <!-- Program Time -->
        <ColumnDefinition Width="*"/>
        <!-- Program Title -->
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Grid.RenderTransform>
        <TransformGroup>
          <ScaleTransform ScaleX="1" ScaleY="1"/>
        </TransformGroup>
      </Grid.RenderTransform>

      <Image x:Name="ChannelLogo" Grid.Column="0" Grid.Row="0" Grid.RowSpan="2" Width="{ThemeResource ChannelLogoMedium}" Height="{ThemeResource ChannelLogoMedium}" Stretch="Uniform" Margin="5,2,2,2">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding ChannelLogoType}" fanart:FanArtType="Banner" fanart:FanArtName="{Binding ChannelLogoPath}" fanart:MaxWidth="0" fanart:MaxHeight="0"/>
        </Image.Source>
      </Image>

      <Label Grid.Column="1" Grid.Row="0" x:Name="NameLabel" Margin="3,5,0,5" Content="{Binding [Name]}" Color="{ThemeResource TextColor}"/>

      <Label Grid.Column="2" Grid.Row="0" x:Name="CurrentProgramTimeLabel" Margin="5,5,0,5"
              Content="{Binding Path=Programs[0].Program.StartTime, Converter={StaticResource SlimTvDateFormatConverter}}"
              Color="{ThemeResource TextColor}"/>
      <Label Grid.Column="2" Grid.Row="1" x:Name="NextProgramTimeLabel" Margin="5,0,0,5"
              Content="{Binding Path=Programs[1].Program.StartTime, Converter={StaticResource SlimTvDateFormatConverter}}"
              Color="{ThemeResource NextProgramLabelColor}"/>
      <Label Grid.Column="3" Grid.Row="0" x:Name="CurrentProgramLabel" Margin="5,5,0,5"
              Content="{Binding Programs[0].Program.Title}"
              Color="{ThemeResource TextColor}"/>
      <Label Grid.Column="3" Grid.Row="1" x:Name="NextProgramLabel" Margin="5,0,0,5"
              Content="{Binding Programs[1].Program.Title}"
              Color="{ThemeResource NextProgramLabelColor}"/>
    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="ChannelWithCurrentProgramDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid x:Name="ItemControl" VerticalAlignment="Center" HorizontalAlignment="Stretch" RenderTransformOrigin="0.5,0.5" Margin="{ThemeResource ChannelWithLogoAndProgramMargin}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="150"/>
        <ColumnDefinition Width="400"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="230"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <Image x:Name="ChannelLogo" Grid.Column="0" Height="48" Stretch="Uniform" HorizontalAlignment="Left" Margin="6,2,8,2">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding ChannelLogoType}" fanart:FanArtType="Banner" fanart:FanArtName="{Binding ChannelLogoPath}"
                                    fanart:MaxWidth="0" fanart:MaxHeight="0"/>
        </Image.Source>
      </Image>
      <Label x:Name="NameLabel" Grid.Column="1" Content="{Binding [Name]}" FontSize="{ThemeResource SmallFontSize}" 
             Color="{ThemeResource TextColor}" Margin="10,0,10,0" ScrollDelay="0">
        <Label.Triggers>
          <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
            <Setter TargetName="NameLabel" Property="Scroll" Value="Auto"/>
          </DataTrigger>
        </Label.Triggers>
      </Label>
      <Label x:Name="CurrentProgramLabel" Grid.Column="2" Content="{Binding Programs[0].Program.Title}" 
             FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}" ScrollDelay="0" Margin="5,0,0,0">
        <Label.Triggers>
          <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
            <Setter TargetName="CurrentProgramLabel" Property="Scroll" Value="Auto"/>
          </DataTrigger>
        </Label.Triggers>
      </Label>
      <!-- Shows the progress of current time in relation to the current playing program -->
      <ProgressBar x:Name="CurrentProgramProgress" Grid.Column="3" Grid.Row="0" Height="16" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                   Value="{Binding Programs[0].Progress}" Margin="15,0,15,0"/>
    </Grid>
  </DataTemplate>

  <!-- ChannelWithLogoAndProgramListViewStyle is used inside main screen and for miniguide -->
  <Style x:Key="ChannelWithLogoAndProgramListViewStyle" BasedOn="{ThemeResource VirtualizingListViewStyle}">
    <!--<Setter Property="ItemTemplate" Value="{ThemeResource ChannelWithLogoAndProgramDataTemplate}"/>-->
    <Setter Property="ItemTemplate" Value="{ThemeResource ChannelWithCurrentProgramDataTemplate}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource ProgramGuideItemContainerStyle}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <ScrollViewer CanContentScroll="True" Margin="0" 
              HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- MediaLibrary recordings section styles -->
  <!-- Filter recordings by channel -->
  <ControlTemplate x:Key="ListViewChannelFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="ChannelTv" fanart:FanArtType="Poster" fanart:FanArtName="{Binding SimpleTitle}" fanart:MaxWidth="0" fanart:MaxHeight="0"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="ChannelTv" fanart:FanArtType="Poster" fanart:FanArtName="{Binding SimpleTitle}" fanart:MaxWidth="0" fanart:MaxHeight="0"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="ChannelTv" fanart:FanArtType="Poster" fanart:FanArtName="{Binding SimpleTitle}" fanart:MaxWidth="0" fanart:MaxHeight="0"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Control Grid.Row="0" Grid.Column="2" Template="{StaticResource List_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewChannelFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource GRIDVIEW_FILTER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource GRIDVIEW_FILTER_HEIGHT}"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Label x:Name="ItemLabel" Grid.Row="1" Grid.Column="0" Content="{Binding SimpleTitle}" HorizontalAlignment="Center"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Image Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}" Stretch="Uniform" Grid.Row="0" Grid.Column="1">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="ChannelTv" fanart:FanArtType="Poster" fanart:FanArtName="{Binding SimpleTitle}" fanart:MaxWidth="0" fanart:MaxHeight="0"/>
        </Image.Source>
      </Image>
    </Grid>
  </ControlTemplate>

  <DataTemplate DataType="{x:Type navitems:ChannelFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewChannelFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewChannelFilterItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewVideoItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <!-- RecordingItem -->
  <ControlTemplate x:Key="ListViewRecordingItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            Source="{Binding MediaItem}" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
          <Image.FallbackSource>
            <fanart:FanArtImageSource fanart:FanArtMediaType="ChannelTv" fanart:FanArtType="Banner" fanart:FanArtName="{Binding Channel}" fanart:MaxWidth="0" fanart:MaxHeight="0"/>
          </Image.FallbackSource>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
            Source="{Binding MediaItem}" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
          <Image.FallbackSource>
            <fanart:FanArtImageSource fanart:FanArtMediaType="ChannelTv" fanart:FanArtType="Banner" fanart:FanArtName="{Binding Channel}" fanart:MaxWidth="0" fanart:MaxHeight="0"/>
          </Image.FallbackSource>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
            Source="{Binding MediaItem}" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
          <Image.FallbackSource>
            <fanart:FanArtImageSource fanart:FanArtMediaType="ChannelTv" fanart:FanArtType="Banner" fanart:FanArtName="{Binding Channel}" fanart:MaxWidth="0" fanart:MaxHeight="0"/>
          </Image.FallbackSource>
        </Image>
      </DockPanel>
      <Control Grid.Row="0" Grid.Column="2" Template="{StaticResource List_WatchedFlag_Template}" 
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableListWatchedFlags}"/>
    </Grid>
  </ControlTemplate>

  <DataTemplate DataType="{x:Type navitems:RecordingItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewVideoItemTemplate}"/>
          <Binding Source="{StaticResource GridViewVideoItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewVideoItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <!-- Style definition for EpgGrid defining header and program item styles -->
  <Style x:Key="EpgGridStyle" TargetType="{x:Type tv:EpgGrid}">
    <Setter Property="GroupButtonWidth" Value="{ThemeResource GroupButtonWidth}" />
    <Setter Property="GroupButtonTemplate">
      <Setter.Value>
        <ControlTemplate>
          <Button Style="{ThemeResource GroupButtonStyle}" Command="{Command Source={StaticResource SlimTvMultiChannelGuide}, Path=SelectGroup}" Margin="0,0,5,0">
            <StackPanel Orientation="Horizontal" Margin="0,0,10,0">
              <!--Label x:Name="GroupLabel" VerticalAlignment="Center" HorizontalAlignment="Center"
                     Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"
                     Opacity="0.6" Content="[SlimTvClient.ChannelGroupButton]"/>
              <Label VerticalAlignment="Center" HorizontalAlignment="Center"
                     Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"
                     Opacity="0.6" Content=": "/-->
              <Label x:Name="GroupNameLabel" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"
                     Opacity="0.6" Content="{Binding GroupName}" VerticalAlignment="Center"/>
              <StackPanel.LayoutTransform>
                <RotateTransform CenterX="0.5" CenterY="0.5" Angle="-90" />
              </StackPanel.LayoutTransform>
            </StackPanel>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="HeaderTemplate">
      <Setter.Value>
        <ControlTemplate>
          <Button Style="{ThemeResource ProgramGuideChannelButtonStyle}" Command="{Binding Command}" Margin="0,0,2,0">
            <Grid x:Name="ChannelHeader" RenderTransformOrigin="0.5,0.5" Margin="0,2,0,2">
              <Grid.ColumnDefinitions>
                <!-- Channel Number -->
                <ColumnDefinition Width="Auto"/>
                <!-- Channel Logo -->
                <ColumnDefinition Width="Auto"/>
                <!-- Channel Name -->
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid.RenderTransform>
                <TransformGroup>
                  <ScaleTransform ScaleX="1" ScaleY="1"/>
                </TransformGroup>
              </Grid.RenderTransform>
              <Label x:Name="ChannelNumber" Grid.Column="0" Content="{Binding Channel.ChannelNumber}" VerticalAlignment="Center"
                     Color="{ThemeResource MenuTextBackground}" FontSize="{ThemeResource SmallerFontSize}" Margin="5,-2,0,-2" MinWidth="50">
                <Label.IsVisible>
                  <Binding Source="{StaticResource SlimTvMultiChannelGuide}" Path="ShowChannelNumbers" />
                </Label.IsVisible>
              </Label>

              <Image x:Name="ChannelLogo" Grid.Column="1" Stretch="Uniform" Margin="5,0,0,0" Width="{ThemeResource ChannelLogoWidth}"
                     Height="{Binding ElementName=ChannelHeader,Path=ActualHeight}">
                <Image.Source>
                  <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding ChannelLogoType}" fanart:FanArtType="Banner"
                                            fanart:FanArtName="{Binding ChannelLogoPath}" fanart:MaxWidth="0" fanart:MaxHeight="0"/>
                </Image.Source>
                <Image.IsVisible>
                  <Binding Source="{StaticResource SlimTvMultiChannelGuide}" Path="ShowChannelLogos" />
                </Image.IsVisible>
              </Image>

              <Label Grid.Column="2" x:Name="NameLabel" Content="{Binding [Name]}" VerticalAlignment="Center" Opacity="0.5" Margin="5,0,0,0" ScrollDelay="0"
                     Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}">
                <Label.IsVisible>
                  <Binding Source="{StaticResource SlimTvMultiChannelGuide}" Path="ShowChannelNames" />
                </Label.IsVisible>
                <Label.Triggers>
                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
                    <Setter TargetName="NameLabel" Property="Scroll" Value="Auto"/>
                  </DataTrigger>
                </Label.Triggers>
              </Label>
            </Grid>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ProgramTemplate">
      <Setter.Value>
        <ControlTemplate>
          <Button Style="{ThemeResource ProgramGuideButtonStyle}"
                  IsEnabled="{Binding Enabled}"
                  SetFocus="{Binding Path=Selected,Mode=OneTime}"
                  Command="{Binding Command}">
            <Grid VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="{ThemeResource MultiGuideProgramHeight}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Label x:Name="ProgramLabel" Content="{Binding [Name]}" VerticalAlignment="Center" IsVisible="{Binding !IsRunning}" Opacity="0.65"
                     Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
              <Label x:Name="ProgramLabel2" Content="{Binding [Name]}" VerticalAlignment="Center" IsVisible="{Binding IsRunning}" Opacity="1.2" FontFamily="SegoeUIBold"
                     Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
              <Label x:Name="SeriesLabel" Grid.Column="1" Content="{Binding [Series]}" VerticalAlignment="Center" IsVisible="{Binding !IsRunning}" Opacity="0.65"
                     Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" Margin="10,0,0,0"/>
              <Label x:Name="SeriesLabel2" Grid.Column="1" Content="{Binding [Series]}" VerticalAlignment="Center" IsVisible="{Binding IsRunning}" Opacity="1.2"
                     Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" Margin="10,0,0,0"/>
            </Grid>
            <Button.ContextMenuCommand>
              <Command Source="{StaticResource SlimTvMultiChannelGuide}" Path="ShowProgramContextMenu" Parameters="{LateBoundValue BindingValue={Binding}}"/>
            </Button.ContextMenuCommand>
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Trigger.EnterActions>
                  <TriggerCommand>
                    <TriggerCommand.Command>
                      <Command x:Key="SelectionChanged_Command"
                                 Source="{StaticResource SlimTvMultiChannelGuide}"
                                 Path="UpdateProgram"
                                 Parameters="{LateBoundValue BindingValue={Binding}}" />
                    </TriggerCommand.Command>
                  </TriggerCommand>
                </Trigger.EnterActions>
              </Trigger>
            </Button.Triggers>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="TimeIndicatorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle x:Name="TimeIndicator" Width="8" HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="0,0,6,0">
            <Rectangle.Fill>
              <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                <GradientStop Offset="0" Color="#20A0A0A0"/>
                <GradientStop Offset="0.4"  Color="#A0F0F0F0"/>
                <GradientStop Offset="1" Color="#20E0E0E0"/>
              </LinearGradientBrush >
            </Rectangle.Fill>
          </Rectangle>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="DoNotRecordButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Image x:Name="image" Source="Donot.rec.NOFOCUS.PNG" Stretch="Uniform" Height="45" Width="45" Margin="0,0,0,0" VerticalAlignment="Center"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasFocus" Value="True">
              <Setter TargetName="image" Property="Source" Value="Donot.rec.FOCUS.PNG"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="SingleRecordButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Image x:Name="image" Source="rec.single.NOFOCUS.PNG" Stretch="Uniform" Height="45" Width="45" Margin="0,0,0,0" VerticalAlignment="Center"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasFocus" Value="True">
              <Setter TargetName="image" Property="Source" Value="rec.single.FOCUS.PNG"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="SeriesRecordButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid>
            <Image x:Name="image" Source="rec.series.NOFOCUS.PNG" Stretch="Uniform" Height="45" Width="45" Margin="0,0,0,0" VerticalAlignment="Center"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasFocus" Value="True">
              <Setter TargetName="image" Property="Source" Value="rec.series.FOCUS.PNG"/>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="PiPButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}" >
          <Grid>
            <Image Source="PIP.NOFOCUS.PNG" Stretch="Uniform" Height="45" Width="45" Margin="0" VerticalAlignment="Center">
              <Image.IsVisible>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} &amp;&amp; {1}">
                  <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="!HasFocus"/>
                  <Binding Path="!PiPEnabled"/>
                </MultiBinding>
              </Image.IsVisible>
            </Image>
            <Image Source="PIP.FOCUS.PNG" Stretch="Uniform" Height="45" Width="45" Margin="0" VerticalAlignment="Center">
              <Image.IsVisible>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} &amp;&amp; {1}">
                  <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="HasFocus"/>
                  <Binding Path="!PiPEnabled"/>
                </MultiBinding>
              </Image.IsVisible>
            </Image>
            <Image Source="PIP.ON.NOFOCUS.PNG" Stretch="Uniform" Height="45" Width="45" Margin="0" VerticalAlignment="Center">
              <Image.IsVisible>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} &amp;&amp; {1}">
                  <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="!HasFocus"/>
                  <Binding Path="PiPEnabled"/>
                </MultiBinding>
              </Image.IsVisible>
            </Image>
            <Image Source="PIP.ON.FOCUS.PNG" Stretch="Uniform" Height="45" Width="45" Margin="0" VerticalAlignment="Center">
              <Image.IsVisible>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} &amp;&amp; {1}">
                  <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="HasFocus"/>
                  <Binding Path="PiPEnabled"/>
                </MultiBinding>
              </Image.IsVisible>
            </Image>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="PiPControlTemplate">
    <Button x:Name="EnablePiPButton" Style="{StaticResource PiPButtonStyle}"
                    IsVisible="{Binding PiPAvailable}"
                    Command="{Command TogglePiP}">
    </Button>
  </ControlTemplate>

</ResourceDictionary>
