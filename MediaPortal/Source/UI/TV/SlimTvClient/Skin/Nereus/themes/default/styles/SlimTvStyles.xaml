<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:collections="clr-namespace:MediaPortal.UI.Presentation.DataObjects;assembly=MediaPortal.UI"
    xmlns:mp_special_controls="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Controls;assembly=SkinEngine"
    xmlns:navitems="clr-namespace:MediaPortal.Plugins.SlimTv.Client.Models.Navigation;assembly=SlimTv.Client"
    xmlns:tv="clr-namespace:MediaPortal.Plugins.SlimTv.Client.Controls;assembly=SlimTv.Client"
    xmlns:fanart="clr-namespace:MediaPortal.Extensions.UserServices.FanArtService.Client;assembly=FanArtService.Client"
    DependsOnStyleResources="SlimTvColors,SlimTvConsts,FullScreenContentConsts,MediaButtons,MediaColors,Consts,Colors,Buttons,OtherControls,MediaStyles,OSD"
    >
  <!-- SlimTvClient model -->
  <Model x:Key="SlimTvClient" Id="8BEC1372-1C76-484c-8A69-C7F3103708EC"/>
  <Model x:Key="SlimTvMultiChannelGuide" Id="5054408D-C2A9-451f-A702-E84AFCD29C10"/>
  <Model x:Key="SlimTvSettings" Id="F5D4AA07-8469-46A7-8FD0-E1CD1E8F5898"/>
  <Model x:Key="TimeModel" Id="E821B1C8-0666-4339-8027-AA45A4F6F107"/>
  <Model x:Key="VideoPlayerModel" Id="4E2301B4-3C17-4a1d-8DE5-2CEA169A0256"/>
  <tv:SlimTvDateFormatConverter x:Key="SlimTvDateFormatConverter" />

  <!-- Program duration control style -->
  <Style x:Key="ProgramDurationControlStyle" TargetType="{x:Type Control}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <StackPanel Orientation="Horizontal" HorizontalAlignment="Left" >
            <Label x:Name="ProgramStart" Margin="0,0,0,0"  Color="{ThemeResource TextColor}"
                   Content="{Binding Path=StartTime, Converter={StaticResource SlimTvDateFormatConverter}}"/>
            <Label x:Name="Delimiter" Margin="10,0,10,0"  Color="{ThemeResource TextColor}" Content="-"
                   IsVisible="{Binding ElementName=ProgramStart, Path=Content, Converter={StaticResource EmptyStringToFalseConverter}}"/>
            <Label x:Name="ProgramEnd" Content="{Binding Path=EndTime, Converter={StaticResource SlimTvDateFormatConverter},ConverterParameter=Time}"
                   Color="{ThemeResource TextColor}"/>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="SimpleProgressBarStyle" TargetType="{x:Type ProgressBar}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <Grid x:Name="ProgressBarGrid">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Rectangle x:Name="ProgressBarTrack" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="10" Fill="Transparent"/>
            <StackPanel Orientation="Horizontal">
              <StackPanel Width="{TemplateBinding PartIndicatorWidth}" Background="#B3FFFFFF" MaxWidth="{TemplateBinding ActualWidth}">
                <StackPanel.Triggers>
                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
                    <Setter Property="Background" Value="#FFFFFFFF"/>
                  </DataTrigger>
                </StackPanel.Triggers>
              </StackPanel>
            </StackPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="OSDTVProgressBarStyle" TargetType="{x:Type ProgressBar}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <Grid x:Name="ProgressBarGrid" UIElement.MouseClick="{CommandStencil RelativeSource={RelativeSource TemplatedParent}, Path=OnMouseClick}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Rectangle x:Name="ProgressBarTrack" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="10" Opacity="0.5"
                       Fill="{ThemeResource OSDProgressBarBackgroundColor}" RadiusX="5" RadiusY="5"/>

            <Grid x:Name="ProgressBarIndicator" HorizontalAlignment="Left" VerticalAlignment="Center">
              <Grid VerticalAlignment="Center" HorizontalAlignment="Right" Margin="-80,-45,-80,1" Width="160">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Grid HorizontalAlignment="Center" Grid.Column="1">
                  <Grid.RowDefinitions>
                    <RowDefinition Height="55"/>
                  </Grid.RowDefinitions>
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                  </Grid.ColumnDefinitions>
                  
                  <Border Background="White" BorderThickness="0" CornerRadius="5" Opacity="0.9" VerticalAlignment="Top" Margin="-5,10,-5,0" Height="26"/>
                  
                  <Image Source="PlayerControl\Time.Indicator.png" Stretch="Uniform" Margin="2,35,-2,0" Width="20"
                       VerticalAlignment="Top" HorizontalAlignment="Center" Opacity="0.9"/>

                  <Label x:Name="CurrentTimeLabel" Grid.Row="0" Content="{Binding Source={StaticResource TimeModel}, Path=CurrentTime}" Opacity="0.9"
                       HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,12" FontFamily="SegoeUIBold"
                       Color="Black" FontSize="{ThemeResource SmallerFontSize}"/>
                  
                </Grid>
              </Grid>
              <Rectangle Width="{TemplateBinding PartIndicatorWidth}" HorizontalAlignment="Left" VerticalAlignment="Center"
                         RadiusX="5" RadiusY="5" Height="10" Fill="{ThemeResource ProgressBarFillColor}"/>
            </Grid>

            <StackPanel Orientation="Horizontal">
              <StackPanel Width="{TemplateBinding PartIndicatorWidth}"/>
              <Image Source="PlayerControl\Current.Position.png" Width="35" Height="35" Stretch="Fill" Margin="-15,-15,10,-15"
                     VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </StackPanel>

          </Grid>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Details template for program info. Will be used with different Program items (CurrentProgram/NextProgram) -->
  <Style x:Key="OSDProgramDetailsTemplate" TargetType="{x:Type Control}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Height="265">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="300"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="15"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="0" MaxWidth="900">
              <Label x:Name="CurrentProgramTitleLabel" Content="{Binding Path=Title}" Scroll="Auto"
                     FontFamily="SegoeUIBold" Color="{DynamicResource ProgramFontColor}"/>
              <Label x:Name="CurrentProgramSeriesLabel" Color="{DynamicResource ProgramFontColor}" Scroll="Auto"
                     IsVisible="{Binding Path=Series, Converter={StaticResource EmptyStringToFalseConverter}}">
                <Label.Content>
                  <Binding Path="Series" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{} ({0})"/>
                </Label.Content>
              </Label>
            </StackPanel>

            <Label x:Name="Channel" Grid.Row="1" Grid.Column="0" Scroll="Auto"
                   Content="{Binding Source={StaticResource SlimTvClient},Path=ChannelName}"
                   Color="{DynamicResource ProgramFontColor}"/>

            <Label x:Name="ProgramStart" Grid.Row="1" Grid.Column="1" Scroll="Auto" Margin="5,0,5,0"
                   Content="{Binding Path=StartTime, Converter={StaticResource SlimTvDateFormatConverter}}"
                   Color="{DynamicResource ProgramFontColor}"/>

            <Label Grid.Row="1" Grid.Column="2" Content="-" Color="{DynamicResource ProgramFontColor}"/>

            <Label x:Name="ProgramEnd" Grid.Row="1" Grid.Column="3" Scroll="Auto" Margin="5,0,0,0"
                   Content="{Binding Path=EndTime, Converter={StaticResource SlimTvDateFormatConverter}}"
                   Color="{DynamicResource ProgramFontColor}"/>

            <Label x:Name="Genre" Grid.Row="1" Grid.Column="4" Scroll="Auto" Margin="30,0,0,0"
                   Content="{Binding Genre}"
                   Color="{DynamicResource ProgramFontColor}"/>

            <Label Grid.Row="2" Grid.Column="0" Grid.ColumnSpan="5" x:Name="Description" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,15,0"
                   Wrap="True" Scroll="Auto" Content="{Binding Description}" Color="{ThemeResource TextColor}" ScrollSpeed="15" Opacity="0.6"/>

            <!-- Dummy button which makes the panel focusable -->
            <Button Grid.Column="2" VerticalAlignment="Bottom" Style="{ThemeResource EmptyStyle}" SetFocusPrio="{DynamicResource ButtonFocus}"/>
          </Grid>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ProgramInfoScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <!-- Set grid height as scroll viewer height -->
          <Grid x:Name="ScrollViewerGrid" ActualHeight="{TemplateBinding Path=ScrollBarYSize,Mode=OneWayToSource}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <!-- Content -->
            <ScrollContentPresenter Grid.ZIndex="100" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

            <!-- Arrow up -->
            <StackPanel VerticalAlignment="Top" HorizontalAlignment="Left" Margin="-160,0,0,-30">
              <StackPanel.IsVisible>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0}>0 &amp;&amp; {1}">
                  <TemplateBinding Path="ScrollBarYKnobPos" />
                  <Binding ElementName="ScrollViewerGrid" Path="IsKeyboardFocusWithin" />
                </MultiBinding>
              </StackPanel.IsVisible>
              <Image Source="PlayerControl\UP_NOFOCUS.png" Opacity="0.6" Height="50" Stretch="Uniform"/>
            </StackPanel>

            <!-- Arrow down -->
            <StackPanel VerticalAlignment="Top" HorizontalAlignment="Left" Margin="-160,0,0,-30">
              <StackPanel.IsVisible>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0}==0 &amp;&amp; {1}">
                  <TemplateBinding Path="ScrollBarYKnobPos" />
                  <Binding ElementName="ScrollViewerGrid" Path="IsKeyboardFocusWithin" />
                </MultiBinding>
              </StackPanel.IsVisible>
              <Image Source="PlayerControl\DOWN_NOFOCUS.png" Opacity="0.6" Height="50" Stretch="Uniform"/>
            </StackPanel>

          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>


  <!-- Default ListView style. The properties "ItemTemplate", "ItemContainerStyle" and "DataStringProvider" should be exchanged for custom ListView styles. -->
  <Style x:Key="ProgramInfoListViewStyle" BasedOn="{ThemeResource DefaultListViewStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <ScrollViewer CanContentScroll="True" Style="{ThemeResource ProgramInfoScrollViewerStyle}">
            <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="PrimarySlimTvOSDStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <ControlTemplate.Resources>
            <Model x:Key="VideoPlayerModel" Id="4E2301B4-3C17-4a1d-8DE5-2CEA169A0256"/>
          </ControlTemplate.Resources>

          <Control Style="{ThemeResource OSDTvContainer}" Width="{ThemeResource FullScreenContentVideoPrimaryPlayerOSDWidth}" 
                   DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <Control.Resources>
              <ControlTemplate x:Key="OSD_Background_Template">
                <Grid HorizontalAlignment="Stretch" VerticalAlignment="Bottom" Margin="0,-95,0,0">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <Image Source="OSD_TV_background.png" Stretch="Uniform" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"/>
                </Grid>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_Cover_Template">
                <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="210"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <Image x:Name="ChannelLogo" Stretch="Uniform" Height="90" Margin="-5,20,0,20" VerticalAlignment="Top" Context="{StaticResource SlimTvClient}">
                    <Image.Source>
                      <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding ChannelLogoType}" fanart:FanArtType="Banner" fanart:FanArtName="{Binding ChannelName}"
                                              fanart:MaxWidth="0" fanart:MaxHeight="0"/>
                    </Image.Source>
                  </Image>
                </Grid>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_InfoArea_Template">
                <Grid x:Name="InfoGrid" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,-110,0,0"
                      DataContext="{Binding Source={StaticResource SlimTvClient}}">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>

                  <!-- Now / next program informations -->
                  <ListView Style="{ThemeResource ProgramInfoListViewStyle}" Margin="0,0,0,10" HorizontalAlignment="Stretch">

                    <!-- Current Program detailed information -->
                    <Control Style="{ThemeResource OSDProgramDetailsTemplate}" Context="{Binding Source={StaticResource SlimTvClient},Path=CurrentProgram}">
                      <Control.Resources>
                        <ResourceWrapper x:Key="ProgramFontColor" Resource="{ThemeResource TextColor}"/>
                        <ResourceWrapper x:Key="ButtonFocus" Resource="Default"/>
                      </Control.Resources>
                    </Control>

                    <!-- Next Program detailed information -->
                    <Control Style="{ThemeResource OSDProgramDetailsTemplate}" Context="{Binding Source={StaticResource SlimTvClient},Path=NextProgram}">
                      <Control.Resources>
                        <ResourceWrapper x:Key="ProgramFontColor" Resource="{ThemeResource NextProgramLabelColor}"/>
                        <ResourceWrapper x:Key="ButtonFocus" Resource="None"/>
                      </Control.Resources>
                    </Control>

                  </ListView>

                  <!--<Label x:Name="TimeLabel" Color="{ThemeResource TextColor}" FontSize="{ThemeResource BigFontSize}"
                        HorizontalAlignment="Center" VerticalAlignment="Center" Grid.Column="2" Grid.Row="0" Grid.RowSpan="2" 
                        Content="{Binding Source={StaticResource TimeModel}, Path=CurrentTime}" />-->
                </Grid>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_Progress_Template">
                <DockPanel LastChildFill="true" Margin="3,3,3,15">
                  <Grid DockPanel.Dock="Center" HorizontalAlignment="Stretch" DataContext="{Binding Source={StaticResource SlimTvClient}}">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Label x:Name="CurrentProgramStartLabel" Grid.Column="0" Margin="5,0,5,0"
                           Content="{Binding Path=CurrentProgram.StartTime, Converter={StaticResource SlimTvDateFormatConverter}}"
                           Color="{ThemeResource TextColor}" HorizontalAlignment="Right" VerticalAlignment="Center"
                           FontSize="{ThemeResource SmallerFontSize}" Scroll="Auto" ScrollDelay="0" ScrollSpeed="20"/>

                    <ProgressBar x:Name="CurrentProgramProgress" Grid.Column="1" Height="18" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,5,5,0"
                                 Style="{ThemeResource OSDTVProgressBarStyle}" Value="{Binding Source={StaticResource SlimTvClient},Path=ProgramProgress}" />

                    <Label x:Name="CurrentProgramEndLabel" Grid.Column="2" Margin="5,0,5,0"
                           Content="{Binding Path=CurrentProgram.EndTime, Converter={StaticResource SlimTvDateFormatConverter}}"
                           Color="{ThemeResource TextColor}" HorizontalAlignment="Left" VerticalAlignment="Center"
                           FontSize="{ThemeResource SmallerFontSize}" Scroll="Auto" ScrollDelay="0" ScrollSpeed="20"/>
                  </Grid>
                </DockPanel>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_Controls_Template">
                <DockPanel x:Name="PlayControlsPanel" LastChildFill="False" VerticalAlignment="Bottom" HorizontalAlignment="Stretch">

                  <StackPanel x:Name="PlayControlsPanel_Front" DockPanel.Dock="Left" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="90">
                    <Button x:Name="RewindButton" Style="{ThemeResource RewindButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSeekBackward}"
                            Command="{Command SeekBackward}"/>
                    <Button x:Name="PlayButton" Style="{ThemeResource PlayButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanPlay}"
                            Command="{Command Play}"/>
                    <Button x:Name="PauseButton" Style="{ThemeResource PauseButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanPause}"
                            Command="{Command Pause}"/>
                    <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanStop}"
                            Command="{Command Stop}"/>
                    <Button x:Name="ForwardButton" Style="{ThemeResource ForwardButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSeekForward}"
                            Command="{Command SeekForward}"/>
                    <Button x:Name="RecordButton" Style="{ThemeResource RecordButtonStyle}" Command="{Command RecordDialog}"
                            Context="{Model Id=8BEC1372-1C76-484c-8A69-C7F3103708EC}"/>
                  </StackPanel>

                  <StackPanel x:Name="PlayControlsPanel_Back" DockPanel.Dock="Right" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="90">
                    <Button x:Name="SelectContextMenuButton" Style="{ThemeResource SelectContextMenuButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                            Command="{Command Source={StaticResource VideoPlayerModel},Path=OpenPlayerConfigurationDialog}"/>
                    <StackPanel Orientation="Vertical" Margin="0,7,1,2">
                      <Button x:Name="NextChapterButton" Style="{ThemeResource ChapterUpButtonStyle}"
                              Command="{Command Source={StaticResource SlimTvClient},Path=ZapNextChannel}"/>
                      <Button x:Name="PreviousChapterButton" Style="{ThemeResource ChapterDownButtonStyle}" 
                              Command="{Command Source={StaticResource SlimTvClient},Path=ZapPrevChannel}"/>
                    </StackPanel>
                    <Button x:Name="SelectSubtitleButton" Style="{ThemeResource SelectSubtitleButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                          IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.SubtitlesAvailable}"
                          Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseSubtitleDialog}"/>
                    <Button x:Name="AudioActiveButton" IsVisible="{Binding IsAudio}" Style="{ThemeResource AudioActiveButtonStyle}" Command="{Command AudioButtonPressed}"/>
                    <StackPanel Orientation="Vertical" Margin="0,3,1,-3">
                      <Button x:Name="VolumeUpButton" Style="{ThemeResource VolumeUpButtonStyle}"  
                              Command="{Command Source={StaticResource GeneralPlayerModel},Path=VolumeUp}"/>
                      <Button x:Name="VolumeDownButton" Style="{ThemeResource VolumeDownButtonStyle}"
                              Command="{Command Source={StaticResource GeneralPlayerModel},Path=VolumeDown}"/>
                    </StackPanel>
                    <Button x:Name="BackButton" Style="{ThemeResource NavigateBackButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                            Command="{Command Source={Service WorkflowManager},Path=NavigatePop,Parameters=1}"/>
                    <Button x:Name="CloseButton" Style="{ThemeResource CloseButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                            Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=BBFA7DB7-5055-48D5-A904-0F0C79849369}"/>
                  </StackPanel>

                  <Control x:Name="ProgressPresenter" DockPanel.Dock="Center" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                           Template="{DynamicResource ResourceKey=OSD_Progress_Template}" Margin="20,0,20,0"/>

                </DockPanel>
              </ControlTemplate>

            </Control.Resources>
          </Control>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="PlayerContext" Value="PrimaryPlayer"/>
  </Style>

  <Style x:Key="PrimaryRadioOSDStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <ControlTemplate.Resources>
            <Model x:Key="AudioPlayerModel" Id="D8998340-DA2D-42be-A29B-6D7A72AEA2DC"/>
          </ControlTemplate.Resources>

          <Control Style="{ThemeResource OSDRadioContainer}" Width="{ThemeResource FullScreenContentVideoPrimaryPlayerOSDWidth}" 
                   DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <Control.Resources>

              <ControlTemplate x:Key="OSD_Progress_Template">
                <DockPanel LastChildFill="true" Margin="3,3,3,15">
                  <Grid DockPanel.Dock="Center" HorizontalAlignment="Stretch" DataContext="{Binding Source={StaticResource SlimTvClient}}">
                    <Grid.ColumnDefinitions>
                      <ColumnDefinition Width="Auto"/>
                      <ColumnDefinition Width="*"/>
                      <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                      <RowDefinition Height="Auto"/>
                    </Grid.RowDefinitions>

                    <Label x:Name="CurrentProgramStartLabel" Grid.Column="0" Margin="5,0,5,0"
                           Content="{Binding Path=CurrentProgram.StartTime, Converter={StaticResource SlimTvDateFormatConverter}}"
                           Color="{ThemeResource TextColor}" HorizontalAlignment="Right" VerticalAlignment="Center"
                           FontSize="{ThemeResource SmallerFontSize}" Scroll="Auto" ScrollDelay="0" ScrollSpeed="20"/>

                    <ProgressBar x:Name="CurrentProgramProgress" Grid.Column="1" Height="18" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="5,5,5,0"
                                 Style="{ThemeResource OSDTVProgressBarStyle}" Value="{Binding Source={StaticResource SlimTvClient},Path=ProgramProgress}" />

                    <Label x:Name="CurrentProgramEndLabel" Grid.Column="2" Margin="5,0,5,0"
                           Content="{Binding Path=CurrentProgram.EndTime, Converter={StaticResource SlimTvDateFormatConverter}}"
                           Color="{ThemeResource TextColor}" HorizontalAlignment="Left" VerticalAlignment="Center"
                           FontSize="{ThemeResource SmallerFontSize}" Scroll="Auto" ScrollDelay="0" ScrollSpeed="20"/>
                  </Grid>
                </DockPanel>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_Controls_Template">
                <DockPanel x:Name="PlayControlsPanel" LastChildFill="False" VerticalAlignment="Bottom" HorizontalAlignment="Stretch">

                  <StackPanel x:Name="PlayControlsPanel_Front" DockPanel.Dock="Left" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="90">
                    <Button x:Name="RewindButton" Style="{ThemeResource RewindButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSeekBackward}"
                            Command="{Command SeekBackward}"/>
                    <Button x:Name="PlayButton" Style="{ThemeResource PlayButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanPlay}"
                            Command="{Command Play}"/>
                    <Button x:Name="PauseButton" Style="{ThemeResource PauseButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanPause}"
                            Command="{Command Pause}"/>
                    <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanStop}"
                            Command="{Command Stop}"/>
                    <Button x:Name="ForwardButton" Style="{ThemeResource ForwardButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSeekForward}"
                            Command="{Command SeekForward}"/>
                    <Button x:Name="RecordButton" Style="{ThemeResource RecordButtonStyle}" Command="{Command RecordDialog}"
                            Context="{Model Id=8BEC1372-1C76-484c-8A69-C7F3103708EC}"/>
                  </StackPanel>

                  <StackPanel x:Name="PlayControlsPanel_Back" DockPanel.Dock="Right" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="90">
                    <Button x:Name="SelectContextMenuButton" Style="{ThemeResource SelectContextMenuButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                            Command="{Command Source={StaticResource VideoPlayerModel},Path=OpenPlayerConfigurationDialog}"/>
                    <StackPanel Orientation="Vertical" Margin="0,7,1,2">
                      <Button x:Name="NextChannel" Style="{ThemeResource ChapterUpButtonStyle}"
                              Command="{Command Source={StaticResource SlimTvClient},Path=ZapNextChannel}"/>
                      <Button x:Name="PreviousChannel" Style="{ThemeResource ChapterDownButtonStyle}" 
                              Command="{Command Source={StaticResource SlimTvClient},Path=ZapPrevChannel}"/>
                    </StackPanel>
                    <Button x:Name="AudioActiveButton" IsVisible="{Binding IsAudio}" Style="{ThemeResource AudioActiveButtonStyle}" Command="{Command AudioButtonPressed}"/>
                    <StackPanel Orientation="Vertical" Margin="0,3,1,-3">
                      <Button x:Name="VolumeUpButton" Style="{ThemeResource VolumeUpButtonStyle}"  
                              Command="{Command Source={StaticResource GeneralPlayerModel},Path=VolumeUp}"/>
                      <Button x:Name="VolumeDownButton" Style="{ThemeResource VolumeDownButtonStyle}"
                              Command="{Command Source={StaticResource GeneralPlayerModel},Path=VolumeDown}"/>
                    </StackPanel>
                    <Button x:Name="BackButton" Style="{ThemeResource NavigateBackButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                            Command="{Command Source={Service WorkflowManager},Path=NavigatePop,Parameters=1}"/>
                    <Button x:Name="CloseButton" Style="{ThemeResource CloseButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                            Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=BBFA7DB7-5055-48D5-A904-0F0C79849369}"/>
                  </StackPanel>

                  <Control x:Name="ProgressPresenter" DockPanel.Dock="Center" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                           Template="{DynamicResource ResourceKey=OSD_Progress_Template}" Margin="20,0,20,0"/>

                </DockPanel>
              </ControlTemplate>

            </Control.Resources>
          </Control>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="PlayerContext" Value="PrimaryPlayer"/>
  </Style>


  <!-- RecordingItem -->

  <ControlTemplate x:Key="GridViewRecordingItemTemplate">
    <Grid Margin="3,2,3,2" HorizontalAlignment="Center" VerticalAlignment="Center" Width="{ThemeResource VIDEO_GRID_WIDTH}" Height="{ThemeResource VIDEO_GRID_HEIGHT}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Grid Name="PosterGrid" HorizontalAlignment="Center" VerticalAlignment="Center"
            MaxHeight="{StaticResource VIDEO_GRID_HEIGHT}" MaxWidth="{StaticResource VIDEO_GRID_WIDTH}">

        <Image Source="{Binding MediaItem}" Stretch="Uniform" FallbackSource="VideoNormal.png"
               HorizontalAlignment="Center" VerticalAlignment="Center">
          <Image.Opacity>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
              <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
              <Binding Source="1.0"/>
              <Binding Source="0.7"/>
            </MultiBinding>
          </Image.Opacity>
        </Image>
        <Image HorizontalAlignment="Left" VerticalAlignment="Top" >
          <Image.Source>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == 0 ? {1} : {2}">
              <Binding Path="PlayCount"/>
              <Binding Source="UnwatchedTab_small.png"/>
              <Binding Source=""/>
            </MultiBinding>
          </Image.Source>
        </Image>
      </Grid>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="RecordingCoverTemplate">
    <Grid Grid.Row="0" Grid.Column="0" HorizontalAlignment="Center" VerticalAlignment="Center">
      <Image Height="128" Stretch="Uniform" FallbackSource="VideoNormal.png"
               HorizontalAlignment="Center" VerticalAlignment="Center" Source="{Binding MediaItem}" >
      </Image>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="ListViewRecordingItemTemplate">
    <Grid x:Name="ItemControl" Margin="0,0,40,0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}" FontFamily="SegoeUIBold">
        <Label.Opacity>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
            <Binding Source="1.0"/>
            <Binding Source="0.7"/>
          </MultiBinding>
        </Label.Opacity>
      </Label>

      <Label x:Name="Duration" Grid.Row="0" Grid.Column="2" Content="{Binding Duration}" 
             Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" HorizontalAlignment="Right">
        <Label.Opacity>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
            <Binding Source="1.0"/>
            <Binding Source="0"/>
          </MultiBinding>
        </Label.Opacity>
      </Label>

      <Image HorizontalAlignment="Right" VerticalAlignment="Center" Stretch="Fill" Width="37" Height="24" Grid.Row="0" Grid.Column="2">
        <Image.Opacity>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
            <Binding Source="0"/>
            <Binding Source="0.5"/>
          </MultiBinding>
        </Image.Opacity>

        <Image.Source>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding Path="PlayCount"/>
            <Binding Source=""/>
            <Binding Source="unwatched_icon.png"/>
          </MultiBinding>
        </Image.Source>
      </Image>

      <Control x:Name="ListViewCover" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,8,0"
               Template="{ThemeResource RecordingCoverTemplate}" RenderTransformOrigin="0.5,0.5"
               IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Control.LayoutTransform>
          <ScaleTransform>
            <ScaleTransform.ScaleX>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small} ? {1} : ({0} == {LayoutSize}.{Medium} ? {2}: {3})">
                <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize"/>
                <Binding Source="0.5"/>
                <Binding Source="0.7"/>
                <Binding Source="1"/>
              </MultiBinding>
            </ScaleTransform.ScaleX>
            <ScaleTransform.ScaleY>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small} ? {1} : ({0} == {LayoutSize}.{Medium} ? {2}: {3})">
                <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize"/>
                <Binding Source="0.5"/>
                <Binding Source="0.7"/>
                <Binding Source="1"/>
              </MultiBinding>
            </ScaleTransform.ScaleY>
          </ScaleTransform>
        </Control.LayoutTransform>
      </Control>

      <Grid x:Name="FocusDetails" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2"
            HorizontalAlignment="Stretch"
            IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">

        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="40"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Image HorizontalAlignment="Right" VerticalAlignment="Center" Stretch="Fill" Width="37" Height="24" Grid.Row="0" Grid.Column="2">
          <Image.Source>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
              <Binding Path="PlayCount"/>
              <Binding Source=""/>
              <Binding Source="unwatched_icon.png"/>
            </MultiBinding>
          </Image.Source>
        </Image>

        <Grid x:Name="Details" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2" HorizontalAlignment="Stretch">
          <Grid.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} != {LayoutSize}.{Small}"/>
          </Grid.IsVisible>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <!--Label x:Name="VideoEncoding" Grid.Column="0" Content="{Binding VideoEncoding}" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}"/-->
          <Label x:Name="StartTime" Grid.Column="1" Content="{Binding Path=StartTime, Converter={StaticResource SlimTvDateFormatConverter}, ConverterParameter=g}" 
                 FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}" HorizontalAlignment="Right"/>
        </Grid>

      </Grid>
    </Grid>
  </ControlTemplate>

  <DataTemplate DataType="{x:Type navitems:RecordingItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewVideoItemTemplate}"/>
          <Binding Source="{StaticResource GridViewVideoItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewVideoItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>


  <Style x:Key="ProgramGuideButtonControlStyle" TargetType="{x:Type Control}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <DockPanel Name="ButtonControlRectangle">
            <Rectangle DockPanel.Dock="Center" RadiusX="0" RadiusY="0" Name="ButtonBase" Fill="{ThemeResource ProgramBaseFill}" Stroke="Transparent"/>
            <Rectangle DockPanel.Dock="Center" Name="ButtonHover" Fill="" IsVisible="{Binding Source={StaticResource SlimTvSettings}, Path=!ShowGenreColors}"/>
            <Rectangle DockPanel.Dock="Center" Name="ButtonGenre" Fill="{Binding Program.EpgGenreColor}"
                       StrokeThickness="0" IsVisible="{Binding Source={StaticResource SlimTvSettings}, Path=ShowGenreColors}"/>
            <Rectangle DockPanel.Dock="Center" Name="ButtonOverlay" Fill=""/>
            <Rectangle DockPanel.Dock="Center" Name="ButtonFocusFrameShadow" StrokeThickness="3" Margin="4" Stroke="Black" Fill="" Opacity="0.8" IsVisible="False"/>
            <Rectangle DockPanel.Dock="Center" Name="ButtonFocusFrame" StrokeThickness="3" Margin="3" Stroke="White" Fill="" IsVisible="False"/>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="BaseGuideButtonControlStyle" TargetType="{x:Type Control}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <DockPanel Name="ButtonControlRectangle">
            <Rectangle DockPanel.Dock="Center" RadiusX="0" RadiusY="0" Name="ButtonBase" Fill="{ThemeResource BaseFill}" Stroke="Transparent"/>
            <Rectangle DockPanel.Dock="Center" Name="ButtonHover" Fill="" IsVisible="{Binding Source={StaticResource SlimTvSettings}, Path=!ShowGenreColors}"/>
            <Rectangle DockPanel.Dock="Center" Name="ButtonGenre" Fill="{Binding Program.EpgGenreColor}"
                       StrokeThickness="0" IsVisible="{Binding Source={StaticResource SlimTvSettings}, Path=ShowGenreColors}"/>
            <Rectangle DockPanel.Dock="Center" Name="ButtonOverlay" Fill=""/>
            <Rectangle DockPanel.Dock="Center" Name="ButtonFocusFrameShadow" StrokeThickness="3" Margin="4" Stroke="Black" Fill="" Opacity="0.8" IsVisible="False"/>
            <Rectangle DockPanel.Dock="Center" Name="ButtonFocusFrame" StrokeThickness="3" Margin="3" Stroke="White" Fill="" IsVisible="False"/>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--
  ProgramGuideButtonStyle is used as style for a single Program in MultiChannelGuide
  It's basically the DefaultButtonStyle without the Margin for ButtonControlStyle, 
  which would lead to incorrect Layout for short Programs (minimum Width).
  -->

  <Style x:Key="ProgramGuideButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="GrowControl" RenderTransformOrigin="0.5,0.5" Margin="2,2,2,2">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.RenderTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
              </TransformGroup>
            </Grid.RenderTransform>
            <Control Grid.ColumnSpan="2" Style="{ThemeResource ProgramGuideButtonControlStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Grid.ZIndex="1"/>
            <ContentPresenter Grid.Column="1" x:Name="ButtonContentPresenter" Margin="3,5,3,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.ZIndex="2"/>
            <Image Grid.Column="0" x:Name="RecIndicator" Source="record_single.png" IsVisible="False" Width="25"
                   Stretch="Uniform" Margin="3,4,0,4" HorizontalAlignment="Left" Grid.ZIndex="3"/>
            <Image Grid.Column="0" x:Name="SeriesRecIndicator" Source="record_series.png" IsVisible="False" Width="25"
                   Stretch="Uniform" Margin="3,4,0,4" HorizontalAlignment="Left" Grid.ZIndex="3"/>
          </Grid>
          
          <ControlTemplate.Triggers>
            <!-- Handling of different program states -->
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding IsRunning}" Value="True" />
                <Condition Binding="{Binding Source={StaticResource SlimTvSettings}, Path=ShowGenreColors}" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="ButtonBase" Property="Fill" Value="{ThemeResource ProgramRunningFill}"/>
            </MultiTrigger>

            <DataTrigger Binding="{Binding Program.IsSeriesScheduled}" Value="True">
              <Setter TargetName="SeriesRecIndicator" Property="IsVisible" Value="True"/>
            </DataTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding Program.IsScheduled}" Value="True" />
                <Condition Binding="{Binding Program.IsSeriesScheduled}" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="RecIndicator" Property="IsVisible" Value="True"/>
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True"/>
                <Condition Binding="{Binding Source={StaticResource SlimTvSettings}, Path=ShowGenreColors}" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="ButtonFocusFrameShadow" Property="IsVisible" Value="True"/>
              <Setter TargetName="ButtonFocusFrame" Property="IsVisible" Value="True"/>
            </MultiTrigger>

            <Trigger Property="HasFocus" Value="True">
              <Setter TargetName="ButtonHover" Property="Fill" Value="{ThemeResource ProgramFocusedFill}"/>
              <Trigger.EnterActions>
                <SoundPlayerAction Source="navigate.wav" DisableOnAudioOutput="True"/>
              </Trigger.EnterActions>
            </Trigger>
            
            <Trigger Property="IsPressed" Value="True">
              <Trigger.EnterActions>
                <SoundPlayerAction Source="click.wav" DisableOnAudioOutput="True"/>
              </Trigger.EnterActions>
            </Trigger>
            
            <Trigger Property="IsEnabled" Value="False">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="Disabled_BeginStoryBoard" Storyboard="{ThemeResource DisabledButtonStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="Disabled_BeginStoryBoard"/>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="BaseGuideButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="GrowControl" RenderTransformOrigin="0.5,0.5" Margin="2,2,2,2">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Control Grid.ColumnSpan="2" Style="{ThemeResource BaseGuideButtonControlStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            <ContentPresenter Grid.ColumnSpan="2" x:Name="ButtonContentPresenter" Margin="3,5,0,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
          </Grid>

          <ControlTemplate.Triggers>
            <!-- Handling of different program states -->
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True"/>
                <Condition Binding="{Binding Source={StaticResource SlimTvSettings}, Path=ShowGenreColors}" Value="True" />
              </MultiTrigger.Conditions>
              <Setter TargetName="ButtonFocusFrameShadow" Property="IsVisible" Value="True"/>
              <Setter TargetName="ButtonFocusFrame" Property="IsVisible" Value="True"/>
            </MultiTrigger>

            <Trigger Property="HasFocus" Value="True">
              <Setter TargetName="ButtonHover" Property="Fill" Value="{ThemeResource ProgramFocusedFill}"/>
              <Trigger.EnterActions>
                <SoundPlayerAction Source="navigate.wav" DisableOnAudioOutput="True"/>
              </Trigger.EnterActions>
            </Trigger>

            <Trigger Property="IsPressed" Value="True">
              <Trigger.EnterActions>
                <SoundPlayerAction Source="click.wav" DisableOnAudioOutput="True"/>
              </Trigger.EnterActions>
            </Trigger>

            <Trigger Property="IsEnabled" Value="False">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="Disabled_BeginStoryBoard" Storyboard="{ThemeResource DisabledButtonStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="Disabled_BeginStoryBoard"/>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Style definition for EpgGrid defining header and program item styles -->
  <Style x:Key="EpgGridStyle" TargetType="{x:Type tv:EpgGrid}">
    <Setter Property="GroupButtonWidth" Value="{ThemeResource GroupButtonWidth}" />
    <Setter Property="GroupButtonTemplate">
      <Setter.Value>
        <ControlTemplate>
          <Button Style="{ThemeResource BaseGuideButtonStyle}" Command="{Command Source={StaticResource SlimTvMultiChannelGuide}, Path=SelectGroup}" VerticalAlignment="Stretch">
            <Label x:Name="GroupNameLabel" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                   Opacity="0.5" Content="{Binding GroupName}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,8,0">
              <Label.LayoutTransform>
                <RotateTransform CenterX="0.5" CenterY="0.5" Angle="-90" />
              </Label.LayoutTransform>
              <Label.Triggers>
                <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
                  <Setter Property="Opacity" Value="1"/>
                </DataTrigger>
              </Label.Triggers>
            </Label>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="HeaderTemplate">
      <Setter.Value>
        <ControlTemplate>
          <Button Style="{ThemeResource BaseGuideButtonStyle}" Command="{Binding Command}" Margin="0,0,0,0">
            <Grid x:Name="ChannelHeader" Margin="2,2,2,2">
              <Grid.ColumnDefinitions>
                <!-- Channel Logo -->
                <ColumnDefinition Width="Auto"/>
                <!-- Channel Number -->
                <ColumnDefinition Width="Auto"/>
                <!-- Channel Name -->
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Label x:Name="ChannelNumber" Grid.Column="0" Content="{Binding Channel.ChannelNumber}" VerticalAlignment="Center" FontFamily="SegoeUIBold" Opacity="0.4"
                     Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" Margin="5,-2,0,-2" MinWidth="50">
                <Label.IsVisible>
                  <Binding Source="{StaticResource SlimTvSettings}" Path="ShowChannelNumbers" />
                </Label.IsVisible>
              </Label>
              <Image x:Name="ChannelLogo" Grid.Column="1" Stretch="Uniform" Margin="5,-1,0,-1" Width="{ThemeResource ChannelLogoWidth}" HorizontalAlignment="Center"
                     Height="{Binding ElementName=ChannelHeader,Path=ActualHeight}">
                <Image.Source>
                  <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding ChannelLogoType}" fanart:FanArtType="Banner"
                                            fanart:FanArtName="{Binding ChannelLogoPath}" fanart:MaxWidth="0" fanart:MaxHeight="0" />
                </Image.Source>
                <Image.IsVisible>
                  <Binding Source="{StaticResource SlimTvSettings}" Path="ShowChannelLogos" />
                </Image.IsVisible>
              </Image>

              <Label Grid.Column="2" x:Name="NameLabel" Content="{Binding [Name]}" VerticalAlignment="Center" Margin="5,0,0,0" ScrollDelay="0"
                     Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}">
                <Label.IsVisible>
                  <Binding Source="{StaticResource SlimTvSettings}" Path="ShowChannelNames" />
                </Label.IsVisible>
                <Label.Triggers>
                  <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
                    <Setter TargetName="NameLabel" Property="Scroll" Value="Auto"/>
                  </DataTrigger>
                </Label.Triggers>
              </Label>
            </Grid>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ProgramTemplate">
      <Setter.Value>
        <ControlTemplate>
          <Button
              Style="{ThemeResource ProgramGuideButtonStyle}"
              IsEnabled="{Binding Enabled}"
              SetFocus="{Binding Path=Selected,Mode=OneTime}"
              Command="{Binding Command}"
              >
            <Button.ContextMenuCommand>
              <Command Source="{StaticResource SlimTvSettings}" Path="ShowProgramContextMenu" Parameters="{LateBoundValue BindingValue={Binding}}"/>
            </Button.ContextMenuCommand>
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
                <Trigger.EnterActions>
                  <TriggerCommand>
                    <TriggerCommand.Command>
                      <Command x:Key="SelectionChanged_Command"
                               Source="{StaticResource SlimTvSettings}"
                               Path="UpdateProgram"
                               Parameters="{LateBoundValue BindingValue={Binding}}" />
                    </TriggerCommand.Command>
                  </TriggerCommand>
                </Trigger.EnterActions>
              </Trigger>
            </Button.Triggers>

            <Grid>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>

              <Label x:Name="ItemLabel" Opacity="0.8" Content="{Binding [Name]}" VerticalAlignment="Center" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"
                     Margin="2,0,0,0" IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=!HasFocus}"/>
              <Label x:Name="ItemLabel2" Content="{Binding [Name]}" VerticalAlignment="Center" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"
                     Margin="2,0,0,0" FontFamily="SegoeUIBold" IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}"/>
              <Label x:Name="SeriesLabel" Grid.Column="1" Content="{Binding [Series]}" VerticalAlignment="Center" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"
                     Margin="5,0,0,0" Opacity="0.8" />
            </Grid>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="TimeIndicatorTemplate">
      <Setter.Value>
        <ControlTemplate>
          <Rectangle x:Name="TimeIndicator" Width="4" HorizontalAlignment="Left" VerticalAlignment="Stretch" Margin="0,0,10,0">
            <Rectangle.Fill>
              <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                <GradientStop Offset="0" Color="#20A0A0A0"/>
                <GradientStop Offset="1"  Color="#A0F0F0F0"/>
              </LinearGradientBrush >
            </Rectangle.Fill>
          </Rectangle>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TVButtonScheduleWideStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="GrowControl" RenderTransformOrigin="0.5,0.5" Margin="2">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <ContentPresenter x:Name="ButtonContentPresenter" Margin="10,5,10,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
          </Grid>

          <ControlTemplate.Triggers>
            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding Program.IsScheduled}" Value="True" />
                <Condition Binding="{Binding Program.IsSeriesScheduled}" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="RecIndicator" Property="IsVisible" Value="True"/>
            </MultiTrigger>

            <DataTrigger Binding="{Binding Program.IsSeriesScheduled}" Value="True">
              <Setter TargetName="SeriesRecIndicator" Property="IsVisible" Value="True"/>
            </DataTrigger>

            <Trigger Property="HasFocus" Value="True">
              <Setter TargetName="Item" Property="Background" Value="{ThemeResource ProgramFocusedFill}"/>
              <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
              <Setter TargetName="ChannelName" Property="Scroll" Value="Auto"/>
            </Trigger>
          </ControlTemplate.Triggers>
          
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TVButtonWideStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="GrowControl" RenderTransformOrigin="0.5,0.5" Margin="2">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <ContentPresenter x:Name="ButtonContentPresenter" Margin="10,5,10,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
          </Grid>

          <ControlTemplate.Triggers>
            <DataTrigger Binding="{Binding IsRunning}" Value="True">
              <Setter TargetName="Item2" Property="Background" Value="{ThemeResource ProgramRunningFill}"/>
              <Setter TargetName="Item3" Property="Background" Value="{ThemeResource ProgramRunningFill}"/>
            </DataTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding Program.IsScheduled}" Value="True" />
                <Condition Binding="{Binding Program.IsSeriesScheduled}" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="RecIndicator" Property="IsVisible" Value="True"/>
            </MultiTrigger>

            <DataTrigger Binding="{Binding Program.IsSeriesScheduled}" Value="True">
              <Setter TargetName="SeriesRecIndicator" Property="IsVisible" Value="True"/>
            </DataTrigger>

            <Trigger Property="HasFocus" Value="True">
              <Setter TargetName="Item1_overlay" Property="Background" Value="{ThemeResource ProgramFocusedFill}"/>
              <Setter TargetName="Item2_overlay" Property="Background" Value="{ThemeResource ProgramFocusedFill}"/>
              <Setter TargetName="Item3_overlay" Property="Background" Value="{ThemeResource ProgramFocusedFill}"/>
            </Trigger>

          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TVButtonWideStyle2" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="GrowControl" RenderTransformOrigin="0.5,0.5" Margin="2">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <ContentPresenter x:Name="ButtonContentPresenter" Margin="10,5,10,5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Grid.ZIndex="2"/>
          </Grid>

          <ControlTemplate.Triggers>
            <Trigger Property="HasFocus" Value="True">
              <Setter TargetName="Item1_overlay" Property="Background" Value="{ThemeResource ProgramFocusedFill}"/>
              <Setter TargetName="Item2_overlay" Property="Background" Value="{ThemeResource ProgramFocusedFill}"/>
              <Setter TargetName="Item3_overlay" Property="Background" Value="{ThemeResource ProgramFocusedFill}"/>
            </Trigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding Programs[0].Program.IsScheduled}" Value="True" />
                <Condition Binding="{Binding Programs[0].Program.IsSeriesScheduled}" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="RecIndicator" Property="IsVisible" Value="True"/>
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding Programs[1].Program.IsScheduled}" Value="True" />
                <Condition Binding="{Binding Programs[1].Program.IsSeriesScheduled}" Value="False" />
              </MultiTrigger.Conditions>
              <Setter TargetName="RecIndicator2" Property="IsVisible" Value="True"/>
            </MultiTrigger>
            
            <DataTrigger Binding="{Binding Programs[0].Program.IsSeriesScheduled}" Value="True">
              <Setter TargetName="SeriesRecIndicator" Property="IsVisible" Value="True"/>
            </DataTrigger>
            
            <DataTrigger Binding="{Binding Programs[1].Program.IsSeriesScheduled}" Value="True">
              <Setter TargetName="SeriesRecIndicator2" Property="IsVisible" Value="True"/>
            </DataTrigger>

            <Trigger Property="HasFocus" Value="True">
              <Setter TargetName="ButtonHover" Property="Fill" Value="{ThemeResource ProgramFocusedFill}"/>
              <Trigger.EnterActions>
                <SoundPlayerAction Source="navigate.wav" DisableOnAudioOutput="True"/>
              </Trigger.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>

        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TVItemContainerStyle" TargetType="{x:Type ListViewItem}">
    <Style.Triggers>
      <Trigger Property="Selected" Value="True">
        <!-- Hack: It is sufficient to set the attached ZIndex property for one panel type; the MP2 SkinEngine maps it to the
             same internal property for all panel types -->
        <Setter Property="StackPanel.ZIndex" Value="100.0"/>
      </Trigger>
    </Style.Triggers>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Margin="50,0,20,0" Style="{ThemeResource TVButtonWideStyle}"
                  Command="{DynamicResource ResourceKey=Menu_Command}"
                  IsEnabled="{Binding Enabled}" SetFocus="{Binding Path=Selected,Mode=OneTime}">
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TVItemContainerStyle2" TargetType="{x:Type ListViewItem}">
    <Style.Triggers>
      <Trigger Property="Selected" Value="True">
        <!-- Hack: It is sufficient to set the attached ZIndex property for one panel type; the MP2 SkinEngine maps it to the
             same internal property for all panel types -->
        <Setter Property="StackPanel.ZIndex" Value="100.0"/>
      </Trigger>
    </Style.Triggers>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Margin="50,0,20,0" Style="{ThemeResource TVButtonWideStyle2}"
                  Command="{DynamicResource ResourceKey=Menu_Command}"
                  IsEnabled="{Binding Enabled}" SetFocus="{Binding Path=Selected,Mode=OneTime}">
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- Default ListView style. The properties "ItemTemplate", "ItemContainerStyle" and "DataStringProvider" should be exchanged for custom ListView styles. -->
  <Style x:Key="TVListViewStyle" TargetType="{x:Type ListView}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <ScrollViewer CanContentScroll="True" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled">
            <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel x:Name="ListItemsHost" IsItemsHost="True"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate x:Key="SingleChannelWithCurrentProgramDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid x:Name="ItemControl" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="-80,0,0,0" Height="50">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="400"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Border x:Name="Item1" Grid.Row="0" Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="{ThemeResource BaseFill}" BorderThickness="0" Margin="0,-5,4,-5"/>
      <Border x:Name="Item2" Grid.Row="0" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="{ThemeResource ProgramBaseFill}" BorderThickness="0" Margin="0,-5,4,-5"/>
      <Border x:Name="Item3" Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="{ThemeResource ProgramBaseFill}" BorderThickness="0" Margin="0,-5,4,-5"/>

      <Border x:Name="Item1_overlay" Grid.Row="0" Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="0,-5,4,-5"/>
      <Border x:Name="Item2_overlay" Grid.Row="0" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="0,-5,4,-5"/>
      <Border x:Name="Item3_overlay" Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="0,-5,4,-5"/>

      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Label x:Name="ChannelNumber" Grid.Column="0" Content="{Binding Source={StaticResource SlimTvSettings}, Path=CurrentChannel.ChannelNumber}" VerticalAlignment="Center" FontFamily="SegoeUIBold" Opacity="0.4"
               Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" Margin="5,-2,0,-2" MinWidth="50">
          <Label.IsVisible>
            <Binding Source="{StaticResource SlimTvSettings}" Path="ShowChannelNumbers" />
          </Label.IsVisible>
        </Label>

        <Image x:Name="ChannelLogo" Grid.Column="1" Width="{ThemeResource ChannelLogoWidth}" Stretch="Uniform" Margin="10,0,10,0" VerticalAlignment="Center">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding Program.ChannelLogoType}" fanart:FanArtType="Banner" fanart:FanArtName="{Binding Program.ChannelName}" fanart:MaxWidth="0" fanart:MaxHeight="0"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource SlimTvSettings}" Path="ShowChannelLogo" />
          </Image.IsVisible>
        </Image>

        <Label x:Name="NameLabel" Grid.Column="2" Margin="3,1,5,3" Content="{Binding Program.ChannelName}" Color="{ThemeResource TextColor}" Width="280"
               VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}" ScrollDelay="0" Scroll="None">
          <Label.IsVisible>
            <Binding Source="{StaticResource SlimTvSettings}" Path="ShowChannelNames" />
          </Label.IsVisible>
          <Label.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
              <Setter TargetName="NameLabel" Property="Scroll" Value="Auto"/>
            </DataTrigger>
          </Label.Triggers>
        </Label>
      </Grid>

      <Grid Grid.Column="1" Grid.Row="0" Margin="5,0,5,0">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Label x:Name="CurrentProgramLabel" Opacity="0.8" ScrollDelay="0" Content="{Binding [Title]}"
               FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}" Margin="0,1,0,3"
               IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=!HasFocus}"/>
        <Label x:Name="CurrentProgramLabelFocus" ScrollDelay="0" Content="{Binding [Title]}" Margin="0,1,0,3"
               FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}" FontFamily="SegoeUIBold" Scroll="Auto"
               IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}"/>
        <Label x:Name="CurrentSeriesLabel" Grid.Column="1" VerticalAlignment="Center" Color="{ThemeResource TextColor}" 
               FontSize="{ThemeResource SmallFontSize}" Opacity="0.8" Margin="5,0,0,2"
               IsVisible="{Binding Path=[Series], Converter={StaticResource EmptyStringToFalseConverter}}">
          <Label.Content>
            <Binding Path="[Series]"/>
          </Label.Content>
          <Label.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
              <Setter TargetName="CurrentSeriesLabel" Property="Scroll" Value="Auto"/>
            </DataTrigger>
          </Label.Triggers>
        </Label>

        <Image Grid.Column="2" x:Name="RecIndicator" Source="record_single.png" IsVisible="False" Width="25"
               Stretch="Uniform" Margin="0,2,2,2" HorizontalAlignment="Right" VerticalAlignment="Center"/>
        <Image Grid.Column="2" x:Name="SeriesRecIndicator" Source="record_series.png" IsVisible="False" Width="25"
               Stretch="Uniform" Margin="0,2,2,2" HorizontalAlignment="Right" VerticalAlignment="Center"/>
      </Grid>

      <ProgressBar x:Name="CurrentProgramProgress" Grid.Column="1" Height="10" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                   Value="{Binding Progress}" Style="{ThemeResource SimpleProgressBarStyle}" Margin="0,0,5,-5"/>

      <!-- Shows the progress of current time in relation to the current playing program -->
      <Grid Grid.Column="2" Grid.Row="0" Margin="5,0,5,0">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Label x:Name="ProgramLabel" Margin="5,4,0,4" VerticalAlignment="Center"
               Content="{Binding [StartTime]}" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}"
               IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=!HasFocus}"/>
        <Label x:Name="ProgramLabelFocus" Margin="5,4,0,4" VerticalAlignment="Center" ScrollDelay="0" Scroll="Auto" FontFamily="SegoeUIBold" 
               Content="{Binding [StartTime]}" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}"
               IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}"/>
      </Grid>
    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="ChannelWithCurrentProgramDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid x:Name="ItemControl" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="-80,0,0,0" Height="50">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Border x:Name="Item1" Grid.Row="0" Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="{ThemeResource BaseFill}" BorderThickness="0" Margin="0,-5,4,-5"/>
      <Border x:Name="Item2" Grid.Row="0" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="{ThemeResource ProgramRunningFill}" BorderThickness="0" Margin="0,-5,4,-5"/>
      <Border x:Name="Item3" Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="{ThemeResource ProgramBaseFill}" BorderThickness="0" Margin="0,-5,4,-5"/>

      <Border x:Name="Item1_overlay" Grid.Row="0" Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="0,-5,4,-5"/>
      <Border x:Name="Item2_overlay" Grid.Row="0" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="0,-5,4,-5"/>
      <Border x:Name="Item3_overlay" Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="0,-5,4,-5"/>

      <Grid>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Label x:Name="ChannelNumber" Grid.Column="0" Content="{Binding Channel.ChannelNumber}" VerticalAlignment="Center" FontFamily="SegoeUIBold" Opacity="0.4"
               Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" Margin="5,-2,0,-2" MinWidth="50">
          <Label.IsVisible>
            <Binding Source="{StaticResource SlimTvSettings}" Path="ShowChannelNumbers" />
          </Label.IsVisible>
        </Label>

        <Image x:Name="ChannelLogo" Grid.Column="1" Width="{ThemeResource ChannelLogoWidth}" Stretch="Uniform" Margin="10,0,10,0" VerticalAlignment="Center">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding ChannelLogoType}" fanart:FanArtType="Banner" fanart:FanArtName="{Binding ChannelLogoPath}" fanart:MaxWidth="0" fanart:MaxHeight="0"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource SlimTvSettings}" Path="ShowChannelLogo" />
          </Image.IsVisible>
        </Image>

        <Label x:Name="NameLabel" Grid.Column="2" Margin="3,1,5,3" Content="{Binding Channel.Name}" Color="{ThemeResource TextColor}" Width="280"
               VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}" ScrollDelay="0" Scroll="None">
          <Label.IsVisible>
            <Binding Source="{StaticResource SlimTvSettings}" Path="ShowChannelNames" />
          </Label.IsVisible>
          <Label.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
              <Setter TargetName="NameLabel" Property="Scroll" Value="Auto"/>
            </DataTrigger>
          </Label.Triggers>
        </Label>
      </Grid>

      <Grid Grid.Column="1" Grid.Row="0" Margin="5,0,5,0">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Label x:Name="CurrentProgramLabel" Opacity="0.8" ScrollDelay="0" Content="{Binding Programs[0].Program.Title}"
               FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}" Margin="0,1,0,3"
               IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=!HasFocus}"/>
        <Label x:Name="CurrentProgramLabelFocus" ScrollDelay="0" Content="{Binding Programs[0].Program.Title}" Margin="0,1,0,3"
               FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}" FontFamily="SegoeUIBold" Scroll="Auto"
               IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}"/>
        <Label x:Name="CurrentSeriesLabel" Grid.Column="1" VerticalAlignment="Center" Color="{ThemeResource TextColor}" 
               FontSize="{ThemeResource SmallFontSize}" Opacity="0.8" Margin="5,0,0,2"
               IsVisible="{Binding Path=Programs[0].Program.Series, Converter={StaticResource EmptyStringToFalseConverter}}">
          <Label.Content>
            <Binding Path="Programs[0].Program.Series" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{} ({0})"/>
          </Label.Content>
          <Label.Triggers>
              <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
              <Setter TargetName="CurrentSeriesLabel" Property="Scroll" Value="Auto"/>
              </DataTrigger>
            </Label.Triggers>
        </Label>

        <Image Grid.Column="2" x:Name="RecIndicator" Source="record_single.png" IsVisible="False" Width="25"
               Stretch="Uniform" Margin="0,2,2,2" HorizontalAlignment="Right" VerticalAlignment="Center"/>
        <Image Grid.Column="2" x:Name="SeriesRecIndicator" Source="record_series.png" IsVisible="False" Width="25"
               Stretch="Uniform" Margin="0,2,2,2" HorizontalAlignment="Right" VerticalAlignment="Center"/>
      </Grid>

      <ProgressBar x:Name="CurrentProgramProgress" Grid.Column="1" Height="10" HorizontalAlignment="Stretch" VerticalAlignment="Bottom"
                   Value="{Binding Programs[0].Progress}" Style="{ThemeResource SimpleProgressBarStyle}" Margin="0,0,5,-5"/>

      <Grid Grid.Column="2" Grid.Row="0" Margin="5,0,15,0">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>

        <Label x:Name="NextProgramLabel" Opacity="0.8" ScrollDelay="0" Content="{Binding Programs[1].Program.Title}"
               FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}" Margin="0,1,0,3"
               IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=!HasFocus}"/>
        <Label x:Name="NextProgramLabelFocus" ScrollDelay="0" Content="{Binding Programs[1].Program.Title}" Margin="0,1,0,3"
               FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}" FontFamily="SegoeUIBold" Scroll="Auto"
               IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}"/>
        <Label x:Name="NextSeriesLabel" Grid.Column="1" VerticalAlignment="Center" Color="{ThemeResource TextColor}" 
               FontSize="{ThemeResource SmallFontSize}" Margin="5,0,0,2" Opacity="0.8"
               IsVisible="{Binding Path=Programs[1].Program.Series, Converter={StaticResource EmptyStringToFalseConverter}}">
          <Label.Content>
            <Binding Path="Programs[1].Program.Series" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{} ({0})"/>
          </Label.Content>
          <Label.Triggers>
            <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
              <Setter TargetName="NextSeriesLabel" Property="Scroll" Value="Auto"/>
            </DataTrigger>
          </Label.Triggers>
        </Label>

        <Image Grid.Column="2" x:Name="RecIndicator2" Source="record_single.png" IsVisible="False" Width="25"
               Stretch="Uniform" Margin="0,2,2,2" HorizontalAlignment="Right" VerticalAlignment="Center"/>
        <Image Grid.Column="2" x:Name="SeriesRecIndicator2" Source="record_series.png" IsVisible="False" Width="25"
               Stretch="Uniform" Margin="0,2,2,2" HorizontalAlignment="Right" VerticalAlignment="Center"/>
      </Grid>

    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="SearchProgramDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid x:Name="ItemControl" VerticalAlignment="Center" HorizontalAlignment="Stretch" Margin="-80,0,0,0" Height="50">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="350"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="400"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <Grid.RenderTransform>
        <TransformGroup>
          <ScaleTransform ScaleX="1" ScaleY="1"/>
        </TransformGroup>
      </Grid.RenderTransform>

      <Image Grid.Column="2" x:Name="SeriesRecIndicator" Source="tvguide_recordserie_button.png" IsVisible="False"
             Height="{ThemeResource SeriesRecIndicatorHeight}" Stretch="Uniform" HorizontalAlignment="Right"/>

      <Border x:Name="Item1" Grid.Row="0" Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="{ThemeResource BaseFill}" BorderThickness="0" Margin="0,-5,4,-5"/>
      <Border x:Name="Item2" Grid.Row="0" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="{ThemeResource BaseFill}" BorderThickness="0" Margin="0,-5,4,-5"/>
      <Border x:Name="Item3" Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="{ThemeResource BaseFill}" BorderThickness="0" Margin="0,-5,4,-5"/>

      <Border x:Name="Item1_overlay" Grid.Row="0" Grid.Column="0" Grid.ColumnSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="0,-5,4,-5"/>
      <Border x:Name="Item2_overlay" Grid.Row="0" Grid.Column="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="0,-5,4,-5"/>
      <Border x:Name="Item3_overlay" Grid.Row="0" Grid.Column="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Transparent" BorderThickness="0" Margin="0,-5,4,-5"/>

      <StackPanel Orientation="Horizontal">
        <Image x:Name="ChannelLogo" Width="{ThemeResource ChannelLogoMedium}" Stretch="Uniform" Margin="10,0,10,0" VerticalAlignment="Center">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding Program.ChannelLogoType}" fanart:FanArtType="Banner" fanart:FanArtName="{Binding Program.ChannelName}" fanart:MaxWidth="0" fanart:MaxHeight="0"/>
          </Image.Source>
        </Image>
        <Label x:Name="NameLabel" Margin="3,5,20,5" Content="{Binding Program.ChannelName}" Color="{ThemeResource TextColor}"
             VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}"/>
      </StackPanel>

      <Label Grid.Column="1" Grid.Row="0" x:Name="CurrentProgramLabel" Margin="5,5,20,5"
        Content="{Binding [Name]}" FontSize="{ThemeResource SmallFontSize}"
        Color="{ThemeResource TextColor}"/>

      <StackPanel Orientation="Horizontal" Grid.Column="2" Grid.Row="0" Margin="5,5,15,5">
        <Label x:Name="ProgramStart" Margin="0,0,0,0"  Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"
               Content="{Binding [StartTime]}"/>
        <Label Margin="5,0,5,0" Content="—" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
        <Label x:Name="ProgramEnd" Content="{Binding [EndTime]}" FontSize="{ThemeResource SmallFontSize}"
            Color="{ThemeResource TextColor}"/>
      </StackPanel>

    </Grid>
  </DataTemplate>

  <Style x:Key="ChannelWithLogoAndProgramListViewStyle" BasedOn="{ThemeResource TVListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource ChannelWithCurrentProgramDataTemplate}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource TVItemContainerStyle2}"/>
  </Style>

  <Style x:Key="SingleChannelWithLogoAndProgramListViewStyle" BasedOn="{ThemeResource TVListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource SingleChannelWithCurrentProgramDataTemplate}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource TVItemContainerStyle}"/>
  </Style>

  <Style x:Key="SearchProgramListViewStyle" BasedOn="{ThemeResource TVListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource SearchProgramDataTemplate}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource TVItemContainerStyle}"/>
  </Style>

  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++    SCHEDULE STYLES    +++++++++++++++++++++++++++++++++++++++++++++++++ -->
  <!-- +++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++ -->

  <Style x:Key="ScheduleItemContainerStyle" TargetType="{x:Type ListViewItem}">
    <Style.Triggers>
      <Trigger Property="Selected" Value="True">
        <!-- Hack: It is sufficient to set the attached ZIndex property for one panel type; the MP2 SkinEngine maps it to the
             same internal property for all panel types -->
        <Setter Property="StackPanel.ZIndex" Value="100.0"/>
      </Trigger>
    </Style.Triggers>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Style="{ThemeResource TVButtonScheduleWideStyle}" Command="{DynamicResource ResourceKey=Menu_Command}"
                  IsEnabled="{Binding Enabled}" SetFocus="{Binding Path=Selected,Mode=OneTime}">
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ExtScheduleItemContainerStyle" TargetType="{x:Type ListViewItem}">
    <Style.Triggers>
      <Trigger Property="Selected" Value="True">
        <!-- Hack: It is sufficient to set the attached ZIndex property for one panel type; the MP2 SkinEngine maps it to the
             same internal property for all panel types -->
        <Setter Property="StackPanel.ZIndex" Value="100.0"/>
      </Trigger>
    </Style.Triggers>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Style="{ThemeResource TVButtonScheduleWideStyle}" Command="{DynamicResource ResourceKey=Menu_Command}"
                  IsEnabled="{Binding Enabled}" SetFocus="{Binding Path=Selected,Mode=OneTime}"/>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate x:Key="ExtScheduleItemDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid x:Name="ItemControl" VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="50">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="135"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="370"/>
      </Grid.ColumnDefinitions>

      <Border x:Name="Shadow" Grid.Row="0" Grid.ColumnSpan="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Black" Opacity="0.3" BorderThickness="0" Margin="0,-5,-2,-7"/>
      <Border x:Name="Shadow2" Grid.Row="0" Grid.ColumnSpan="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Black" Opacity="0.3" BorderThickness="0" Margin="0,-5,-4,-9"/>
      <Border x:Name="Item" Grid.Row="0" Grid.ColumnSpan="3" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="{ThemeResource NereusColorMedium}" BorderThickness="0" Margin="0,-5,0,-5"/>

      <Image x:Name="ChannelLogo" Height="44" Stretch="Uniform" Margin="5,2,5,2">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding Program.ChannelLogoType}" fanart:FanArtType="Banner" fanart:FanArtName="{Binding Program.ChannelName}"
                                    fanart:MaxWidth="{StaticResource TvLogoChacheWidth}" fanart:MaxHeight="{StaticResource TvLogoChacheHeight}"/>
        </Image.Source>
      </Image>
      <Label x:Name="ChannelName" Content="{Binding [ChannelName]}" Color="{ThemeResource TextColor}" ScrollDelay="0" 
             Scroll="None" IsVisible="{Binding ElementName=ChannelLogo, Path=!HasImage}"
             FontSize="{ThemeResource SmallFontSize}" Margin="5,0,10,0" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>

      <Label x:Name="ItemLabel" Grid.Column="1" Color="{ThemeResource TextColor}" ScrollDelay="0" Scroll="None"
             FontSize="{ThemeResource SmallFontSize}" Margin="10,0,10,0" VerticalAlignment="Center">
        <Label.Content>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0}+{1}+{2}">
            <Binding Path="[Name]" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}{0}"/>
            <Binding Source=" "/>
            <Binding Path="[Series]" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}{0}"/>
          </MultiBinding>
        </Label.Content>
      </Label>

      <Label x:Name="ProgramStartEnd" Grid.Column="2" Margin="10,0,10,0" Color="{ThemeResource TextColor}" VerticalAlignment="Center"
             FontSize="{ThemeResource SmallFontSize}" ScrollDelay="0" Opacity="0.6">
        <Label.Content>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0}+{1}+{2}">
            <Binding Path="[StartTime]"/>
            <Binding Source=" - "/>
            <Binding Path="[EndTime]"/>
          </MultiBinding>
        </Label.Content>
      </Label>

    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="ScheduleDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid x:Name="ItemControl" VerticalAlignment="Center" HorizontalAlignment="Stretch" Height="50">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="135"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="370"/>
        <ColumnDefinition Width="75"/>
      </Grid.ColumnDefinitions>

      <Border x:Name="Shadow" Grid.Row="0" Grid.ColumnSpan="4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Black" Opacity="0.3" BorderThickness="0" Margin="0,-5,-2,-7"/>
      <Border x:Name="Shadow2" Grid.Row="0" Grid.ColumnSpan="4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="Black" Opacity="0.3" BorderThickness="0" Margin="0,-5,-4,-9"/>
      <Border x:Name="Item" Grid.Row="0" Grid.ColumnSpan="4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Background="{ThemeResource NereusColorMedium}" BorderThickness="0" Margin="0,-5,0,-5"/>

      <Image x:Name="ChannelLogo" Height="44" Stretch="Uniform" Margin="5,2,5,2">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding Program.ChannelLogoType}" fanart:FanArtType="Banner" fanart:FanArtName="{Binding [ChannelName]}"
                                    fanart:MaxWidth="{StaticResource TvLogoChacheWidth}" fanart:MaxHeight="{StaticResource TvLogoChacheHeight}"/>
        </Image.Source>
      </Image>
      
      <Label x:Name="ChannelName" Content="{Binding [ChannelName]}" Color="{ThemeResource TextColor}" ScrollDelay="0" 
             Scroll="None" IsVisible="{Binding ElementName=ChannelLogo, Path=!HasImage}"
             FontSize="{ThemeResource SmallFontSize}" Margin="5,0,10,0" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
      <Label x:Name="ItemLabel" Grid.Column="1" Content="{Binding [Name]}" Color="{ThemeResource TextColor}" ScrollDelay="0" Scroll="None"
             FontSize="{ThemeResource SmallFontSize}" Margin="10,0,10,0" VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
      <Label Grid.Column="2" x:Name="ProgramStartEnd" Margin="10,0,10,0" Color="{ThemeResource TextColor}" VerticalAlignment="Center"
             FontSize="{ThemeResource SmallFontSize}" ScrollDelay="0" Opacity="0.6">
        <Label.Content>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0}+{1}+{2}">
            <Binding Path="[StartTime]"/>
            <Binding Source=" - "/>
            <Binding Path="[EndTime]"/>
          </MultiBinding>
        </Label.Content>
      </Label>

      <Image Grid.Column="3" x:Name="SeriesRecIndicator" Source="RECORD.SERIES.png" IsVisible="{Binding Program.IsSeriesScheduled}"
             VerticalAlignment="Center" HorizontalAlignment="Left" Height="30" Stretch="Uniform" Margin="10,5,0,5"/>
      <Image Grid.Column="3" x:Name="RecIndicator" Source="RECORD.SINGLE.png" IsVisible="{Binding !Program.IsSeriesScheduled}"
             VerticalAlignment="Center" HorizontalAlignment="Left" Height="30" Stretch="Uniform" Margin="10,10,0,10"/>
    </Grid>
  </DataTemplate>

  <!-- ScheduleListViewStyle is used for schedule list, including channel, program and recording type -->
  <Style x:Key="ScheduleListViewStyle" BasedOn="{ThemeResource TVListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource ScheduleDataTemplate}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource ScheduleItemContainerStyle}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <ScrollViewer CanContentScroll="True" Margin="5" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                        HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled">
            <ScrollViewer.Style>
              <Binding Source="{ThemeResource VerticalMediaScrollViewerStyle}"/>
            </ScrollViewer.Style>
            <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <AnimatedStackPanel x:Name="ListItemsHost" IsItemsHost="True" ScrollMargin="130,130" Margin="0,-10,0,-40">
            <AnimatedStackPanel.Resources>
              <Storyboard x:Key="ScrollAnimation" FillBehavior="HoldEnd">
                <DoubleAnimation BeginTime="00:00:00" From="0" To="1" Duration="00:00:00.300"
                                           FillBehavior="HoldEnd" Storyboard.TargetName="ListItemsHost" Storyboard.TargetProperty="ScrollOffsetMultiplier" />
              </Storyboard>
            </AnimatedStackPanel.Resources>
            <AnimatedStackPanel.Triggers>
              <EventTrigger RoutedEvent="AnimatedStackPanel.Scroll">
                <EventTrigger.Actions>
                  <BeginStoryboard Storyboard="{ThemeResource ScrollAnimation}"/>
                </EventTrigger.Actions>
              </EventTrigger>
            </AnimatedStackPanel.Triggers>
          </AnimatedStackPanel>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="ExtScheduleListViewStyle" BasedOn="{ThemeResource ScheduleListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource ExtScheduleItemDataTemplate}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource ExtScheduleItemContainerStyle}"/>
  </Style>

</ResourceDictionary>
