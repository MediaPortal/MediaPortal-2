<?xml version="1.0" encoding="utf-8"?>
<Project ToolsVersion="4.0" xmlns="http://schemas.microsoft.com/developer/msbuild/2003">

  <UsingTask TaskName="DownloadFile" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <DownloadAddress ParameterType="System.String" Required="true" />
      <OutputFilename ParameterType="System.String" Required="true" />
    </ParameterGroup>
    <Task>
      <Reference Include="System.Core" />
      <Using Namespace="System" />
      <Using Namespace="System.IO" />
      <Using Namespace="System.Net" />
      <Using Namespace="Microsoft.Build.Framework" />
      <Using Namespace="Microsoft.Build.Utilities" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          try
          {
            OutputFilename = Path.GetFullPath(OutputFilename);
            
            Log.LogMessage("Downloading '" + DownloadAddress + "' ...");
            WebClient webClient = new WebClient();
            webClient.DownloadFile(DownloadAddress, OutputFilename);
            
            return true;
          }
          catch (Exception ex)
          {
            Log.LogErrorFromException(ex);
            return false;
          }
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <UsingTask TaskName="RegexTransform" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <Items ParameterType="Microsoft.Build.Framework.ITaskItem[]" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Using Namespace="Microsoft.Build.Framework" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          foreach(ITaskItem item in Items)
          {
            string fileName = item.GetMetadata("FullPath");
            string find = item.GetMetadata("Find");
            string replaceWith = item.GetMetadata("ReplaceWith");
            
            if(!File.Exists(fileName))
            {
              Log.LogError(null, null, null, null, 0, 0, 0, 0, String.Format("Could not find version file: {0}", fileName), new object[0]);
            }
            string content = File.ReadAllText(fileName);
            File.WriteAllText(
              fileName,
              Regex.Replace(
                content,
                find,
                replaceWith
              )
            );
          }
        ]]>
      </Code>
    </Task>
  </UsingTask>

  <UsingTask TaskName="NormalizeLineBreaks" TaskFactory="CodeTaskFactory" AssemblyFile="$(MSBuildToolsPath)\Microsoft.Build.Tasks.v4.0.dll">
    <ParameterGroup>
      <Items ParameterType="Microsoft.Build.Framework.ITaskItem[]" />
    </ParameterGroup>
    <Task>
      <Using Namespace="System.IO" />
      <Using Namespace="System.Text.RegularExpressions" />
      <Using Namespace="Microsoft.Build.Framework" />
      <Code Type="Fragment" Language="cs">
        <![CDATA[
          foreach(ITaskItem item in Items)
          {
            string fileName = item.GetMetadata("FullPath");
            
            if(!File.Exists(fileName))
            {
              Log.LogError(null, null, null, null, 0, 0, 0, 0, String.Format("Could not find version file: {0}", fileName), new object[0]);
            }
            string content = File.ReadAllText(fileName);
            File.WriteAllText(
              fileName,
              Regex.Replace(
                content,
                @"\r\n|\n\r|\n|\r",
                "\r\n"
              )
            );
          }
        ]]>
      </Code>
    </Task>
  </UsingTask>

</Project>