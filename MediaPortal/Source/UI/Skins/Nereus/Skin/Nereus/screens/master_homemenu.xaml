<?xml version="1.0" encoding="utf-8"?>

<!--
This is the master template for standard menu screens:
A header text, left the menu, under the menu a small video preview,
at the right side the content pane and at the bottom the current play control.

Usage:

  <Include
      xmlns="www.team-mediaportal.com/2008/mpf/directx"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      Source="screens\master_menu.xaml">
    <Include.Resources>
      <ResourceWrapper x:Key="Header_Text">
        [Header text]
      </ResourceWrapper>
      <ControlTemplate x:Key="Contents_Template">
        [UI element to be displayed in the content area]
      </ControlTemplate>
    </Include.Resources>
  </Include>

Parameters which have to be accessible by a DynamicResource lookup:
 - Header_Text (String): The text to be displayed as header
 - Contents_Template (ConrolTemplate): Template for element to be displayed
   in the content area at the right side
-->

<Include
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Source="screens\master_home.xaml"
    xmlns:imagesources="clr-namespace:MediaPortal.UI.SkinEngine.Controls.ImageSources;assembly=SkinEngine"
    xmlns:fanart="clr-namespace:MediaPortal.Extensions.UserServices.FanArtService.Client;assembly=FanArtService.Client"
    >
  <Include.Resources>

    <!-- Background Manager for menu hovers -->
    <Model x:Key="BackgroundManagerModel" Id="1F4CAEDE-7108-483d-B5C8-18BEC7EC58E5"/>
    <Model x:Key="HomeMenuModel" Id="CED34107-565C-48D9-BEC8-195F7969F90F"/>
    <Model x:Key="MouseModel" Id="CA6428A7-A6E2-4dd3-9661-F89CEBAF8E62"/>
    <Model x:Key="MenuModel" Id="9E9D0CD9-4FDB-4c0f-A0C4-F356E151BDE0"/>

    <ControlTemplate x:Key="FanArtBackgroundHome_Template">
      <ControlTemplate.Resources>
        <fanart:FanArtImageSourceConverter x:Key="FanArtImageSourceConverter"/>
        <Model x:Key="FanArtBackgroundModel" Id="8F42C8E9-E8A3-475C-A50A-99E1E644DC91"/>
        <Model x:Key="SkinSettingsModel" Id="13961014-16C4-4361-9751-8E2C585EFD44"/>
      </ControlTemplate.Resources>
      <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.Background>
          <VideoBrush Stream="0"/>
        </Grid.Background>

        <Image x:Name="FanArtImageBackground" Stretch="UniformToFill"
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[Nereus].EnableFanart}">
          <Image.Source>
            <imagesources:ImageSourceWrapper Delay="0.5" DelayInOut="true" Transition="transitions\dissolve" TransitionDuration="0.5"
                   Source="{Binding Source={StaticResource FanArtBackgroundModel}, Path=ImageSource, Converter={StaticResource FanArtImageSourceConverter}, ConverterParameter=FanArt;1920;1080;False}"/>
          </Image.Source>
        </Image>
        <Image Stretch="Fill" Source="Background.png" Opacity="0.9"/>
      </Grid>
    </ControlTemplate>

    <!-- Client_Template -->
    <ControlTemplate x:Key="Client_Template">
      <Grid x:Name="MainLayoutPanel" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-200,-110,-205,-5">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="200"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.RenderTransform>
          <TranslateTransform X="0"/>
        </Grid.RenderTransform>

        <!--Slide content in and out depending on hidden menu state-->
        <Grid.Triggers>
          <DataTrigger Binding="{Binding Source={StaticResource MenuModel},Path=IsMenuOpen}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard x:Name="SlideIn" Storyboard="{ThemeResource HiddenMenuSlideIn}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <BeginStoryboard x:Name="SlideOut" Storyboard="{ThemeResource HiddenMenuSlideOut}"/>
              <StopStoryboard BeginStoryboardName="SlideIn"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Grid.Triggers>

        <Grid x:Name="ContentView" Grid.Column="1" HorizontalAlignment="Left" VerticalAlignment="Stretch">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1920"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="100"/>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>

          <Grid.Triggers>
            <!--Close the hidden menu when the main content gets focus-->
            <EventTrigger RoutedEvent="FrameworkElement.GotFocus">
              <TriggerCommand Command="{Command Source={StaticResource MenuModel}, Path=CloseMenu}"/>
            </EventTrigger>
          </Grid.Triggers>

          <!-- Top Gradient Overlay-->
          <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="0" Margin="-200,0,-30,0" Panel.ZIndex="1000">
            <Border.Background>
              <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Color="#E6000000" Offset="0" />
                <GradientStop Color="#00000000" Offset="1" />
              </LinearGradientBrush>
            </Border.Background>
          </Border>

          <!-- Bottom Gradient Overlay-->
          <Border Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" BorderThickness="0" Margin="-200,0,-30,-100" Height="100" Panel.ZIndex="1000">
            <Border.Background>
              <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Color="#00000000" Offset="0" />
                <GradientStop Color="#E6000000" Offset="1" />
              </LinearGradientBrush>
            </Border.Background>
          </Border>

          <!-- Home Content -->
          <Grid x:Name="HomeContentGrid" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="1880"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="880"/>
            </Grid.RowDefinitions>

            <Grid.Resources>

              <!--Command to execute when a tile gets focus-->
              <Command x:Key="Menu_Focus_Command" Source="{StaticResource HomeMenuModel}" Path="SetSelectedHomeTile"
                       Parameters="{LateBoundValue BindingValue={Binding}}"/>

              <!-- HomeContent Storyboard -->
              <Storyboard x:Key="SlideInStoryboard" FillBehavior="HoldEnd">
                <DoubleAnimation BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetProperty="RenderTransform.X"
                                 From="1920" To="0" DecelerationRatio="1.0"/>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetProperty="Opacity">
                  <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.5" Value="0"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:01.40" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SlideOutStoryboard" FillBehavior="Stop">
                <DoubleAnimation BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetProperty="RenderTransform.X"
                                 From="0" To="1920" AccelerationRatio="1.0"/>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetProperty="Opacity">
                  <SplineDoubleKeyFrame KeyTime="00:00:00.0" Value="1"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.9" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </Grid.Resources>

            <Grid.Triggers>
              <EventTrigger RoutedEvent="FrameworkElement.LostFocus">
                <TriggerCommand Command="{Command Source={StaticResource HomeMenuModel}, Path=ClearSelectedHomeTile}"/>
              </EventTrigger>
            </Grid.Triggers>

            <!-- To allow the next home content to slide in whilst the previous slides out we use the HomeMenuModel
               To alternate the content between HomeContent0Control and HomeContent1Control below -->

            <!-- Home Content 1 -->
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch"                  
                  DataContext="{Binding Source={StaticResource HomeMenuModel}}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid.RenderTransform>
                <TranslateTransform X="1920"/>
              </Grid.RenderTransform>
              <Grid.Triggers>
                <!-- Trigger for the HomeContent Storyboard -->
                <DataTrigger Binding="{Binding ContentIndex}" Value="0">
                  <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="Content1BeginSlideInStoryboard" Storyboard="{StaticResource SlideInStoryboard}"/>
                  </DataTrigger.EnterActions>
                  <DataTrigger.ExitActions>
                    <BeginStoryboard x:Name="Content1BeginSlideOutStoryboard" Storyboard="{StaticResource SlideOutStoryboard}"/>
                    <StopStoryboard BeginStoryboardName="Content1BeginSlideInStoryboard"/>
                  </DataTrigger.ExitActions>
                </DataTrigger>
              </Grid.Triggers>

              <ContentControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsEnabled="True"
                              Content="{Binding Source={StaticResource HomeMenuModel}, Path=Content1}">
                <ContentControl.Template>
                  <ControlTemplate>
                    <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                  </ControlTemplate>
                </ContentControl.Template>
                <ContentControl.Triggers>
                  <!--Only enable the content when visible to prevent hidden content from getting focus-->
                  <DataTrigger Binding="{Binding ContentIndex}" Value="1">
                    <Setter Property="IsEnabled" Value="False"/>
                  </DataTrigger>
                </ContentControl.Triggers>

              </ContentControl>
              
            </Grid>

            <!-- Home Content 2 -->
            <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch"                  
                  DataContext="{Binding Source={StaticResource HomeMenuModel}}">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid.RenderTransform>
                <TranslateTransform X="1920"/>
              </Grid.RenderTransform>
              <Grid.Triggers>
                <!-- Trigger for the HomeContent Storyboard -->
                <DataTrigger Binding="{Binding ContentIndex}" Value="1">
                  <DataTrigger.EnterActions>
                    <BeginStoryboard x:Name="Content2BeginSlideInStoryboard" Storyboard="{StaticResource SlideInStoryboard}"/>
                  </DataTrigger.EnterActions>
                  <DataTrigger.ExitActions>
                    <BeginStoryboard x:Name="Content2BeginSlideOutStoryboard" Storyboard="{StaticResource SlideOutStoryboard}"/>
                    <StopStoryboard BeginStoryboardName="Content2BeginSlideInStoryboard"/>
                  </DataTrigger.ExitActions>
                </DataTrigger>
              </Grid.Triggers>

              <ContentControl HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsEnabled="True"
                              Content="{Binding Source={StaticResource HomeMenuModel}, Path=Content2}">
                <ContentControl.Template>
                  <ControlTemplate>
                    <ContentPresenter HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />
                  </ControlTemplate>
                </ContentControl.Template>
                <ContentControl.Triggers>
                  <!--Only enable the content when visible to prevent hidden content from getting focus-->
                  <DataTrigger Binding="{Binding ContentIndex}" Value="0">
                    <Setter Property="IsEnabled" Value="False"/>
                  </DataTrigger>
                </ContentControl.Triggers>

              </ContentControl>
              
            </Grid>
            
          </Grid>
        </Grid>

        <!--Main menu list-->
        <Grid Width="200" VerticalAlignment="Stretch" Margin="0,0,0,-100">
          <Grid.Triggers>
            <!--Open the menu when the grid gets focus-->
            <EventTrigger RoutedEvent="FrameworkElement.GotFocus">
              <TriggerCommand Command="{Command Source={StaticResource MenuModel}, Path=OpenMenu}"/>
            </EventTrigger>
          </Grid.Triggers>
          <Image Source="MenuGlow.png" Stretch="Uniform" VerticalAlignment="Stretch" Margin="0,0,-38,0"/>
          <Rectangle Fill="Black" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0.9"/>
          <Image Source="LeftMenuIndicator.PNG" HorizontalAlignment="Right" Stretch="Fill" Width="25" Height="45" 
                 Opacity="0.9" VerticalAlignment="Center" Margin="0,0,-25,0"/>

          <ListView x:Name="MainMenu" Style="{ThemeResource HomeMenuListViewStyle}" RestoreFocus="True" Height="1200"
                    HorizontalAlignment="Center" VerticalAlignment="Stretch" SetFocusPrio="DefaultHigh"
                    ItemsSource="{Binding Source={StaticResource HomeMenuModel}, Path=MainMenuItems, Mode=OneTime}"
                    SelectionChanged="{CommandStencil Source={StaticResource HomeMenuModel}, Path=SetSelectedItem}">
            <ListView.Resources>

              <!--Main command-->
              <CommandBridge x:Key="Menu_Command" Command="{Binding Path=Command,Mode=OneTime}"/>
              
              <!--Context menu command-->
              <Command x:Key="Context_Menu_Command" Source="{StaticResource HomeMenuModel}" Path="BeginMenuEdit" />
              
            </ListView.Resources>
          </ListView>
        </Grid>

        <Control Grid.Column="1" VerticalAlignment="Bottom" HorizontalAlignment="Left" Margin="50,0,0,-81" Width="950">
          <Control.TemplateControl>
            <Include Source="screens\MultiDetailsHome.inc"/>
          </Control.TemplateControl>
        </Control>

      </Grid>
    </ControlTemplate>
  </Include.Resources>
</Include>
