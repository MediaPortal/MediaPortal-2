<?xml version="1.0" encoding="utf-8"?>
<Include
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:fanart="clr-namespace:MediaPortal.Extensions.UserServices.FanArtService.Client;assembly=FanArtService.Client"
    Source="screens\master_dialog_bare_transparent.xaml"
    xmlns:mp_special_controls="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Controls;assembly=SkinEngine"
    >
  <Include.Resources>
    <!-- SlimTvClient model -->
    <Model x:Key="SlimTvClient" Id="8BEC1372-1C76-484c-8A69-C7F3103708EC"/>
    <Model x:Key="TimeModel" Id="E821B1C8-0666-4339-8027-AA45A4F6F107"/>
    <Model x:Key="SlimTvSettings" Id="F5D4AA07-8469-46A7-8FD0-E1CD1E8F5898"/>
    <Model x:Key="ToolTipModel" Id="CA1BA301-6DA4-41C5-997A-0D4C8A8E66D9"/>

    <!-- Contents -->
    <ControlTemplate x:Key="Contents_Template">
      <Grid x:Name="MainGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Width="1805" Height="830"
            DataContext="{Binding Source={StaticResource SlimTvClient}}" Margin="50,120,35,100">

        <Grid.Background>
          <ImageBrush ImageSource="miniEPG_background.png" />
        </Grid.Background>

        <Grid.Triggers>
          <EventTrigger RoutedEvent="Screen.Show">
            <TriggerCommand Command="{Command Source={StaticResource SlimTvClient}, Path=UpdateChannelsMiniGuide}"/>
          </EventTrigger>
        </Grid.Triggers>

        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="90"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="*"/>
          <RowDefinition Height="230"/>
        </Grid.RowDefinitions>

        <StackPanel Grid.ColumnSpan="2" Margin="40,32,10,10" Orientation="Horizontal">
          <Image Source="HomeContentIcons\duration.png" Height="28" Width="28" Stretch="Uniform" Margin="0,0,5,-5"
                 VerticalAlignment="Center" HorizontalAlignment="Left"/>
          <Label HorizontalAlignment="Left" x:Name="Time" FontSize="{ThemeResource SmallFontSize}" VerticalAlignment="Center" FontFamily="Noto-Bold"
                 Content="{Binding Source={StaticResource TimeModel}, Path=CurrentTime}" Color="{ThemeResource TextColor}" Margin="0,0,0,-4">
            <Label.Resources>
              <Model x:Key="TimeModel" Id="E821B1C8-0666-4339-8027-AA45A4F6F107"/>
            </Label.Resources>
          </Label>
        </StackPanel>

        <Grid Grid.Column="1">
          <Grid.Width>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}({0} ? 85 : 0) + ({1} ? 155 : 0) + ({2} ? 245 : 0)">
              <Binding Source="{StaticResource SlimTvSettings}" Path="ShowChannelNumbers" />
              <Binding Source="{StaticResource SlimTvSettings}" Path="ShowChannelLogos" />
              <Binding Source="{StaticResource SlimTvSettings}" Path="ShowChannelNames" />
            </MultiBinding>
          </Grid.Width>
        </Grid>

        <Label x:Name="CurrentProgramLabel" Grid.Column="2" Content="[SlimTvClient.CurrentProgram]" VerticalAlignment="Center"
               Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" Margin="10,30,10,5"/>
        <Label x:Name="NextProgramLabel" Grid.Column="3" Content="[SlimTvClient.NextProgram]" VerticalAlignment="Center"
               Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" Margin="-5,30,10,5"/>

        <Button Style="{ThemeResource BaseGuideButtonStyle}" Command="{Command Source={StaticResource SlimTvMultiChannelGuide}, Path=SelectGroup}" 
                VerticalAlignment="Stretch" Grid.Row="1" Margin="25,0,5,23">
          <Button.Triggers>
            <Trigger Property="HasFocus" Value="True">
              <Trigger.EnterActions>
                <TriggerCommand Command="{Command Source={StaticResource ToolTipModel}, Path=SetText, Parameters=[SlimTvClient.ChannelGroupButton.Help]}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <TriggerCommand Command="{Command Source={StaticResource ToolTipModel}, Path=ClearText}"/>
              </Trigger.ExitActions>
            </Trigger>
          </Button.Triggers>
          <Label x:Name="GroupNameLabel" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" VerticalContentAlignment="Center" HorizontalContentAlignment="Center"
                 Opacity="0.5" Content="{Binding CurrentGroupName}" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="0,0,8,0" Scroll="Auto" ScrollDelay="0">
            <Label.LayoutTransform>
              <RotateTransform CenterX="0.5" CenterY="0.5" Angle="-90" />
            </Label.LayoutTransform>
            <Label.Triggers>
              <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
                <Setter Property="Opacity" Value="1"/>
              </DataTrigger>
            </Label.Triggers>
          </Label>
        </Button>

        <Grid x:Name="PiP" Margin="20,25,40,0" IsVisible="{Binding PiPAvailable}" Grid.Column="3"
              HorizontalAlignment="Right" VerticalAlignment="Center">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <Button x:Name="EnablePiPButton" Style="{StaticResource PiPButtonStyle}" VerticalAlignment="Center" HorizontalAlignment="Right"
                  IsVisible="{Binding PiPAvailable}" Command="{Command TogglePiP}">
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Trigger.EnterActions>
                  <TriggerCommand Command="{Command Source={StaticResource ToolTipModel}, Path=SetText, Parameters=[SlimTvClient.PiP.Help]}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                  <TriggerCommand Command="{Command Source={StaticResource ToolTipModel}, Path=ClearText}"/>
                </Trigger.ExitActions>
              </Trigger>
            </Button.Triggers>
          </Button>
        </Grid>

        <ListView x:Name="ProgramsListView" Grid.Column="1" Grid.ColumnSpan="3" Grid.Row="1" Margin="15,0,-5,23"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                  Style="{ThemeResource ChannelWithLogoAndProgramListViewStyle}"
                  ItemsSource="{Binding Path=CurrentGroupChannels}"
                  SelectionChanged="{CommandStencil UpdateProgram}">
          <ListView.Resources>
            <CommandList x:Key="Menu_Command">
              <CommandBridge Command="{Binding Path=Command,Mode=OneTime}"/>
              <Command Source="{Service ScreenManager}" Path="CloseTopmostDialog"/>
            </CommandList>
          </ListView.Resources>
        </ListView>

        <Label x:Name="HelpTextLabel" Grid.Row="2" Grid.ColumnSpan="4" Margin="40,0,30,80" 
               Content="{Binding Source={StaticResource ToolTipModel}, Path=Text}" Color="{ThemeResource TextColor}"
               HorizontalAlignment="Stretch" VerticalAlignment="Stretch" FontSize="{ThemeResource SmallFontSize}"
               IsVisible="{Binding Source={StaticResource ToolTipModel}, Path=Text, Converter={StaticResource ReferenceToBoolConverter}}"/>

        <Grid Grid.Row="2" Grid.ColumnSpan="4" x:Name="Description_details"
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="40,0,30,80">
          <Grid.Triggers>
            <!-- Hide the program info if there's a help text visible -->
            <DataTrigger Binding="{Binding ElementName=HelpTextLabel, Path=Visibility}" Value="Visible">
              <Setter Property="IsVisible" Value="False"/>
            </DataTrigger>
          </Grid.Triggers>

          <!-- Invisible dummy label to know, if one list item is focused, list index != 0 -->
          <Label x:Name="ListIndex" IsVisible="False">
            <Label.Content>
              <MultiBinding Converter="{StaticResource GetIndexMultiConverter}" ConverterParameter="1">
                <Binding ElementName="ProgramsListView" Path="CurrentItem"/>
                <Binding ElementName="ProgramsListView" Path="ItemsSource"/>
              </MultiBinding>
            </Label.Content>
          </Label>

          <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <Grid.IsVisible>
              <Binding ElementName="ListIndex" Path="Content" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{} {0} != 0"/>
            </Grid.IsVisible>

            <StackPanel Orientation="Vertical" Grid.RowSpan="2" MinWidth="420">
              <!-- Common control for program duration formatting -->
              <Control Style="{StaticResource ProgramDurationControlStyle}" DataContext="{Binding Path=SelectedCurrentProgram}" IsVisible="{Binding !NoProgramData}"/>
              <Label x:Name="GenreLabel" Content="{Binding Path=SelectedCurrentProgram.Genre}" Color="{ThemeResource TextColor}" Opacity="0.6" TextTrimming="CharacterEllipsis"
                     IsVisible="{Binding Path=SelectedCurrentProgram.Genre, Converter={StaticResource ReferenceToBoolConverter}}" Margin="0,0,10,0"/>
              <Label x:Name="Channel" Scroll="Auto" Content="{Binding SelectedChannelName}" Color="{ThemeResource TextColor}"
                     HorizontalAlignment="Left" Opacity="0.6" IsVisible="{Binding ElementName=ChannelLogo, Path=!HasImage}"/>
              <Image x:Name="ChannelLogo" Width="{ThemeResource ChannelLogoLarge}" Margin="0,10,0,0"
                     Stretch="Uniform" HorizontalAlignment="Left" VerticalAlignment="Top" >
                <Image.Source>
                  <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding SelectedChannelLogoType}" fanart:FanArtType="Banner"
                                    fanart:FanArtName="{Binding SelectedChannelName}" fanart:MaxWidth="0" fanart:MaxHeight="0"/>
                </Image.Source>
              </Image>
            </StackPanel>

            <StackPanel Orientation="Horizontal" Grid.Row="0" Grid.Column="1">
              <Label x:Name="Program" Scroll="Auto" FontFamily="Noto-Bold" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                     Content="{Binding SelectedCurrentProgram.Title}" Color="{ThemeResource TextColor}"/>
              <Label x:Name="SeriesLabel" Color="{ThemeResource TextColor}" Margin="5,0,0,0" Opacity="0.6"
                     IsVisible="{Binding Path=SelectedCurrentProgram.Series, Converter={StaticResource EmptyStringToFalseConverter}}">
                <Label.Content>
                  <Binding Path="SelectedCurrentProgram.Series" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{} ({0})"/>
                </Label.Content>
              </Label>
            </StackPanel>

            <Label Grid.Row="1" Grid.Column="1" x:Name="Description" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                   Wrap="True" Scroll="Auto" Color="{ThemeResource TextColor}" Margin="0,0,10,-25"
                   ScrollSpeed="{Binding Source={StaticResource SkinSettingsModel}, Path=[Nereus].AutoScrollSpeed}"
                   ScrollDelay="{Binding Source={StaticResource SkinSettingsModel}, Path=[Nereus].AutoScrollDelay}"
                   Content="{Binding Path=SelectedCurrentProgram.Description}" Opacity="0.6"/>
          </Grid>
        </Grid>

        <KeyBinding Key="Yellow" Command="{Command Path=NextGroup}"/>
        <KeyBinding Key="Green" Command="{Command Path=PrevGroup}"/>
        <KeyBinding Key="Blue" Command="{Command Path=TogglePiP}"/>
        <KeyBinding Key="Red" Command="{Command Source={Service ScreenManager}, Path=CloseTopmostDialog}"/>
        <KeyBinding Key="Right" Command="{Command Path=NextGroup}" IsEnabled="{Binding ElementName=ProgramsListView, Path=IsKeyboardFocusWithin}"/>
        <KeyBinding Key="Left"  Command="{Command Path=PrevGroup}" IsEnabled="{Binding ElementName=ProgramsListView, Path=IsKeyboardFocusWithin}"/>
        <KeyBinding Key="Record" Command="{Command Path=RecordMenu}"/>
        <KeyBinding Key="Info" Command="{Command Path=RecordMenu}"/>
      </Grid>
    </ControlTemplate>
  </Include.Resources>
</Include>
