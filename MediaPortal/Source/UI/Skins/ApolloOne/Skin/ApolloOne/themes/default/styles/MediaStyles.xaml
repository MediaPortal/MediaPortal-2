<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:collections="clr-namespace:MediaPortal.UI.Presentation.DataObjects;assembly=MediaPortal.UI"
    xmlns:navitems="clr-namespace:MediaPortal.UiComponents.Media.Models.Navigation;assembly=Media"
    xmlns:mp_special_controls="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Controls;assembly=SkinEngine"
    xmlns:media="clr-namespace:MediaPortal.UiComponents.Media.Models.AspectWrappers;assembly=Media"
    xmlns:aspect="clr-namespace:MediaPortal.Common.MediaManagement.DefaultItemAspects;assembly=MediaPortal.Common"
    xmlns:fanart="clr-namespace:MediaPortal.Extensions.UserServices.FanArtService.Client;assembly=FanArtService.Client"
    DependsOnStyleResources="OSD,FullScreenContentConsts,MediaButtons,MediaColors,MediaConsts,Consts,Colors,Buttons,OtherControls"
    >

  <Model x:Key="FanArtBackgroundModel" Id="8F42C8E9-E8A3-475C-A50A-99E1E644DC91"/>
  <Model x:Key="TimeModel" Id="E821B1C8-0666-4339-8027-AA45A4F6F107"/>
  <Model x:Key="VideoPlayerModel" Id="4E2301B4-3C17-4a1d-8DE5-2CEA169A0256"/>

  <!-- 
    Media Navigation styles.
    We provide different control styles for thumbnail list and grid views for each navigation item (filter, audio, video,...).
  -->
  <Model x:Key="ViewModeModel" Id="6997CD35-63F0-4F96-8997-E18C9382E2DC"/>

  <!-- Fallback data template, if data template for actual item type is not defined -->
  <DataTemplate DataType="{x:Type navitems:NavigationItem}">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Label x:Name="ItemLabel" Grid.Column="0" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="NumItems" Grid.Column="1" Content="{Binding NumItems}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </DataTemplate>

  <!-- Filter -->
  <ControlTemplate x:Key="ListViewFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            Source="FilterSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
            Source="FilterSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
            Source="FilterLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="NumItems" Grid.Row="0" Grid.Column="2" Content="{Binding NumItems}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource GRIDVIEW_FILTER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource GRIDVIEW_FILTER_HEIGHT}"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Image x:Name="ItemTypeImage" Grid.Row="0" Grid.Column="0" Stretch="Uniform" Margin="0,0,0,0" Source="FilterLarge.png"
           Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}"/>
      <Label x:Name="ItemLabel" Grid.Row="1" Grid.Column="0" Content="{Binding SimpleTitle}" Color="{ThemeResource TextColor}"
           FontSize="{ThemeResource SmallFontSize}" HorizontalAlignment="Center" />
    </Grid>
  </ControlTemplate>

  <!-- Container -->
  <ControlTemplate x:Key="ListViewContainerItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            Source="NavigationSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
            Source="NavigationSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
            Source="NavigationLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="NumItems" Grid.Row="0" Grid.Column="2" Content="{Binding NumItems}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewContainerItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource GRIDVIEW_FILTER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource GRIDVIEW_FILTER_HEIGHT}"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Image x:Name="ItemTypeImage" Grid.Row="0" Stretch="Uniform" Source="NavigationLarge.png"
           Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}"/>
      <Label x:Name="ItemLabel" Grid.Row="1" Content="{Binding SimpleTitle}" Color="{ThemeResource TextColor}"
           FontSize="{ThemeResource SmallFontSize}" HorizontalAlignment="Center"/>
    </Grid>
  </ControlTemplate>

  <!-- Series Filter -->
  <ControlTemplate x:Key="ListViewSeriesFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="50"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" Margin="8,0,8,0"/>
      <Image Width="{StaticResource MEDIA_BANNER_WIDTH}" Height="{StaticResource MEDIA_BANNER_HEIGHT}" Stretch="Uniform" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" OpacityMask="{ThemeResource MediaItemsOpacityBrushWide}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Series" fanart:FanArtType="Banner" fanart:FanArtName="{Binding SimpleTitle}" 
                                    fanart:MaxWidth="{StaticResource FANART_BANNER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_BANNER_HEIGHT}"/>
        </Image.Source>
      </Image>

      <Label x:Name="NumItems" Grid.Row="1" Grid.Column="2" Content="{Binding NumItems}" HorizontalAlignment="Right" VerticalAlignment="Center" Margin="0,0,8,0"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewSeriesFilterItemTemplate">
    <Grid>
      <Image Source="MediaItem_Shadow.png" Margin="-7,-4,-8,-6"/>
      <Image Width="{StaticResource MEDIA_POSTER_WIDTH}" Height="{StaticResource MEDIA_POSTER_HEIGHT}" Stretch="UniformToFill" FallbackSource="VideoLarge.png"
             OpacityMask="{ThemeResource MediaItemsOpacityBrush}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Series" fanart:FanArtType="Poster" fanart:FanArtName="{Binding SimpleTitle}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
      </Image>
    </Grid>
  </ControlTemplate>


  <!-- Movie Collection Filter -->
  <ControlTemplate x:Key="GridViewMovieFilterItemTemplate">
    <Grid>
      <Image Source="MediaItem_Shadow.png" Margin="-7,-4,-8,-6"/>
      <Image Width="{StaticResource MEDIA_POSTER_WIDTH}" Height="{StaticResource MEDIA_POSTER_HEIGHT}" Stretch="UniformToFill" FallbackSource="VideoLarge.png"
             OpacityMask="{ThemeResource MediaItemsOpacityBrush}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="MovieCollection" fanart:FanArtType="Poster" fanart:FanArtName="{Binding SimpleTitle}" 
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
      </Image>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="ListViewMovieFilterItemTemplate">
    <Grid x:Name="ItemControl" Margin="8,0,8,0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="50"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" FontFamily="DefaultBold">
        <Label.Opacity>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <!--<Binding Path="PlayCount"/>-->
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
            <Binding Source="1.0"/>
            <Binding Source="0.6"/>
          </MultiBinding>
        </Label.Opacity>
      </Label>
    
      <Control x:Name="ListViewCover" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,10,0"
               Template="{ThemeResource GridViewMovieFilterItemTemplate}" RenderTransformOrigin="0.5,0.5"
               IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Control.LayoutTransform>
          <ScaleTransform>
            <ScaleTransform.ScaleX>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small} ? {1} : ({0} == {LayoutSize}.{Medium} ? {2}: {3})">
                <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize"/>
                <Binding Source="0.5"/>
                <Binding Source="0.8"/>
                <Binding Source="1"/>
              </MultiBinding>
            </ScaleTransform.ScaleX>
            <ScaleTransform.ScaleY>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small} ? {1} : ({0} == {LayoutSize}.{Medium} ? {2}: {3})">
                <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize"/>
                <Binding Source="0.5"/>
                <Binding Source="0.8"/>
                <Binding Source="1"/>
              </MultiBinding>
            </ScaleTransform.ScaleY>
          </ScaleTransform>
        </Control.LayoutTransform>
      </Control>

      <Label x:Name="NumItems" Grid.Row="0" Grid.Column="2" Content="{Binding NumItems}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </ControlTemplate>

  <!-- Movie -->
  <ControlTemplate x:Key="MovieCoverTemplate">
    <Grid>
      <Image Source="MediaItem_Shadow.png" Margin="-7,-4,-8,-6"/>
      <Image Width="{StaticResource MEDIA_POSTER_WIDTH}" Height="{StaticResource MEDIA_POSTER_HEIGHT}" Stretch="UniformToFill" FallbackSource="VideoLarge.png"
            OpacityMask="{ThemeResource MediaItemsOpacityBrush}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Movie" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
      </Image>

      <!-- Alternative for theme: Un-/Watched overlay symbols as alternative to red tabs
      <Image HorizontalAlignment="Left" VerticalAlignment="Top" Stretch="Fill" Width="40" Height="40">
        <Image.Source>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == 0 ? {1} : {2}">
            <Binding Path="PlayCount"/>
            <Binding Source="unwatched_circle.png"/>
            <Binding Source="watched_circle.png"/>
          </MultiBinding>
        </Image.Source>
      </Image> -->
      
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewMovieItemTemplate">
    <Grid>
      <!-- GE2301: Unwatched marker added by red tab -->      
      <Image Source="MediaItem_Unwatched.png" Margin="-7,-4,-8,-4">
        <Image.IsVisible>
          <Binding Path="WatchPercentage" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == 0"/>
        </Image.IsVisible>
      </Image>
      <!-- GE2301: Unwatched marker added by red tab -->      
      <Control Template="{ThemeResource MovieCoverTemplate}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="CoverViewMovieItemTemplate">
    <Grid x:Name="ItemControl" VerticalAlignment="Center">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="550"  />
      </Grid.RowDefinitions>

      <Image Width="355" Height="459" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0" Margin="-17,-12,-17,-12">
        <Image.Source>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
            <Binding Source="MediaItem_focus.png"/>
            <Binding Source=""/>
          </MultiBinding>
        </Image.Source>
      </Image>

      <Image Width="349" Height="452" Stretch="Fill" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0" Margin="-15,-7,-13,-14">
        <Image.Source>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
            <Binding Source=""/>
            <Binding Source="MediaItem_shadow.png"/>
          </MultiBinding>
        </Image.Source>
      </Image>

      <Image Width="310" Height="430" Stretch="Fill" FallbackSource="VideoLarge.png" VerticalAlignment="Center" HorizontalAlignment="Center" Grid.Row="0"
       Source="{Binding MediaItem}" OpacityMask="{ThemeResource MediaItemsOpacityBrush}" />

      <!--Image Width="310" Height="400" Stretch="Fill" VerticalAlignment="Top" HorizontalAlignment="Center" Grid.Row="0" Margin="-17,-12,-17,-12">
        <Image.Source>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
            <Binding Source="MediaItem_focus.png"/>
            <Binding Source=""/>
          </MultiBinding>
        </Image.Source>
      </Image>

      <Image Width="304" Height="394" Stretch="Fill" VerticalAlignment="Top" HorizontalAlignment="Center" Grid.Row="0" Margin="-15,-7,-13,-14">
        <Image.Source>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
            <Binding Source=""/>
            <Binding Source="MediaItem_shadow.png"/>
          </MultiBinding>
        </Image.Source>
      </Image>

      <Image Width="270" Height="375" Stretch="Fill" FallbackSource="VideoLarge.png" VerticalAlignment="Top" HorizontalAlignment="Center" Grid.Row="0"
       Source="{Binding MediaItem}" OpacityMask="{ThemeResource MediaItemsOpacityBrush}" /-->

      <!-- Unwatched indicator -->
      <!--Image HorizontalAlignment="Left" VerticalAlignment="Top" Stretch="Fill" Width="35" Height="32" Opacity="1" Margin="5,5,0,0">
        <Image.Source>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == 0 ? {1} : {2}">
            <Binding Path="PlayCount"/>
            <Binding Source=""/>
            <Binding Source="watched_circle.png"/>
          </MultiBinding>
        </Image.Source>
      </Image-->
    </Grid>
  </ControlTemplate>
  

  <ControlTemplate x:Key="ListViewMovieItemTemplate">
    <Grid x:Name="ItemControl" Margin="8,0,8,0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}" FontFamily="DefaultBold">
        <Label.Opacity>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <!--<Binding Path="PlayCount"/>-->
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
            <Binding Source="1.0"/>
            <Binding Source="0.4"/>
          </MultiBinding>
        </Label.Opacity>
      </Label>

      <Control x:Name="ListViewCover" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="10,0,15,0"
               Template="{ThemeResource MovieCoverTemplate}" RenderTransformOrigin="0.5,0.5"
               IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Control.LayoutTransform>
          <ScaleTransform>
            <ScaleTransform.ScaleX>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small} ? {1} : ({0} == {LayoutSize}.{Medium} ? {2}: {3})">
                <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize"/>
                <Binding Source="0.5"/>
                <Binding Source="0.8"/>
                <Binding Source="1"/>
              </MultiBinding>
            </ScaleTransform.ScaleX>
            <ScaleTransform.ScaleY>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small} ? {1} : ({0} == {LayoutSize}.{Medium} ? {2}: {3})">
                <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize"/>
                <Binding Source="0.5"/>
                <Binding Source="0.8"/>
                <Binding Source="1"/>
              </MultiBinding>
            </ScaleTransform.ScaleY>
          </ScaleTransform>
        </Control.LayoutTransform>
      </Control>

      <Grid x:Name="FocusDetails" Grid.Row="1" Grid.Column="1" Margin="0,0,0,0"
            HorizontalAlignment="Stretch" 
            IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">

        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        
        <!-- GE2301: Unwatched marker added by symbol -->
        <Image HorizontalAlignment="Left" VerticalAlignment="Center" Stretch="Fill" Width="37" Height="24"  >
          <Image.Source>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == 0 ? {1} : {2}">
              <Binding Path="PlayCount"/>
              <Binding Source="unwatched_icon.png"/>
              <Binding Source="watched_icon.png"/>
            </MultiBinding>
          </Image.Source>
        </Image>
        <!-- GE2301: Unwatched marker added by symbol -->
        
        <media:VideoAspectWrapper MediaItem="{Binding MediaItem}" Grid.Column="0">
          <media:VideoAspectWrapper.Template>
            <ControlTemplate>
              <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Label x:Name="Genre" Grid.Row="0" Grid.Column="0" Content="{Binding Genres}" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}" FontFamily="DefaultBold" Margin="50,0,0,0"/>

              </Grid>
            </ControlTemplate>
          </media:VideoAspectWrapper.Template>
        </media:VideoAspectWrapper>

        <media:MovieAspectWrapper MediaItem="{Binding MediaItem}" Grid.Column="1" HorizontalAlignment="Right">
          <media:MovieAspectWrapper.Template>
            <ControlTemplate>
              <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"  Margin="0,0,0,0">

                <StarRatingPanel x:Name="RatingReadOnly" IsReadOnly="True" StarReadOnlyTemplate="{StaticResource StarReadOnlyTemplate}"
                               Maximum="10"
                               Value="{Binding TotalRating}">
                  <StarRatingPanel.LayoutTransform>
                    <TransformGroup>
                      <ScaleTransform ScaleX="1.6" ScaleY="1.4"/>
                    </TransformGroup>
                  </StarRatingPanel.LayoutTransform>
                </StarRatingPanel>
              </StackPanel>
            </ControlTemplate>
          </media:MovieAspectWrapper.Template>
        </media:MovieAspectWrapper>

      </Grid>
    </Grid>
  </ControlTemplate>

  <!-- Video -->
  <ControlTemplate x:Key="GridViewVideoItemTemplate">
    <Grid>
      <Image Source="MediaItem_Shadow.png" Margin="-7,-4,-8,-6"/>
      <Image Width="{StaticResource MEDIA_POSTER_WIDTH}" Height="{StaticResource MEDIA_POSTER_HEIGHT}" Stretch="UniformToFill"
             Source="{Binding MediaItem}" FallbackSource="VideoLarge.png"
             OpacityMask="{ThemeResource MediaItemsOpacityBrush}">
      </Image>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="ListViewVideoItemTemplate">
    <Grid x:Name="ItemControl" Margin="8,0,8,0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Grid.ColumnSpan="2" Content="{Binding SimpleTitle}" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}" FontFamily="DefaultBold">
        <Label.Opacity>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <!--<Binding Path="PlayCount"/>-->
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
            <Binding Source="1.0"/>
            <Binding Source="0.4"/>
          </MultiBinding>
        </Label.Opacity>
      </Label>

      <Control x:Name="ListViewCover" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="10,0,15,0"
               Template="{ThemeResource GridViewVideoItemTemplate}" RenderTransformOrigin="0.5,0.5"
               IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">
        <Control.LayoutTransform>
          <ScaleTransform>
            <ScaleTransform.ScaleX>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small} ? {1} : ({0} == {LayoutSize}.{Medium} ? {2}: {3})">
                <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize"/>
                <Binding Source="0.5"/>
                <Binding Source="0.8"/>
                <Binding Source="1"/>
              </MultiBinding>
            </ScaleTransform.ScaleX>
            <ScaleTransform.ScaleY>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small} ? {1} : ({0} == {LayoutSize}.{Medium} ? {2}: {3})">
                <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize"/>
                <Binding Source="0.5"/>
                <Binding Source="0.8"/>
                <Binding Source="1"/>
              </MultiBinding>
            </ScaleTransform.ScaleY>
          </ScaleTransform>
        </Control.LayoutTransform>
      </Control>

      <Grid x:Name="FocusDetails" Grid.Row="1" Grid.Column="1" Margin="0,0,0,0"
            HorizontalAlignment="Stretch"
            IsVisible="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}},Path=HasFocus}">

        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- GE2301: Unwatched marker added by symbol -->
        <Image HorizontalAlignment="Left" VerticalAlignment="Center" Stretch="Fill" Width="37" Height="24"  >
          <Image.Source>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == 0 ? {1} : {2}">
              <Binding Path="PlayCount"/>
              <Binding Source="unwatched_icon.png"/>
              <Binding Source="watched_icon.png"/>
            </MultiBinding>
          </Image.Source>
        </Image>
        <!-- GE2301: Unwatched marker added by symbol -->
        
        <media:VideoAspectWrapper MediaItem="{Binding MediaItem}" Grid.Column="0">
          <media:VideoAspectWrapper.Template>
            <ControlTemplate>
              <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <Label x:Name="Genre" Grid.Row="0" Grid.Column="0" Content="{Binding Genres}" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}" FontFamily="DefaultBold" Margin="50,0,0,0"/>

              </Grid>
            </ControlTemplate>
          </media:VideoAspectWrapper.Template>
        </media:VideoAspectWrapper>

        <media:MovieAspectWrapper MediaItem="{Binding MediaItem}" Grid.Column="1" HorizontalAlignment="Right">
          <media:MovieAspectWrapper.Template>
            <ControlTemplate>
              <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">

                <StarRatingPanel x:Name="RatingReadOnly" IsReadOnly="True" StarReadOnlyTemplate="{StaticResource StarReadOnlyTemplate}"
                               Maximum="10"
                               Value="{Binding TotalRating}">
                  <StarRatingPanel.LayoutTransform>
                    <TransformGroup>
                      <ScaleTransform ScaleX="1.6" ScaleY="1.4"/>
                    </TransformGroup>
                  </StarRatingPanel.LayoutTransform>
                </StarRatingPanel>
              </StackPanel>
            </ControlTemplate>
          </media:MovieAspectWrapper.Template>
        </media:MovieAspectWrapper>

        <media:EpisodeAspectWrapper MediaItem="{Binding MediaItem}" Grid.Column="1" HorizontalAlignment="Right">
          <media:EpisodeAspectWrapper.Template>
            <ControlTemplate>
              <StackPanel Orientation="Horizontal" HorizontalAlignment="Right" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">

                <StarRatingPanel x:Name="RatingReadOnly" IsReadOnly="True" StarReadOnlyTemplate="{StaticResource StarReadOnlyTemplate}"
                               Maximum="10"
                               Value="{Binding TotalRating}">
                  <StarRatingPanel.LayoutTransform>
                    <TransformGroup>
                      <ScaleTransform ScaleX="1.6" ScaleY="1.4"/>
                    </TransformGroup>
                  </StarRatingPanel.LayoutTransform>
                </StarRatingPanel>
              </StackPanel>
            </ControlTemplate>
          </media:EpisodeAspectWrapper.Template>
        </media:EpisodeAspectWrapper>

      </Grid>
    </Grid>
  </ControlTemplate>

  <!-- Audio -->
  <ControlTemplate x:Key="ListViewAudioItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="AudioSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="AudioSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="AudioLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Column="1" Content="{Binding SimpleTitle}" FontSize="{ThemeResource SmallFontSize}">
        <Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == 0 ? {1} : {2}">
            <Binding Path="PlayCount"/>
            <Binding Source="{ThemeResource TextColor}"/>
            <Binding Source="{ThemeResource WatchedTextColor}"/>
          </MultiBinding>
        </Label.Color>
      </Label>
      <Label x:Name="Duration" Grid.Column="2" Content="{Binding Duration}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewAudioItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource GRIDVIEW_FILTER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource GRIDVIEW_FILTER_HEIGHT}"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Image x:Name="ItemTypeAudio" Grid.Row="0" Stretch="Uniform" Source="{Binding MediaItem}" FallbackSource="AudioLarge.png"
           Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}"/>
      <!-- Unwatched indicator -->
      <Image Source="unwatched_flag.png" HorizontalAlignment="Left" VerticalAlignment="Top">
        <Image.IsVisible>
          <Binding Path="PlayCount" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == 0"/>
        </Image.IsVisible>
      </Image>
      <Label x:Name="ItemLabel" Grid.Row="1" Content="{Binding SimpleTitle}" FontSize="{ThemeResource SmallFontSize}" HorizontalAlignment="Center">
        <Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == 0 ? {1} : {2}">
            <Binding Path="PlayCount"/>
            <Binding Source="{ThemeResource TextColor}"/>
            <Binding Source="{ThemeResource WatchedTextColor}"/>
          </MultiBinding>
        </Label.Color>
      </Label>
    </Grid>
  </ControlTemplate>

  <!-- Audio Album -->
  <ControlTemplate x:Key="ListViewAlbumItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform" FallbackSource="AudioSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Album" fanart:FanArtType="Poster" fanart:FanArtName="{Binding SimpleTitle}"
                                      fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform" FallbackSource="AudioSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Album" fanart:FanArtType="Poster" fanart:FanArtName="{Binding SimpleTitle}"
                                      fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform" FallbackSource="AudioLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Album" fanart:FanArtType="Poster" fanart:FanArtName="{Binding SimpleTitle}"
                                      fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Column="1" Content="{Binding SimpleTitle}" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" />
      <Label x:Name="Duration" Grid.Column="2" Content="{Binding Duration}" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewAlbumItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource GRIDVIEW_FILTER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource GRIDVIEW_FILTER_HEIGHT}"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Image x:Name="ItemTypeAudio" Grid.Row="0" Stretch="Uniform" FallbackSource="AudioLarge.png"
           Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Album" fanart:FanArtType="Poster" fanart:FanArtName="{Binding SimpleTitle}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
      </Image>
      <Label x:Name="ItemLabel" Grid.Row="1" Content="{Binding SimpleTitle}" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" HorizontalAlignment="Center" />
    </Grid>
  </ControlTemplate>

  <!-- Image -->
  <ControlTemplate x:Key="ListViewImageItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel LastChildFill="True" Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
             Source="{Binding MediaItem}" FallbackSource="ImageSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="ImageSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="ImageLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}" FontSize="{ThemeResource SmallFontSize}">
        <Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == 0 ? {1} : {2}">
            <Binding Path="PlayCount"/>
            <Binding Source="{ThemeResource TextColor}"/>
            <Binding Source="{ThemeResource WatchedTextColor}"/>
          </MultiBinding>
        </Label.Color>
      </Label>
      <Label x:Name="Size" Grid.Row="0" Grid.Column="2" Content="{Binding Size}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Grid x:Name="Details" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Stretch">
        <Grid.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} != {LayoutSize}.{Small}"/>
        </Grid.IsVisible>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="200"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="200"/>
        </Grid.ColumnDefinitions>
        <Label x:Name="FileTypeTitle" Grid.Column="0" Content="File type: " FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
        <Label x:Name="FileType" Grid.Column="1" Content="{Binding Extension}" FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
        <Label x:Name="MimeTypeTitle" Grid.Column="2" Content="Mime type: " FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
        <Label x:Name="MimeType" Grid.Column="3" Content="{Binding MimeType}" FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
      </Grid>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewImageItemTemplate">
    <Grid>
      <Image Source="MediaItem_Shadow.png" Margin="-7,-4,-8,-6"/>
      <Image Width="{StaticResource MEDIA_POSTER_WIDTH}" Height="{StaticResource MEDIA_POSTER_HEIGHT}" Stretch="UniformToFill"
             Source="{Binding MediaItem}" FallbackSource="ImageLarge.png"
             OpacityMask="{ThemeResource MediaItemsOpacityBrush}">
      </Image>
    </Grid>
  </ControlTemplate>

  <!-- Specific media navigation data templates -->
  <DataTemplate DataType="{x:Type navitems:SeriesFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewSeriesFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewSeriesFilterItemTemplate}"/>
          <!--<Binding Source="{StaticResource CoverViewSeriesFilterItemTemplate}"/>-->
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:MovieFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewMovieFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewMovieFilterItemTemplate}"/>
          <!--<Binding Source="{StaticResource CoverViewMovieFilterItemTemplate}"/>-->
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:MovieItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewMovieItemTemplate}"/>
          <Binding Source="{StaticResource GridViewMovieItemTemplate}"/>
          <Binding Source="{StaticResource CoverViewMovieItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>


  <DataTemplate DataType="{x:Type navitems:ContainerItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewContainerItemTemplate}"/>
          <Binding Source="{StaticResource GridViewContainerItemTemplate}"/>
          <!--<Binding Source="{StaticResource CoverViewContainerItemTemplate}"/>-->
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:FilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewFilterItemTemplate}"/>
          <!--<Binding Source="{StaticResource CoverViewFilterItemTemplate}"/>-->
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:VideoItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewVideoItemTemplate}"/>
          <Binding Source="{StaticResource GridViewVideoItemTemplate}"/>
          <!--<Binding Source="{StaticResource CoverViewVideoItemTemplate}"/>-->
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:AudioItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewAudioItemTemplate}"/>
          <Binding Source="{StaticResource GridViewAudioItemTemplate}"/>
          <!--<Binding Source="{StaticResource CoverViewAudioItemTemplate}"/>-->
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:AlbumFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewAlbumItemTemplate}"/>
          <Binding Source="{StaticResource GridViewAlbumItemTemplate}"/>
          <!--<Binding Source="{StaticResource CoverViewAlbumItemTemplate}"/>-->
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:ImageItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewImageItemTemplate}"/>
          <Binding Source="{StaticResource GridViewImageItemTemplate}"/>
          <!--<Binding Source="{StaticResource CoverViewImageItemTemplate}"/>-->
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataStringProvider x:Key="MediaItemDataStringProvider" Path="SimpleTitle"/>

  <!-- An item list container represented by a standard "Button", scrolling its "ItemLabel" label when focused -->
  <Style x:Key="MediaItemContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Style="{ThemeResource MediaItemButtonWideStyle}" Margin="5,0,0,5"
              Command="{DynamicResource ResourceKey=Menu_Command}"
              IsEnabled="{Binding Enabled}" SetFocus="{Binding Path=Selected,Mode=OneTime}">
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
              </Trigger>
            </Button.Triggers>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Model x:Key="MediaItemsActionModel" Id="970649B2-CAE8-4830-A985-E5E78F3CB24F"/>

  <!-- An item list container used for MediaItems. Additionally to the standard "Button", it adds a context menu command  -->
  <Style x:Key="MediaItemWithContextMenuContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Style="{ThemeResource MediaItemButtonWideStyle}"
                  Command="{DynamicResource ResourceKey=Menu_Command}"
                  IsEnabled="{Binding Enabled}"
                  SetFocusPrio="{Binding Path=Selected,Mode=OneTime,Converter={StaticResource BoolToFocusPriorityConverter},ConverterParameter=Highest}">
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
                <Setter Property="StackPanel.ZIndex" Value="100.0"/>
              </Trigger>
            </Button.Triggers>
            <Button.ContextMenuCommand>
              <Command Source="{StaticResource MediaItemsActionModel}" Path="ShowMediaItemActions" Parameters="{LateBoundValue BindingValue={Binding MediaItem}}"/>
            </Button.ContextMenuCommand>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MediaItemCoverWithContextMenuContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Style="{ThemeResource MediaItemButtonCoverStyle}"
                  Command="{DynamicResource ResourceKey=Menu_Command}"
                  IsEnabled="{Binding Enabled}"
                  SetFocusPrio="{Binding Path=Selected,Mode=OneTime,Converter={StaticResource BoolToFocusPriorityConverter},ConverterParameter=Highest}">
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
                <Setter Property="StackPanel.ZIndex" Value="100.0"/>
              </Trigger>
            </Button.Triggers>
            <Button.ContextMenuCommand>
              <Command Source="{StaticResource MediaItemsActionModel}" Path="ShowMediaItemActions" Parameters="{LateBoundValue BindingValue={Binding MediaItem}}"/>
            </Button.ContextMenuCommand>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MediaItemCoverFlowWithContextMenuContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Style="{ThemeResource MediaItemButtonCoverFlowStyle}"
                  Command="{DynamicResource ResourceKey=Menu_Command}"
                  IsEnabled="{Binding Enabled}"
                  SetFocusPrio="{Binding Path=Selected,Mode=OneTime,Converter={StaticResource BoolToFocusPriorityConverter},ConverterParameter=Highest}">
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
                <Setter Property="StackPanel.ZIndex" Value="100.0"/>
              </Trigger>
            </Button.Triggers>
            <Button.ContextMenuCommand>
              <Command Source="{StaticResource MediaItemsActionModel}" Path="ShowMediaItemActions" Parameters="{LateBoundValue BindingValue={Binding MediaItem}}"/>
            </Button.ContextMenuCommand>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MediaItemsListListViewStyle" BasedOn="{ThemeResource ContentsMenuListViewStyle}">
    <EventSetter Event="SelectionChanged" Handler="{CommandStencil Source={StaticResource FanArtBackgroundModel}, Path=SetSelectedItem}"/>
    <Setter Property="ItemTemplate"/>
    <!-- Don't inherit the ItemTemplate from ContentsMenuListViewStyle - It should remain null to make the SkinEngine choose an appropriate template -->
    <Setter Property="DataStringProvider" Value="{ThemeResource MediaItemDataStringProvider}"/>
    <BindingSetter Property="ItemContainerStyle">
      <BindingSetter.BindingWrapper>
        <BindingWrapper>
          <BindingWrapper.Binding>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
              <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
              <Binding Source="{ThemeResource MediaItemWithContextMenuContainerStyle}"/>
              <Binding Source="{ThemeResource MediaItemCoverWithContextMenuContainerStyle}"/>
              <Binding Source="{ThemeResource MediaItemCoverFlowWithContextMenuContainerStyle}"/>
            </MultiBinding>
          </BindingWrapper.Binding>
        </BindingWrapper>
      </BindingSetter.BindingWrapper>
    </BindingSetter>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <ScrollViewer CanContentScroll="True" Margin="5" Style="{ThemeResource LeftSideScrollViewerStyle}"
              HorizontalScrollBarVisibility="Auto" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <BindingSetter Property="ItemsPanel">
      <BindingSetter.BindingWrapper>
        <BindingWrapper>
          <BindingWrapper.Binding>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : ({0} == {LayoutType}.{GridLayout} ? {2} : {3})">
              <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
              <!-- List layout -->
              <Binding>
                <Binding.Source>
                  <ItemsPanelTemplate>
                    <VirtualizingStackPanel x:Name="ListItemsHost" IsItemsHost="True"/>
                  </ItemsPanelTemplate>
                </Binding.Source>
              </Binding>
              <!-- Grid layout -->
              <Binding>
                <Binding.Source>
                  <ItemsPanelTemplate>
                    <VirtualizingWrapPanel x:Name="GridItemsHost" IsItemsHost="True" Margin="8,0,0,0"/>
                  </ItemsPanelTemplate>
                </Binding.Source>
              </Binding>
              <!-- Cover layout -->
              <Binding>
                <Binding.Source>
                  <ItemsPanelTemplate>
                    <VirtualizingStackPanel x:Name="CoverListItemsHost" IsItemsHost="True" Margin="8,0,-30,0" Orientation="Horizontal"/>
                  </ItemsPanelTemplate>
                </Binding.Source>
              </Binding>
            </MultiBinding>
          </BindingWrapper.Binding>
        </BindingWrapper>
      </BindingSetter.BindingWrapper>
    </BindingSetter>
  </Style>

  <!-- OSD styles -->
  <ControlTemplate x:Key="GenericVideoOSDProgressControl">
    <DockPanel LastChildFill="true" Margin="3">
      <Grid DockPanel.Dock="Center" HorizontalAlignment="Stretch">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="100"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="100"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <Label x:Name="CurrentTimeLabel" Grid.Column="0" Content="{Binding CurrentTime}"
                        Color="{ThemeResource TextColor}" HorizontalAlignment="Left" VerticalAlignment="Center"
                        FontSize="{ThemeResource SmallFontSize}"/>

        <ProgressBar x:Name="ProgressBar" Grid.Column="1" Height="18" HorizontalAlignment="Stretch" VerticalAlignment="Center" Margin="0,5,0,0"
                        Style="{ThemeResource OSDProgressBarStyle}" Value="{Binding Path=PercentPlayed, Mode=TwoWay}" />

        <Label x:Name="VideoDurationLabel" Grid.Column="2" Content="{Binding Duration}"
                        Color="{ThemeResource TextColor}" HorizontalAlignment="Left" VerticalAlignment="Center"
                        FontSize="{ThemeResource SmallFontSize}"/>

      </Grid>
    </DockPanel>
  </ControlTemplate>

  <ControlTemplate x:Key="GenericVideoOSDControlsControl">
    <StackPanel x:Name="PlayControlsPanel" Orientation="Horizontal" VerticalAlignment="Center" HorizontalAlignment="Center">
      <!-- Morpheus_xx: we want to see buttons always, not only when using mouse // IsVisible="{Binding ShowMouseControls}" -->
      <Button x:Name="SkipBackButton" Style="{ThemeResource SkipBackButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSkipBack}"
                          Command="{Command Previous}"/>
      <Button x:Name="RewindButton" Style="{ThemeResource RewindButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSeekBackward}"
                          Command="{Command SeekBackward}"/>
      <Button x:Name="PlayButton" Style="{ThemeResource PlayButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanPlay}"
                          Command="{Command Play}"/>
      <Button x:Name="PauseButton" Style="{ThemeResource PauseButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanPause}"
                          Command="{Command Pause}"/>
      <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanStop}"
                          Command="{Command Stop}"/>
      <Button x:Name="ForwardButton" Style="{ThemeResource ForwardButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSeekForward}"
                          Command="{Command SeekForward}"/>
      <Button x:Name="SkipForwardButton" Style="{ThemeResource SkipForwardButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSkipForward}"
                          Command="{Command Next}"/>
      <Button x:Name="SelectTitleButton" Style="{ThemeResource ShowDvdMenuButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                          IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.TitlesAvailable}"
                          Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseTitleDialog}"/>
      <Button x:Name="PreviousChapterButton" Style="{ThemeResource PreviousChapterButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                          IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.ChaptersAvailable}"
                          Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.PrevChapter}"/>
      <Button x:Name="SelectChapterButton" Style="{ThemeResource SelectChapterButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                          IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.ChaptersAvailable}"
                          Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseChapterDialog}"/>
      <Button x:Name="NextChapterButton" Style="{ThemeResource NextChapterButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                          IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.ChaptersAvailable}"
                          Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.NextChapter}"/>
      <Button x:Name="SelectSubtitleButton" Style="{ThemeResource SelectSubtitleButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}"
                          IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.SubtitlesAvailable}"
                          Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseSubtitleDialog}"/>

      <Grid x:Name="AudioPanel" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="4">
        <Grid x:Name="Audio_NoMouse" IsVisible="{Binding !ShowMouseControls}"
                      VerticalAlignment="Center" HorizontalAlignment="Center">
          <!-- Must be located the same as Audio_Mouse -->
          <Control x:Name="AudioSimple" IsVisible="{Binding IsAudio}" Template="{ThemeResource AudioActiveControlTemplate}"/>
          <Control x:Name="MuteOnOffSimple" Template="{ThemeResource MuteOnOffControlTemplate}">
            <Control.IsVisible>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} &amp;&amp; {1}">
                <Binding Path="IsAudio"/>
                <Binding Path="IsMuted"/>
              </MultiBinding>
            </Control.IsVisible>
          </Control>
        </Grid>
        <Grid x:Name="Audio_Mouse" IsVisible="{Binding ShowMouseControls}" VerticalAlignment="Center" HorizontalAlignment="Center">
          <!-- Must be located the same as Audio_NoMouse -->
          <Button x:Name="AudioActiveButton" IsVisible="{Binding IsAudio}" Style="{ThemeResource AudioActiveButtonStyle}" Command="{Command AudioButtonPressed}"/>
          <Button x:Name="AudioInactiveButton" IsVisible="{Binding !IsAudio}" Style="{ThemeResource AudioInactiveButtonStyle}" Command="{Command AudioButtonPressed}"/>
        </Grid>
      </Grid>
    </StackPanel>
  </ControlTemplate>

  <Style x:Key="PrimaryVideoOSDStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">

          <Control Style="{ThemeResource OSDContainer}" Width="{ThemeResource FullScreenContentVideoPrimaryPlayerOSDWidth}" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <Control.Resources>
              <ControlTemplate x:Key="OSD_Cover_Template">
                <Grid>

                  <Image Width="{StaticResource MEDIA_POSTER_WIDTH}" Height="{StaticResource MEDIA_POSTER_HEIGHT}" Stretch="UniformToFill"
                         FallbackSource="{Binding MediaItem}"
                         OpacityMask="{ThemeResource MediaItemsOpacityBrush}">
                    <Image.Source>
                      <fanart:FanArtImageSource fanart:FanArtMediaType="Movie" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem}"
                          fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
                    </Image.Source>
                  </Image>

                  <!-- TODO: Add series cover / video thumbnail 
                  <Image Width="{StaticResource MEDIA_POSTER_WIDTH}" Height="{StaticResource MEDIA_POSTER_HEIGHT}" Stretch="UniformToFill"
                         OpacityMask="{ThemeResource MediaItemsOpacityBrush}">
                    <Image.Source>
                      <fanart:FanArtImageSource fanart:FanArtMediaType="Series" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem}"
                          fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
                    </Image.Source>
                  </Image>-->

                </Grid>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_InfoArea_Template">

                <Grid x:Name="InfoGrid" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition Height="150"/>
                  </Grid.RowDefinitions>


                  <Label x:Name="VideoName" Content="{Binding Path=MediaItemTitle}" Color="{ThemeResource TextColor}"
                        FontSize="{ThemeResource OsdTitleFontSize}" FontFamily="DefaultBold"
                        Scroll="Auto" HorizontalAlignment="Left" VerticalAlignment="Center"/>

                  <media:MediaAspectWrapper MediaItem="{Binding Path=MediaItem}" Grid.Row="0" Grid.Column="1" Margin="15,-5,0,0">
                    <media:MediaAspectWrapper.Template>
                      <ControlTemplate>
                        <Label x:Name="Year" FontSize="{ThemeResource SmallerFontSize}"
                                 DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                 Content="{Binding Path=RecordingTime, Converter={StaticResource DateFormatConverter}, ConverterParameter=yyyy}" Color="{ThemeResource TextColor}"/>
                      </ControlTemplate>
                    </media:MediaAspectWrapper.Template>
                  </media:MediaAspectWrapper>

                  <media:VideoAspectWrapper MediaItem="{Binding Path=MediaItem}" Grid.Row="1" Grid.Column="0" Grid.ColumnSpan="2">
                    <media:VideoAspectWrapper.Template>
                      <ControlTemplate>
                        <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                          <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="*"/>
                          </Grid.ColumnDefinitions>
                          <Grid.RowDefinitions>
                            <RowDefinition Height="*"/>
                          </Grid.RowDefinitions>
                          <Label x:Name="StoryPlot" Wrap="True" Scroll="Auto" ScrollSpeed="5" ScrollDelay="5"
                                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                                 FontSize="{ThemeResource SmallFontSize}"
                                 DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                                 Content="{Binding Path=StoryPlot}" Color="{ThemeResource TextColor}" />
                        </Grid>
                      </ControlTemplate>
                    </media:VideoAspectWrapper.Template>
                  </media:VideoAspectWrapper>
                </Grid>
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_Progress_Template">
                <Control Template="{ThemeResource GenericVideoOSDProgressControl}" />
              </ControlTemplate>

              <ControlTemplate x:Key="OSD_Controls_Template">
                <Control Template="{ThemeResource GenericVideoOSDControlsControl}" />
              </ControlTemplate>

            </Control.Resources>
          </Control>
          <!--<ControlTemplate.Triggers>
            <Trigger Property="IsCurrentPlayer" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="CurrentPlayer_BeginStoryboard" Storyboard="{ThemeResource OSDCurrentPlayerControlStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="CurrentPlayer_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>-->
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="PlayerContext" Value="PrimaryPlayer"/>
  </Style>


  <Storyboard x:Key="PressedPiPOSDButtonStoryboard" FillBehavior="HoldEnd">
    <ColorAnimationUsingKeyFrames BeginTime="00:00:00" RepeatBehavior="Forever" AutoReverse="True" Storyboard.TargetName="PiPControlBorder" Storyboard.TargetProperty="BorderBrush.Color">
      <SplineColorKeyFrame KeyTime="00:00:00" Value="{ThemeResource PipBorderColor}"/>
      <SplineColorKeyFrame KeyTime="{ThemeResource PressedPiPOSDButtonAnimationTime2}" Value="{ThemeResource OSDPipBorderFocusColor}"/>
    </ColorAnimationUsingKeyFrames>
    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="PiPButton" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX">
      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
      <SplineDoubleKeyFrame KeyTime="{ThemeResource PressedPiPOSDButtonAnimationTime1}" Value="{ThemeResource SquareButtonZoomCoefficient}"/>
    </DoubleAnimationUsingKeyFrames>
    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="PiPButton" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY">
      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
      <SplineDoubleKeyFrame KeyTime="{ThemeResource PressedPiPOSDButtonAnimationTime1}" Value="{ThemeResource SquareButtonZoomCoefficient}"/>
    </DoubleAnimationUsingKeyFrames>
  </Storyboard>

  <Style x:Key="SecondaryMediaOSDStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="FixedImageHeight" Value="{ThemeResource FullScreenContentVideoSecondaryPlayerOSDPipHeight}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <Border x:Name="OSD_Background" BorderBrush="{ThemeResource OSDPlayControlBorderColor}"
              CornerRadius="{ThemeResource OSDPlayControlCornerRadius}" BorderThickness="{ThemeResource OSDPlayControlBorderThickness}"
              DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <Border.Background>
              <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="{ThemeResource OSDPlayerControlBackgroundColor1}"/>
                <GradientStop Offset="0.5" Color="{ThemeResource OSDPlayerControlBackgroundColor2}"/>
                <GradientStop Offset="1" Color="{ThemeResource OSDPlayerControlBackgroundColor3}"/>
              </LinearGradientBrush >
            </Border.Background>
            <Grid x:Name="PlayerGrid" Grid.Column="2" Grid.Row="0" Margin="10,0,10,0"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <DockPanel x:Name="PiPHeaderPanel" Grid.Column="0" Grid.Row="0" LastChildFill="true" Margin="3">
                <Grid x:Name="AudioPanel" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="4,0,0,0" Height="30"
                    IsVisible="{Binding HasAudio}">
                  <Grid x:Name="Audio_NoMouse" IsVisible="{Binding !ShowMouseControls}"
                      VerticalAlignment="Center" HorizontalAlignment="Center">
                    <!-- Must be located the same as Audio_Mouse -->
                    <Control x:Name="AudioSimple" IsVisible="{Binding IsAudio}" Template="{ThemeResource AudioActiveControlTemplate}"/>
                    <Control x:Name="MuteOnOffSimple" Template="{ThemeResource MuteOnOffControlTemplate}">
                      <Control.IsVisible>
                        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} &amp;&amp; {1}">
                          <Binding Path="IsAudio"/>
                          <Binding Path="IsMuted"/>
                        </MultiBinding>
                      </Control.IsVisible>
                    </Control>
                  </Grid>
                  <Grid x:Name="Audio_Mouse" IsVisible="{Binding ShowMouseControls}"
                      VerticalAlignment="Center" HorizontalAlignment="Center">
                    <!-- Must be located the same as Audio_NoMouse -->
                    <Button x:Name="AudioActiveButton" IsVisible="{Binding IsAudio}" Style="{ThemeResource AudioActiveButtonStyle}"
                        Command="{Command AudioButtonPressed}"/>
                    <Button x:Name="AudioInactiveButton" IsVisible="{Binding !IsAudio}" Style="{ThemeResource AudioInactiveButtonStyle}"
                        Command="{Command AudioButtonPressed}"/>
                  </Grid>
                </Grid>
                <Grid DockPanel.Dock="Center">
                  <!-- Has to be last control in DockPanel, LastChildFill! -->
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <Label x:Name="MediaName" Content="{Binding Path=MediaItemTitle}" Color="{ThemeResource TextColor}" Scroll="Auto"
                      HorizontalAlignment="Left" VerticalAlignment="Center"
                      MaxWidth="{ThemeResource FullScreenContentVideoSecondaryPlayerOSDTextMaxWidth}"/>
                </Grid>
              </DockPanel>
              <!-- PiPHeaderPanel -->
              <Button x:Name="PiPButton" Grid.Column="0" Grid.Row="1" Margin="5"
                  Style="{ThemeResource PipControlStyle}" RenderTransformOrigin="0.5,0.5"
                  VerticalAlignment="Center" HorizontalAlignment="Center"
                  Command="{Command SwitchPip}" IsVisible="{Binding IsPip}">
                <Button.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                  </TransformGroup>
                </Button.RenderTransform>
                <Button.Triggers>
                  <Trigger Property="HasFocus" Value="True">
                    <Trigger.EnterActions>
                      <BeginStoryboard x:Name="Focused_BeginStoryboard" Storyboard="{ThemeResource PressedPiPOSDButtonStoryboard}"/>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                      <StopStoryboard BeginStoryboardName="Focused_BeginStoryboard"/>
                    </Trigger.ExitActions>
                  </Trigger>
                </Button.Triggers>
              </Button>
              <!-- PiPButton -->
              <Label x:Name="PlayerStateLabel" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Center" Color="{ThemeResource TextColor}"
                  Content="{Binding PlayerStateText}" Scroll="Auto" MaxWidth="{ThemeResource FullScreenContentVideoSecondaryPlayerOSDTextMaxWidth}"/>
              <StackPanel x:Name="PlayControlsPanel" Orientation="Horizontal" Grid.Column="0" Grid.Row="3" Margin="10,10,10,0"
                  VerticalAlignment="Center" HorizontalAlignment="Center" IsVisible="{Binding ShowMouseControls}" Height="30">
                <Button x:Name="SkipBackButton" Style="{ThemeResource SkipBackButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSkipBack}"
                    Command="{Command Previous}"/>
                <Button x:Name="RewindButton" Style="{ThemeResource RewindButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSeekBackward}"
                    Command="{Command SeekBackward}"/>
                <Button x:Name="PlayButton" Style="{ThemeResource PlayButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanPlay}"
                    Command="{Command Play}"/>
                <Button x:Name="PauseButton" Style="{ThemeResource PauseButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanPause}"
                    Command="{Command Pause}"/>
                <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanStop}"
                    Command="{Command Stop}"/>
                <Button x:Name="ForwardButton" Style="{ThemeResource ForwardButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSeekForward}"
                    Command="{Command SeekForward}"/>
                <Button x:Name="SkipForwardButton" Style="{ThemeResource SkipForwardButtonStyle}" Margin="{ThemeResource PlayerControlButtonMargins}" IsVisible="{Binding CanSkipForward}"
                    Command="{Command Next}"/>
              </StackPanel>
              <!-- PlayControlsPanel -->
            </Grid>
            <!-- PlayerGrid -->
          </Border>
          <!-- OSD_Background -->
          <ControlTemplate.Triggers>
            <!--<Trigger Property="IsCurrentPlayer" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="CurrentPlayer_BeginStoryboard" Storyboard="{ThemeResource OSDCurrentPlayerControlStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="CurrentPlayer_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>-->
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="PlayerContext" Value="SecondaryPlayer"/>
  </Style>

</ResourceDictionary>
