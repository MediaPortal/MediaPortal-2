<?xml version="1.0" encoding="utf-8"?>

<Include
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:aspect="clr-namespace:MediaPortal.Common.MediaManagement.DefaultItemAspects;assembly=MediaPortal.Common"
    xmlns:vm="clr-namespace:MediaPortal.UiComponents.Media.Models;assembly=Media"
    Source="screens\master_dialog_bare.xaml"
    >
  <Include.Resources>
    <!-- Dialog title -->
    <ResourceWrapper x:Key="Dialog_Header_Text" Resource="[Media.SwitchViewModeDialogTitle]"/>

    <Model x:Key="ViewModeModel" Id="6997CD35-63F0-4F96-8997-E18C9382E2DC"/>
    <Model x:Key="SkinSettingsModel" Id="13961014-16C4-4361-9751-8E2C585EFD44"/>

    <ControlTemplate x:Key="WatchedFlag_Template">
      <Grid HorizontalAlignment="Right" VerticalAlignment="Top">
        <Polygon Height="38" Width="38" Points="0,0 38,0 38,38" StrokeThickness="0" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="3,2,3,3">
          <Polygon.Fill>
            <LinearGradientBrush StartPoint="0,1" EndPoint="1,0">
              <GradientStop Color="#00000000" Offset="0.5"/>
              <GradientStop Color="#FF000000" Offset="0.6" />
            </LinearGradientBrush>
          </Polygon.Fill>
        </Polygon>
        <Polygon Height="32" Width="32" Points="0,0 32,0 32,32" StrokeThickness="0" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="3,2,3,3">
          <Polygon.Fill>
            <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
              <GradientStop Color="{ThemeResource NereusColorMedium}" Offset="0" />
              <GradientStop Color="{ThemeResource NereusColorDark}" Offset="1" />
            </LinearGradientBrush>
          </Polygon.Fill>
        </Polygon>
        <Image x:Name="WatchedLabel" Height="9" Margin="0,5,5,2" Stretch="Uniform"
                   Source="watched.png" HorizontalAlignment="Right" VerticalAlignment="Top"/>
      </Grid>
    </ControlTemplate>
    
    <!--ResourceWrapper x:Key="Menu_Items" EnableBindings="True"
        Resource="{Binding Source={StaticResource ViewModeModel},Path=ViewModeItemsList,Mode=OneTime}"/-->
    
    <ControlTemplate x:Key="Contents_Template">
      <Grid>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="1"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="1"/>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="0.5"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="1"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!--###################### VIEW MODES #######################-->

        <!-- LIST VIEW -->
        <Grid Margin="0,0,10,10">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>

          <Grid Grid.Row="0" Grid.Column="0">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <RadioButton x:Name="List" HorizontalAlignment="Center" GroupName="ViewModes" 
                         Command="{Command Source={StaticResource ViewModeModel}, Path=SetViewMode, Parameters={vm:SetViewModeParameter Layout=ListLayout}}">
              <RadioButton.IsChecked>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout}">
                  <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
                </MultiBinding>
              </RadioButton.IsChecked>
              <RadioButton.SetFocus>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout}">
                  <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
                </MultiBinding>
              </RadioButton.SetFocus>
            </RadioButton>
            <Label Grid.Column="1" Content="[Media.List]" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}" 
                   FontFamily="SegoeUIBold" VerticalAlignment="Center">
              <Label.Opacity>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                  <Binding ElementName="List" Path="HasFocus"/>
                  <Binding Source="1.0"/>
                  <Binding Source="0.5"/>
                </MultiBinding>
              </Label.Opacity>
            </Label>
          </Grid>

          <Grid Grid.Row="1" Grid.Column="0" Margin="10,10,0,0">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <RadioButton x:Name="ListSmall" GroupName="ListViewModes" HorizontalAlignment="Center" IsEnabled="{Binding ElementName=List, Path=IsChecked}"
                         Command="{Command Source={StaticResource ViewModeModel}, Path=SetViewMode, Parameters={vm:SetViewModeParameter Layout=ListLayout, Size=Small}}">
              <RadioButton.IsChecked>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} &amp;&amp; {1} == {LayoutSize}.{Small}">
                  <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
                  <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize"/>
                </MultiBinding>
              </RadioButton.IsChecked>
            </RadioButton>
            
            <Label Grid.Column="1" Content="[Media.ListSmall]" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}" VerticalAlignment="Center">
              <Label.Opacity>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {2} : ({1} ? {4} : {3})">
                  <Binding ElementName="ListSmall" Path="HasFocus"/>
                  <Binding ElementName="ListSmall" Path="!IsEnabled"/>
                  <Binding Source="1.0"/>
                  <Binding Source="0.5"/>
                  <Binding Source="0.25"/>
                </MultiBinding>
              </Label.Opacity>
            </Label>

            <UniformGrid Grid.Row="1" Grid.Column="1" Rows="10" Height="100">
              <UniformGrid.Width>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                  <Binding ElementName="ListExtendedMediaDetails" Path="IsChecked"/>
                  <Binding Source="210"/>
                  <Binding Source="105"/>
                </MultiBinding>
              </UniformGrid.Width>
              <UniformGrid.Opacity>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {2} : ({1} ? {4} : {3})">
                  <Binding ElementName="ListSmall" Path="HasFocus"/>
                  <Binding ElementName="ListSmall" Path="!IsEnabled"/>
                  <Binding Source="1.0"/>
                  <Binding Source="0.5"/>
                  <Binding Source="0.25"/>
                </MultiBinding>
              </UniformGrid.Opacity>
              <Border x:Name="BaseSmall" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border.Background>
                  <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                    <Binding ElementName="ListSmall" Path="IsChecked"/>
                    <Binding Source="{ThemeResource NereusColorLight}"/>
                    <Binding Source="#FFFFFFFF"/>
                  </MultiBinding>
                </Border.Background>
              </Border>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseSmall, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseSmall, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseSmall, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseSmall, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseSmall, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseSmall, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseSmall, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseSmall, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseSmall, Path=Background}"/>
            </UniformGrid>
          </Grid>

          <Grid Grid.Row="2" Grid.Column="0" Margin="10,10,0,0">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <RadioButton x:Name="ListMedium" GroupName="ListViewModes" HorizontalAlignment="Center" IsEnabled="{Binding ElementName=List, Path=IsChecked}"
                         Command="{Command Source={StaticResource ViewModeModel}, Path=SetViewMode, Parameters={vm:SetViewModeParameter Layout=ListLayout, Size=Medium}}">
              <RadioButton.IsChecked>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} &amp;&amp; {1} == {LayoutSize}.{Medium}">
                  <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
                  <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize"/>
                </MultiBinding>
              </RadioButton.IsChecked>
            </RadioButton>
            <Label Grid.Column="1" Content="[Media.ListMedium]" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}" VerticalAlignment="Center">
              <Label.Opacity>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {2} : ({1} ? {4} : {3})">
                  <Binding ElementName="ListMedium" Path="HasFocus"/>
                  <Binding ElementName="ListMedium" Path="!IsEnabled"/>
                  <Binding Source="1.0"/>
                  <Binding Source="0.5"/>
                  <Binding Source="0.25"/>
                </MultiBinding>
              </Label.Opacity>
            </Label>

            <Grid Grid.Row="1" Grid.Column="1" Height="100">
              <Grid.Width>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                  <Binding ElementName="ListExtendedMediaDetails" Path="IsChecked"/>
                  <Binding Source="210"/>
                  <Binding Source="105"/>
                </MultiBinding>
              </Grid.Width>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="11"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.Opacity>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {2} : ({1} ? {4} : {3})">
                  <Binding ElementName="ListMedium" Path="HasFocus"/>
                  <Binding ElementName="ListMedium" Path="!IsEnabled"/>
                  <Binding Source="1.0"/>
                  <Binding Source="0.5"/>
                  <Binding Source="0.25"/>
                </MultiBinding>
              </Grid.Opacity>
              <Border x:Name="BaseMedium" Grid.Row="0" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border.Background>
                  <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                    <Binding ElementName="ListMedium" Path="IsChecked"/>
                    <Binding Source="{ThemeResource NereusColorLight}"/>
                    <Binding Source="#FFFFFFFF"/>
                  </MultiBinding>
                </Border.Background>
              </Border>
              <Border Grid.Row="1" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseMedium, Path=Background}"/>
              <Border Grid.Row="2" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseMedium, Path=Background}"/>
              <Border Grid.Row="3" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseMedium, Path=Background}"/>
              <Border Grid.Row="4" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseMedium, Path=Background}"/>
              <Border Grid.Row="5" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseMedium, Path=Background}"/>
              <Border Grid.Row="6" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseMedium, Path=Background}"/>
              <Border Grid.Row="0" Grid.Column="1" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseMedium, Path=Background}"/>
              <Border Grid.Row="1" Grid.Column="1" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseMedium, Path=Background}"/>
              <Border Grid.Row="2" Grid.Column="1" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseMedium, Path=Background}"/>
              <Border Grid.Row="3" Grid.Column="1" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseMedium, Path=Background}"/>
              <Border Grid.Row="4" Grid.Column="1" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseMedium, Path=Background}"/>
              <Border Grid.Row="5" Grid.Column="1" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseMedium, Path=Background}"/>
              <Border Grid.Row="6" Grid.Column="1" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseMedium, Path=Background}"/>
            </Grid>

          </Grid>

          <Grid Grid.Row="3" Grid.Column="0" Margin="10,10,0,0">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <RadioButton x:Name="ListLarge" GroupName="ListViewModes" HorizontalAlignment="Center" IsEnabled="{Binding ElementName=List, Path=IsChecked}"
                         Command="{Command Source={StaticResource ViewModeModel}, Path=SetViewMode, Parameters={vm:SetViewModeParameter Layout=ListLayout, Size=Large}}">
              <RadioButton.IsChecked>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} &amp;&amp; {1} == {LayoutSize}.{Large}">
                  <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
                  <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize"/>
                </MultiBinding>
              </RadioButton.IsChecked>
            </RadioButton>
            <Label Grid.Column="1" Content="[Media.ListLarge]" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}" VerticalAlignment="Center">
              <Label.Opacity>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {2} : ({1} ? {4} : {3})">
                  <Binding ElementName="ListLarge" Path="HasFocus"/>
                  <Binding ElementName="ListLarge" Path="!IsEnabled"/>
                  <Binding Source="1.0"/>
                  <Binding Source="0.5"/>
                  <Binding Source="0.25"/>
                </MultiBinding>
              </Label.Opacity>
            </Label>
            <Grid Grid.Row="1" Grid.Column="1" Height="100">
              <Grid.Width>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                  <Binding ElementName="ListExtendedMediaDetails" Path="IsChecked"/>
                  <Binding Source="210"/>
                  <Binding Source="105"/>
                </MultiBinding>
              </Grid.Width>
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="15"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.Opacity>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {2} : ({1} ? {4} : {3})">
                  <Binding ElementName="ListLarge" Path="HasFocus"/>
                  <Binding ElementName="ListLarge" Path="!IsEnabled"/>
                  <Binding Source="1.0"/>
                  <Binding Source="0.5"/>
                  <Binding Source="0.25"/>
                </MultiBinding>
              </Grid.Opacity>
              <Border x:Name="BaseLarge" Grid.Row="0" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border.Background>
                  <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                    <Binding ElementName="ListLarge" Path="IsChecked"/>
                    <Binding Source="{ThemeResource NereusColorLight}"/>
                    <Binding Source="#FFFFFFFF"/>
                  </MultiBinding>
                </Border.Background>
              </Border>
              <Border Grid.Row="1" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseLarge, Path=Background}"/>
              <Border Grid.Row="2" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseLarge, Path=Background}"/>
              <Border Grid.Row="3" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseLarge, Path=Background}"/>
              <Border Grid.Row="4" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseLarge, Path=Background}"/>
              <Border Grid.Row="0" Grid.Column="1" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseLarge, Path=Background}"/>
              <Border Grid.Row="1" Grid.Column="1" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseLarge, Path=Background}"/>
              <Border Grid.Row="2" Grid.Column="1" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseLarge, Path=Background}"/>
              <Border Grid.Row="3" Grid.Column="1" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseLarge, Path=Background}"/>
              <Border Grid.Row="4" Grid.Column="1" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseLarge, Path=Background}"/>
            </Grid>
          </Grid>

        </Grid>

        <!-- GRID VIEW -->
        <Grid Grid.Column="2" Margin="5,0,10,10">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>

          <Grid Grid.Row="0" Grid.Column="0">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <RadioButton x:Name="Grid" HorizontalAlignment="Center" GroupName="ViewModes"
                         Command="{Command Source={StaticResource ViewModeModel}, Path=SetViewMode, Parameters={vm:SetViewModeParameter Layout=GridLayout}}">
              <RadioButton.IsChecked>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{GridLayout}">
                  <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
                </MultiBinding>
              </RadioButton.IsChecked>
              <RadioButton.SetFocus>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{GridLayout}">
                  <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
                </MultiBinding>
              </RadioButton.SetFocus>
            </RadioButton>

            <Label Grid.Column="1" Content="[Media.LargeGrid]" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}" 
                   FontFamily="SegoeUIBold" VerticalAlignment="Center">
              <Label.Opacity>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                  <Binding ElementName="Grid" Path="HasFocus"/>
                  <Binding Source="1.0"/>
                  <Binding Source="0.5"/>
                </MultiBinding>
              </Label.Opacity>
            </Label>
          </Grid>

          <Grid Grid.Row="1" Grid.Column="0" Margin="10,10,0,0">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            
            <RadioButton x:Name="Poster" GroupName="GridViewModes" HorizontalAlignment="Center" IsEnabled="{Binding ElementName=Grid, Path=IsChecked}"
                         Command="{Command Source={StaticResource ViewModeModel}, Path=SetViewMode, Parameters={vm:SetViewModeParameter Layout=GridLayout, Size=Large}}">
              <RadioButton.IsChecked>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{GridLayout} &amp;&amp; {1} == {LayoutSize}.{Large}">
                  <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
                  <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize"/>
                </MultiBinding>
              </RadioButton.IsChecked>
              <RadioButton.Opacity>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                  <Binding ElementName="Poster" Path="IsEnabled"/>
                  <Binding Source="1.0"/>
                  <Binding Source="0.5"/>
                </MultiBinding>
              </RadioButton.Opacity>
            </RadioButton>

            <Label Grid.Column="1" Content="[Media.PosterLayout]" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}" VerticalAlignment="Center">
              <Label.Opacity>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {2} : ({1} ? {4} : {3})">
                  <Binding ElementName="Poster" Path="HasFocus"/>
                  <Binding ElementName="Poster" Path="!IsEnabled"/>
                  <Binding Source="1.0"/>
                  <Binding Source="0.5"/>
                  <Binding Source="0.25"/>
                </MultiBinding>
              </Label.Opacity>
            </Label>
            <UniformGrid Grid.Row="1" Grid.Column="1" Rows="2" Height="100" HorizontalAlignment="Left">
              <UniformGrid.Width>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                  <Binding ElementName="GridExtendedMediaDetails" Path="IsChecked"/>
                  <Binding Source="210"/>
                  <Binding Source="105"/>
                </MultiBinding>
              </UniformGrid.Width>
              <UniformGrid.Columns>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                  <Binding ElementName="GridExtendedMediaDetails" Path="IsChecked"/>
                  <Binding Source="6"/>
                  <Binding Source="3"/>
                </MultiBinding>
              </UniformGrid.Columns>
              <UniformGrid.Opacity>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {2} : ({1} ? {4} : {3})">
                  <Binding ElementName="Poster" Path="HasFocus"/>
                  <Binding ElementName="Poster" Path="!IsEnabled"/>
                  <Binding Source="1.0"/>
                  <Binding Source="0.5"/>
                  <Binding Source="0.25"/>
                </MultiBinding>
              </UniformGrid.Opacity>
              <Border x:Name="BasePoster" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border.Background>
                  <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                    <Binding ElementName="Poster" Path="IsChecked"/>
                    <Binding Source="{ThemeResource NereusColorLight}"/>
                    <Binding Source="#FFFFFFFF"/>
                  </MultiBinding>
                </Border.Background>
              </Border>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BasePoster, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BasePoster, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BasePoster, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BasePoster, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BasePoster, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BasePoster, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BasePoster, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BasePoster, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BasePoster, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BasePoster, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BasePoster, Path=Background}"/>
            </UniformGrid>
          </Grid>

          <Grid Grid.Row="2" Grid.Column="0" Margin="10,10,0,0">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <RadioButton x:Name="Thumbnail" GroupName="GridViewModes" HorizontalAlignment="Center" IsEnabled="{Binding ElementName=Grid, Path=IsChecked}"
                         Command="{Command Source={StaticResource ViewModeModel}, Path=SetViewMode, Parameters={vm:SetViewModeParameter Layout=GridLayout, Size=Small}}">
              <RadioButton.IsChecked>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{GridLayout} &amp;&amp; {1} == {LayoutSize}.{Small}">
                  <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
                  <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize"/>
                </MultiBinding>
              </RadioButton.IsChecked>
              <RadioButton.Opacity>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                  <Binding ElementName="Thumbnail" Path="IsEnabled"/>
                  <Binding Source="1.0"/>
                  <Binding Source="0.5"/>
                </MultiBinding>
              </RadioButton.Opacity>
            </RadioButton>
            <Label Grid.Column="1" Content="[Media.ThumbnailLayout]" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}" VerticalAlignment="Center">
              <Label.Opacity>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {2} : ({1} ? {4} : {3})">
                  <Binding ElementName="Thumbnail" Path="HasFocus"/>
                  <Binding ElementName="Thumbnail" Path="!IsEnabled"/>
                  <Binding Source="1.0"/>
                  <Binding Source="0.5"/>
                  <Binding Source="0.25"/>
                </MultiBinding>
              </Label.Opacity>
            </Label>
            <UniformGrid Grid.Row="1" Grid.Column="1" Rows="3" Columns="2"  Height="100" HorizontalAlignment="Left">
              <UniformGrid.Width>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                  <Binding ElementName="GridExtendedMediaDetails" Path="IsChecked"/>
                  <Binding Source="210"/>
                  <Binding Source="105"/>
                </MultiBinding>
              </UniformGrid.Width>
              <UniformGrid.Columns>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                  <Binding ElementName="GridExtendedMediaDetails" Path="IsChecked"/>
                  <Binding Source="4"/>
                  <Binding Source="2"/>
                </MultiBinding>
              </UniformGrid.Columns>
              <UniformGrid.Opacity>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {2} : ({1} ? {4} : {3})">
                  <Binding ElementName="Thumbnail" Path="HasFocus"/>
                  <Binding ElementName="Thumbnail" Path="!IsEnabled"/>
                  <Binding Source="1.0"/>
                  <Binding Source="0.5"/>
                  <Binding Source="0.25"/>
                </MultiBinding>
              </UniformGrid.Opacity>
              <Border x:Name="BaseThumbnail" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border.Background>
                  <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                    <Binding ElementName="Thumbnail" Path="IsChecked"/>
                    <Binding Source="{ThemeResource NereusColorLight}"/>
                    <Binding Source="#FFFFFFFF"/>
                  </MultiBinding>
                </Border.Background>
              </Border>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseThumbnail, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseThumbnail, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseThumbnail, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseThumbnail, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseThumbnail, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseThumbnail, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseThumbnail, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseThumbnail, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseThumbnail, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseThumbnail, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseThumbnail, Path=Background}"/>
            </UniformGrid>
          </Grid>

          <Grid Grid.Row="3" Grid.Column="0" Margin="10,10,0,0">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <RadioButton x:Name="Banner" GroupName="GridViewModes" HorizontalAlignment="Center" IsEnabled="{Binding ElementName=Grid, Path=IsChecked}"
                         Command="{Command Source={StaticResource ViewModeModel}, Path=SetViewMode, Parameters={vm:SetViewModeParameter Layout=GridLayout, Size=Medium}}">
              <RadioButton.IsChecked>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{GridLayout} &amp;&amp; {1} == {LayoutSize}.{Medium}">
                  <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
                  <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize"/>
                </MultiBinding>
              </RadioButton.IsChecked>
              <RadioButton.Opacity>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                  <Binding ElementName="Banner" Path="IsEnabled"/>
                  <Binding Source="1.0"/>
                  <Binding Source="0.5"/>
                </MultiBinding>
              </RadioButton.Opacity>
            </RadioButton>
            
            <Label Grid.Column="1" Content="[Media.BannerLayout]" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}" VerticalAlignment="Center">
              <Label.Opacity>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {2} : ({1} ? {4} : {3})">
                  <Binding ElementName="Banner" Path="HasFocus"/>
                  <Binding ElementName="Banner" Path="!IsEnabled"/>
                  <Binding Source="1.0"/>
                  <Binding Source="0.5"/>
                  <Binding Source="0.25"/>
                </MultiBinding>
              </Label.Opacity>
            </Label>
            <UniformGrid Grid.Row="1" Grid.Column="1" Rows="4" Height="100" HorizontalAlignment="Left">
              <UniformGrid.Width>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                  <Binding ElementName="GridExtendedMediaDetails" Path="IsChecked"/>
                  <Binding Source="210"/>
                  <Binding Source="105"/>
                </MultiBinding>
              </UniformGrid.Width>
              <UniformGrid.Opacity>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {2} : ({1} ? {4} : {3})">
                  <Binding ElementName="Banner" Path="HasFocus"/>
                  <Binding ElementName="Banner" Path="!IsEnabled"/>
                  <Binding Source="1.0"/>
                  <Binding Source="0.5"/>
                  <Binding Source="0.25"/>
                </MultiBinding>
              </UniformGrid.Opacity>
              <Border x:Name="BaseBanner" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                <Border.Background>
                  <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                    <Binding ElementName="Banner" Path="IsChecked"/>
                    <Binding Source="{ThemeResource NereusColorLight}"/>
                    <Binding Source="#FFFFFFFF"/>
                  </MultiBinding>
                </Border.Background>
              </Border>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseBanner, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseBanner, Path=Background}"/>
              <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseBanner, Path=Background}"/>
            </UniformGrid>
          </Grid>

        </Grid>

        <!-- COVER VIEW -->
        <Grid Grid.Column="4" Margin="5,0,10,10">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <RadioButton x:Name="Coverflow" HorizontalAlignment="Center" GroupName="ViewModes"
                       Command="{Command Source={StaticResource ViewModeModel}, Path=SetViewMode, Parameters={vm:SetViewModeParameter Layout=CoverLayout, Size=Small}}">
            <RadioButton.IsChecked>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{CoverLayout}">
                <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
              </MultiBinding>
            </RadioButton.IsChecked>
            <RadioButton.SetFocus>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{CoverLayout}">
                <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
              </MultiBinding>
            </RadioButton.SetFocus>
          </RadioButton>

          <Label Grid.Column="1" Content="[Media.CoverLayout]" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}"
                 FontFamily="SegoeUIBold" VerticalAlignment="Center">
            <Label.Opacity>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {2} : ({1} ? {3} : {4})">
                <Binding ElementName="Coverflow" Path="HasFocus"/>
                <Binding ElementName="Coverflow" Path="IsChecked"/>
                <Binding Source="1.0"/>
                <Binding Source="0.5"/>
                <Binding Source="0.25"/>
              </MultiBinding>
            </Label.Opacity>
          </Label>
          <UniformGrid Grid.Row="1" Grid.Column="1" Columns="5" Height="70" Width="210" HorizontalAlignment="Left" Margin="0,60,0,0">
            <UniformGrid.Opacity>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {2} : ({1} ? {4} : {3})">
                <Binding ElementName="Coverflow" Path="HasFocus"/>
                <Binding ElementName="Coverflow" Path="IsChecked"/>
                <Binding Source="1.0"/>
                <Binding Source="0.5"/>
                <Binding Source="0.25"/>
              </MultiBinding>
            </UniformGrid.Opacity>
            <Border x:Name="BaseCoverflow" Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <Border.Background>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                  <Binding ElementName="Coverflow" Path="IsChecked"/>
                  <Binding Source="{ThemeResource NereusColorLight}"/>
                  <Binding Source="#FFFFFFFF"/>
                </MultiBinding>
              </Border.Background>
            </Border>
            <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseCoverflow, Path=Background}"/>
            <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseCoverflow, Path=Background}"/>
            <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseCoverflow, Path=Background}"/>
            <Border Margin="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{Binding ElementName=BaseCoverflow, Path=Background}"/>
          </UniformGrid>
        </Grid>

        <!--###################### EXTENDED DETAILS #######################-->

        <!-- LIST MEDIA DETAILS -->
        <Grid Grid.Column="0" Grid.Row="2" Margin="5,5,10,10">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <CheckBox x:Name="ListExtendedMediaDetails" HorizontalAlignment="Center" IsChecked="{Binding Source={StaticResource ViewModeModel}, Path=AdditionalProperties[extEnableListDetails].Value, Mode=TwoWay}"/>
          <Label Grid.Column="1" Content="[Media.ExtendedMediaDetails]" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}" VerticalAlignment="Center">
            <Label.Opacity>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                <Binding ElementName="ListExtendedMediaDetails" Path="HasFocus"/>
                <Binding Source="1.0"/>
                <Binding Source="0.5"/>
              </MultiBinding>
            </Label.Opacity>
          </Label>
          <UniformGrid Grid.Row="1" Grid.Column="1" Rows="1" Height="110" Width="210" HorizontalAlignment="Left" Margin="5,0,0,0">
            <UniformGrid.Columns>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                <Binding ElementName="ListExtendedMediaDetails" Path="IsChecked"/>
                <Binding Source="1"/>
                <Binding Source="2"/>
              </MultiBinding>
            </UniformGrid.Columns>
            <UniformGrid.Opacity>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                <Binding ElementName="ListExtendedMediaDetails" Path="HasFocus"/>
                <Binding Source="1.0"/>
                <Binding Source="0.5"/>
              </MultiBinding>
            </UniformGrid.Opacity>
            <Grid Margin="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#FFFFFFFF">
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid Width="95" Height="13" HorizontalAlignment="Left" VerticalAlignment="Bottom" 
                    IsVisible="{Binding ElementName=ListExtendedMediaDetails, Path=IsChecked}">
                <Grid.Background>
                  <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                    <Binding ElementName="ListExtendedMediaDetails" Path="HasFocus"/>
                    <Binding Source="{ThemeResource NereusColorLight}"/>
                    <Binding Source="{ThemeResource NereusColorMedium}"/>
                  </MultiBinding>
                </Grid.Background>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="#FFFFFFFF" Margin="10,0,0,0"/>
                <Border Grid.Column="1" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="#FFFFFFFF" Margin="5,0,5,0"/>
                <Border Grid.Column="2" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="#FFFFFFFF" Margin="0,0,10,0"/>
              </Grid>
            </Grid>  
            <Grid Margin="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{ThemeResource NereusColorLight}">
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Border Height="45" Width="32" HorizontalAlignment="Right" VerticalAlignment="Bottom" Background="#FFFFFFFF" Margin="0,0,5,8"/>
              <Border Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="#FFFFFFFF" Margin="6,10,5,0"/>
              <Border Height="5" Width="40" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="#FFFFFFFF" Margin="0,20,50,0"/>
              <Border Height="5" Width="40" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="#FFFFFFFF" Margin="0,30,50,0"/>
              <Border Height="5" Width="40" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="#FFFFFFFF" Margin="0,40,50,0"/>
            </Grid>
          </UniformGrid>
        </Grid>

        <!-- GRID MEDIA DETAILS -->
        <Grid Grid.Column="2" Grid.Row="2" Margin="10,5,10,10">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <CheckBox x:Name="GridExtendedMediaDetails" HorizontalAlignment="Center" IsChecked="{Binding Source={StaticResource ViewModeModel}, Path=AdditionalProperties[extEnableGridDetails].Value, Mode=TwoWay}"/>
          <Label Grid.Column="1" Content="[Media.ExtendedMediaDetails]" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}" VerticalAlignment="Center">
            <Label.Opacity>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                <Binding ElementName="GridExtendedMediaDetails" Path="HasFocus"/>
                <Binding Source="1.0"/>
                <Binding Source="0.5"/>
              </MultiBinding>
            </Label.Opacity>
          </Label>
          <UniformGrid Grid.Row="1" Grid.Column="1" Rows="1" Height="110" Width="210" HorizontalAlignment="Left" Margin="5,0,0,0">
            <UniformGrid.Columns>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                <Binding ElementName="GridExtendedMediaDetails" Path="IsChecked"/>
                <Binding Source="1"/>
                <Binding Source="2"/>
              </MultiBinding>
            </UniformGrid.Columns>
            <UniformGrid.Opacity>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                <Binding ElementName="GridExtendedMediaDetails" Path="HasFocus"/>
                <Binding Source="1.0"/>
                <Binding Source="0.5"/>
              </MultiBinding>
            </UniformGrid.Opacity>
            <Grid Margin="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#FFFFFFFF">
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid Width="95" Height="13" HorizontalAlignment="Left" VerticalAlignment="Bottom" 
                    IsVisible="{Binding ElementName=GridExtendedMediaDetails, Path=IsChecked}">
                <Grid.Background>
                  <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                    <Binding ElementName="GridExtendedMediaDetails" Path="HasFocus"/>
                    <Binding Source="{ThemeResource NereusColorLight}"/>
                    <Binding Source="{ThemeResource NereusColorMedium}"/>
                  </MultiBinding>
                </Grid.Background>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Column="0" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="#FFFFFFFF" Margin="10,0,0,0"/>
                <Border Grid.Column="1" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="#FFFFFFFF" Margin="5,0,5,0"/>
                <Border Grid.Column="2" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="#FFFFFFFF" Margin="0,0,10,0"/>
              </Grid>
            </Grid>
            <Grid Margin="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="{ThemeResource NereusColorLight}">
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Border Height="45" Width="32" HorizontalAlignment="Right" VerticalAlignment="Bottom" Background="#FFFFFFFF" Margin="0,0,5,8"/>
              <Border Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="#FFFFFFFF" Margin="6,10,5,0"/>
              <Border Height="5" Width="40" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="#FFFFFFFF" Margin="0,20,50,0"/>
              <Border Height="5" Width="40" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="#FFFFFFFF" Margin="0,30,50,0"/>
              <Border Height="5" Width="40" HorizontalAlignment="Stretch" VerticalAlignment="Top" Background="#FFFFFFFF" Margin="0,40,50,0"/>
            </Grid>
          </UniformGrid>
        </Grid>

        <!-- COVERFLOW MEDIA DETAILS -->
        <Grid Grid.Column="4" Grid.Row="2" Margin="10,5,10,10">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <CheckBox x:Name="CoverExtendedMediaDetails" HorizontalAlignment="Center" IsChecked="{Binding Source={StaticResource ViewModeModel}, Path=AdditionalProperties[extEnableCoverDetails].Value, Mode=TwoWay}"/>
          <Label Grid.Column="1" Content="[Media.ExtendedMediaDetails]" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}" VerticalAlignment="Center">
            <Label.Opacity>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                <Binding ElementName="CoverExtendedMediaDetails" Path="HasFocus"/>
                <Binding Source="1.0"/>
                <Binding Source="0.5"/>
              </MultiBinding>
            </Label.Opacity>
          </Label>
          <UniformGrid Grid.Row="1" Grid.Column="1" Columns="1" Rows="2" Height="110" Width="210" HorizontalAlignment="Left" Margin="5,0,0,0">
            <UniformGrid.Opacity>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                <Binding ElementName="CoverExtendedMediaDetails" Path="HasFocus"/>
                <Binding Source="1.0"/>
                <Binding Source="0.5"/>
              </MultiBinding>
            </UniformGrid.Opacity>
            <Grid Margin="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <Grid.RowDefinitions>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" IsVisible="{Binding ElementName=CoverExtendedMediaDetails, Path=!IsChecked}">
                <Grid.Background>
                  <LinearGradientBrush EndPoint="0,0.5" StartPoint="1,0.5">
                    <GradientStop Color="#00000000" Offset="0" />
                    <GradientStop Color="{ThemeResource NereusColorMedium}" Offset="0.25" />
                    <GradientStop Color="{ThemeResource NereusColorMedium}" Offset="0.75" />
                    <GradientStop Color="#00000000" Offset="1" />
                  </LinearGradientBrush>
                </Grid.Background>
                <Grid.RowDefinitions>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="*"/>
                  <RowDefinition Height="*"/>
                </Grid.RowDefinitions>
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>
                <Border Grid.Row="0" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="#FFFFFFFF" Margin="60,10,60,0"/>
                <Border Grid.Row="1" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="#FFFFFFFF" Margin="60,0,60,0"/>
                <Border Grid.Row="2" Height="5" HorizontalAlignment="Stretch" VerticalAlignment="Center" Background="#FFFFFFFF" Margin="60,0,60,10"/>
              </Grid>              
            </Grid>

            <Grid Margin="2" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Background="#FFFFFFFF"/>
          </UniformGrid>
        </Grid>

        <!--###################### WATCHED FLAGS #######################-->
        
        <!-- LIST WATCHED FLAGS -->
        <Grid Grid.Column="0" Grid.Row="4" Margin="5,5,50,10">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <CheckBox x:Name="ListWatchedFlags" HorizontalAlignment="Center" IsChecked="{Binding Source={StaticResource ViewModeModel}, Path=AdditionalProperties[extEnableListWatchFlags].Value, Mode=TwoWay}"/>
          <Label Grid.Column="1" Content="[Media.ShowWatchedFlags]" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}" VerticalAlignment="Center">
            <Label.Opacity>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                <Binding ElementName="ListWatchedFlags" Path="HasFocus"/>
                <Binding Source="1.0"/>
                <Binding Source="0.5"/>
              </MultiBinding>
            </Label.Opacity>
          </Label>
          <Image Grid.Row="1" Grid.Column="1" Height="80" Width="170" Stretch="Uniform" HorizontalAlignment="Right">
            <Image.Source>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                <Binding ElementName="ListWatchedFlags" Path="IsChecked"/>
                <Binding Source="ViewMode\watched.focus.png"/>
                <Binding Source="ViewMode\watched.nofocus.png"/>
              </MultiBinding>
            </Image.Source>
            <Image.Opacity>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                <Binding ElementName="ListWatchedFlags" Path="HasFocus"/>
                <Binding Source="1.0"/>
                <Binding Source="0.5"/>
              </MultiBinding>
            </Image.Opacity>
          </Image>
        </Grid>

        <!-- GRID WATCHED FLAGS -->
        <Grid Grid.Column="2" Grid.Row="4" Margin="5,5,10,0">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <CheckBox x:Name="GridWatchedFlags" HorizontalAlignment="Center" IsChecked="{Binding Source={StaticResource ViewModeModel}, Path=AdditionalProperties[extEnableGridWatchFlags].Value, Mode=TwoWay}"/>
          <Label Grid.Column="1" Content="[Media.ShowWatchedFlags]" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}" VerticalAlignment="Center">
            <Label.Opacity>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                <Binding ElementName="GridWatchedFlags" Path="HasFocus"/>
                <Binding Source="1.0"/>
                <Binding Source="0.5"/>
              </MultiBinding>
            </Label.Opacity>
          </Label>

          <Image Grid.Row="1" Grid.Column="1" Height="80" Width="150" Stretch="Uniform" HorizontalAlignment="Center" Margin="10,0,0,0" Source="ViewMode\watched.flag.png">
            <Image.Opacity>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                <Binding ElementName="GridWatchedFlags" Path="HasFocus"/>
                <Binding Source="1.0"/>
                <Binding Source="0.5"/>
              </MultiBinding>
            </Image.Opacity>
          </Image>

          <Control HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Row="1" Grid.Column="1" Margin="0,0,54,0" Template="{StaticResource WatchedFlag_Template}"
                   IsVisible="{Binding ElementName=GridWatchedFlags, Path=IsChecked}">
            <Control.Opacity>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                <Binding ElementName="GridWatchedFlags" Path="HasFocus"/>
                <Binding Source="1.0"/>
                <Binding Source="0.5"/>
              </MultiBinding>
            </Control.Opacity>
          </Control>
          <Control HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Row="1" Grid.Column="1" Margin="0,0,110,0" Template="{StaticResource WatchedFlag_Template}"
                   IsVisible="{Binding ElementName=GridWatchedFlags, Path=IsChecked}">
            <Control.Opacity>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                <Binding ElementName="GridWatchedFlags" Path="HasFocus"/>
                <Binding Source="1.0"/>
                <Binding Source="0.5"/>
              </MultiBinding>
            </Control.Opacity>
          </Control>

        </Grid>

        <!-- COVERFLOW WATCHED FLAGS -->
        <Grid Grid.Column="4" Grid.Row="4" Margin="10,5,10,0">
          <Grid.RowDefinitions>
            <RowDefinition Height="Auto"/>
            <RowDefinition Height="Auto"/>
          </Grid.RowDefinitions>
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <CheckBox x:Name="CoverflowWatchedFlags" HorizontalAlignment="Center" IsChecked="{Binding Source={StaticResource ViewModeModel}, Path=AdditionalProperties[extEnableCoverWatchFlags].Value, Mode=TwoWay}"/>
          <Label Grid.Column="1" Content="[Media.ShowWatchedFlags]" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}" VerticalAlignment="Center">
            <Label.Opacity>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                <Binding ElementName="CoverflowWatchedFlags" Path="HasFocus"/>
                <Binding Source="1.0"/>
                <Binding Source="0.5"/>
              </MultiBinding>
            </Label.Opacity>
          </Label>
          <Image Grid.Row="1" Grid.Column="1" Height="80" Width="150" Stretch="Uniform" HorizontalAlignment="Center" Margin="10,0,0,0" Source="ViewMode\watched.flag.png">
            <Image.Opacity>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                <Binding ElementName="CoverflowWatchedFlags" Path="HasFocus"/>
                <Binding Source="1.0"/>
                <Binding Source="0.5"/>
              </MultiBinding>
            </Image.Opacity>
          </Image>

          <Control HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Row="1" Grid.Column="1" Margin="0,0,51,0" Template="{StaticResource WatchedFlag_Template}"
                   IsVisible="{Binding ElementName=CoverflowWatchedFlags, Path=IsChecked}">
            <Control.Opacity>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                <Binding ElementName="CoverflowWatchedFlags" Path="HasFocus"/>
                <Binding Source="1.0"/>
                <Binding Source="0.5"/>
              </MultiBinding>
            </Control.Opacity>
          </Control>
          <Control HorizontalAlignment="Right" VerticalAlignment="Top" Grid.Row="1" Grid.Column="1" Margin="0,0,108,0" Template="{StaticResource WatchedFlag_Template}"
                   IsVisible="{Binding ElementName=CoverflowWatchedFlags, Path=IsChecked}">
            <Control.Opacity>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                <Binding ElementName="CoverflowWatchedFlags" Path="HasFocus"/>
                <Binding Source="1.0"/>
                <Binding Source="0.5"/>
              </MultiBinding>
            </Control.Opacity>
          </Control>

        </Grid>

        <Grid Grid.Column="1" Grid.RowSpan="5" Background="White" VerticalAlignment="Stretch" Margin="0,-10,0,-10" Opacity="0.5" Width="1"/>
        <Grid Grid.Column="3" Grid.RowSpan="5" Background="White" VerticalAlignment="Stretch" Margin="0,-10,0,-10" Opacity="0.5" Width="1"/>

        <Grid Grid.Row="1" Grid.ColumnSpan="5" Background="White" HorizontalAlignment="Stretch" Margin="-10,0,-10,0" Opacity="0.5" Height="1"/>
        <Grid Grid.Row="3" Grid.ColumnSpan="5" Background="White" HorizontalAlignment="Stretch" Margin="-10,0,-10,0" Opacity="0.5" Height="1"/>

      </Grid>
    </ControlTemplate>
  </Include.Resources>
</Include>
