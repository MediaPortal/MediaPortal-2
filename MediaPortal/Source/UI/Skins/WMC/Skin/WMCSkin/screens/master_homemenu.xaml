<?xml version="1.0" encoding="utf-8"?>

<!--
This is the master template for standard menu screens:
A header text, left the menu, under the menu a small video preview,
at the right side the content pane and at the bottom the current play control.

Usage:

  <Include
      xmlns="www.team-mediaportal.com/2008/mpf/directx"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      Source="screens\master_menu.xaml">
    <Include.Resources>
      <ResourceWrapper x:Key="Header_Text">
        [Header text]
      </ResourceWrapper>
      <ControlTemplate x:Key="Contents_Template">
        [UI element to be displayed in the content area]
      </ControlTemplate>
    </Include.Resources>
  </Include>

Parameters which have to be accessible by a DynamicResource lookup:
 - Header_Text (String): The text to be displayed as header
 - Contents_Template (ConrolTemplate): Template for element to be displayed
   in the content area at the right side
-->

<Include
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Source="screens\master_home.xaml"
    xmlns:mp_special_controls="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Controls;assembly=SkinEngine"
    xmlns:wmc="clr-namespace:MediaPortal.UiComponents.WMCSkin.Controls;assembly=WMCSkin"
    xmlns:fanart="clr-namespace:MediaPortal.Extensions.UserServices.FanArtService.Client;assembly=FanArtService.Client"
    xmlns:wmc_markup_extensions="clr-namespace:MediaPortal.UiComponents.WMCSkin.MarkupExtensions;assembly=WMCSkin"
    xmlns:imagesources="clr-namespace:MediaPortal.UI.SkinEngine.Controls.ImageSources;assembly=SkinEngine">
  <Include.Resources>

    <!--ControlTemplate x:Key="FanArtBackground_Template">
      <Image Stretch="Fill" Opacity="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].FanartOverlayOpacity}" Source="Background_GridView.png"/>
    </-->

    <ControlTemplate x:Key="FanArtBackgroundHome_Template">
      <ControlTemplate.Resources>
        <fanart:FanArtImageSourceConverter x:Key="FanArtImageSourceConverter"/>
        <Model x:Key="FanArtBackgroundModel" Id="8F42C8E9-E8A3-475C-A50A-99E1E644DC91"/>
        <Model x:Key="SkinSettingsModel" Id="13961014-16C4-4361-9751-8E2C585EFD44"/>
      </ControlTemplate.Resources>
      <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch" >
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="20*"/>
          <ColumnDefinition Width="80*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="80*"/>
          <RowDefinition Height="20*"/>
        </Grid.RowDefinitions>

        <Grid Grid.Column="1" Grid.Row="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
          <Grid.Background>
            <VideoBrush Stream="0"/>
          </Grid.Background>
        </Grid>

        <Image x:Name="FanArtImageBackground" Stretch="UniformToFill" Grid.Column="1" Grid.Row="0"
               IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableFanart}">
          <Image.Source>
            <imagesources:ImageSourceWrapper Delay="0.5" DelayInOut="true" Transition="transitions\dissolve" TransitionDuration="0.5"
                   Source="{Binding Source={StaticResource FanArtBackgroundModel}, Path=ImageSource, Converter={StaticResource FanArtImageSourceConverter}, ConverterParameter=FanArt;1200;750;False}"/>
          </Image.Source>
        </Image>
        <Image Stretch="Fill" Source="Background_Home.png" Grid.ColumnSpan="2" Grid.RowSpan="2" Opacity="1"/>
      </Grid>
    </ControlTemplate>

    <!-- Background Manager for menu hovers -->
    <Model x:Key="BackgroundManagerModel" Id="1F4CAEDE-7108-483d-B5C8-18BEC7EC58E5"/>
    <Model x:Key="HomeMenuModel" Id="2EAA2DAB-241F-432F-A487-CDD35CCD4309"/>
    <Model x:Key="HomeContentModel" Id="24BB1BBE-A3B3-474A-8D55-C37EBE182F6C"/>

    <!-- Header has to be defined by the includer: "Header_Text" -->

    <!-- Client_Template -->
    <ControlTemplate x:Key="Client_Template">
      <Grid x:Name="MainLayoutPanel" Margin="300,50,0,10" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Opacity="0">

        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
          <RowDefinition Height="505"/>
          <RowDefinition Height="480"/>
        </Grid.RowDefinitions>
        <Grid.Resources>
          <Model x:Key="MenuModel" Id="9E9D0CD9-4FDB-4c0f-A0C4-F356E151BDE0"/>
          <Model x:Key="MouseModel" Id="CA6428A7-A6E2-4dd3-9661-F89CEBAF8E62"/>
        </Grid.Resources>
        <Grid.Triggers>
          <DataTrigger Binding="{Binding Source={StaticResource HomeMenuModel},Path=EnableMainMenuAnimations}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard x:Name="BeginMainMenuFadeAnimation" Storyboard="{ThemeResource MainMenuFadeAnimation}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <StopStoryboard BeginStoryboardName="BeginMainMenuFadeAnimation" />
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Grid.Triggers>

        <ListView x:Name="MainMenu" Grid.Column="0" Grid.Row="1" Grid.RowSpan="2"  Style="{ThemeResource MyMainMenuListViewStyle}"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0"
                  ItemsSource="{Binding Source={StaticResource HomeMenuModel},Path=NestedMenuItems,Mode=OneTime}">
          <ListView.Resources>
            <CommandBridge x:Key="Menu_Command" Command="{Binding Path=Command,Mode=OneTime}"/>
          </ListView.Resources>
        </ListView>

        <Grid x:Name="SubItemsFadeControl" Grid.Row="2" Grid.Column="0" Opacity="0" Panel.ZIndex="100"
              HorizontalAlignment="Stretch" VerticalAlignment="Top">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>

          <Grid.RenderTransform>
            <TranslateTransform Y="0"/>
          </Grid.RenderTransform>

          <Grid.Triggers>
            <DataTrigger Binding="{Binding Source={StaticResource HomeMenuModel},Path=EnableSubMenuAnimations}" Value="True">
              <DataTrigger.EnterActions>
                <BeginStoryboard x:Name="BeginFadeAnimation" Storyboard="{ThemeResource SubItemsFadeAnimation}"/>
              </DataTrigger.EnterActions>
              <DataTrigger.ExitActions>
                <StopStoryboard BeginStoryboardName="BeginFadeAnimation" />
              </DataTrigger.ExitActions>
            </DataTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding Source={StaticResource HomeMenuModel},Path=EnableSubMenuAnimations}" Value="True"/>
                <Condition Binding="{Binding Source={StaticResource HomeMenuModel},Path=ScrollDirection}" Value="Up"/>
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard x:Name="BeginTransformDownAnimation" Storyboard="{ThemeResource SubItemsTransformAnimationDown}"/>
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <StopStoryboard BeginStoryboardName="BeginTransformDownAnimation" />
              </MultiTrigger.ExitActions>
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding Source={StaticResource HomeMenuModel},Path=EnableSubMenuAnimations}" Value="True"/>
                <Condition Binding="{Binding Source={StaticResource HomeMenuModel},Path=ScrollDirection}" Value="Down"/>
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard x:Name="BeginTransformUpAnimation" Storyboard="{ThemeResource SubItemsTransformAnimationUp}"/>
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <StopStoryboard BeginStoryboardName="BeginTransformUpAnimation" />
              </MultiTrigger.ExitActions>
            </MultiTrigger>

          </Grid.Triggers>

          <ListView Margin="-1240,0,0,0" x:Name="SubItemsListViewHome" IsEnabled="{Binding Source={StaticResource HomeContentModel}, Path=!IsContentFocused}"
                    ItemsSource="{Binding Source={StaticResource HomeMenuModel},Path=SubItems,Mode=OneTime}"
                    Style="{ThemeResource SubMenuListViewStyle}"
                    SelectionChanged="{CommandStencil Source={StaticResource HomeMenuModel}, Path=SetSelectedItem}">
            <ListView.Resources>
              <CommandBridge x:Key="Menu_Command" Command="{Binding Path=Command,Mode=OneTime}"/>
            </ListView.Resources>
            <ListView.Triggers>
              <Trigger Property="IsEnabled" Value="True">
                <Setter TargetName="HomeContentGrid" Property="IsEnabled" Value="False"/>
                </Trigger>
            </ListView.Triggers>
          </ListView>
          <Image x:Name="HomeMenuIndicator" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="380,0,0,0"
                 IsVisible="{Binding Source={StaticResource HomeContentModel}, Path=IsContentFocused}"
                 Stretch="Uniform" Width="40" Source="i-indicator.png" Opacity="0.35">
            <Image.Resources>
              <Storyboard x:Key="InfoBlinkStoryboard_" RepeatBehavior="Forever" >
                <DoubleAnimationUsingKeyFrames Storyboard.TargetName="HomeMenuIndicator" Storyboard.TargetProperty="Opacity" 
                                               AccelerationRatio="0.2" DecelerationRatio="0.2"
                                               BeginTime="00:01:00" RepeatBehavior="Forever" FillBehavior="HoldEnd">
                  <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:01.5" Value="0.35"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:03" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </Image.Resources>
            <Image.Triggers>
              <Trigger Property="IsVisible" Value="True">
                <Trigger.EnterActions>
                  <BeginStoryboard x:Name="Disabled_BeginStoryBoard_" Storyboard="{ThemeResource InfoBlinkStoryboard_}"/>
                </Trigger.EnterActions>
                <Trigger.ExitActions>
                  <StopStoryboard BeginStoryboardName="Disabled_BeginStoryBoard_"/>
                </Trigger.ExitActions>
              </Trigger>
            </Image.Triggers>
          </Image>
        </Grid>

        <Grid Grid.Row="2" Grid.Column="0" Opacity="1" Panel.ZIndex="99">
          <Grid.Resources>
            <Model x:Key="MouseModel" Id="CA6428A7-A6E2-4dd3-9661-F89CEBAF8E62"/>
          </Grid.Resources>
          <Image x:Name="FocusFrame" Source="Focus.frame.png" 
                 Stretch="Fill" Width="373" Height="210" HorizontalAlignment="Left" Margin="7,-5,0,10"/>
        </Grid>

        <!-- Order matters here: The content grid has to be the last control to fill the rest of the space -->
        <Grid x:Name="ContentPanel" Grid.Row="2" Grid.Column="0" SetFocusPrio="Default">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <Control Margin="10,0,10,10" x:Name="ContentViewer" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Template="{DynamicResource ResourceKey=Contents_Template}" SetFocus="true"/>
        </Grid>

        <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->
        <!--++++++++++++++++++++++++   HOME CONTENT   ++++++++++++++++++++++-->
        <!--++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++++-->

        <Control Grid.Row="1" VerticalAlignment="Top" HorizontalAlignment="Left" Margin="-200,-50,0,0" Width="500">
          <Control.TemplateControl>
            <Include Source="screens\MultiDetailsHome.inc"/>
          </Control.TemplateControl>
        </Control>

        <Grid x:Name="HomeContentGrid" Grid.Row="1" HorizontalAlignment="Right" VerticalAlignment="Top" Margin="0,-150,50,0"
              IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].EnableHomeContent}"
              DataContext="{Binding Source={StaticResource HomeContentModel}}"
              IsKeyboardFocusWithin="{Binding Source={StaticResource HomeContentModel}, Path=IsContentFocused, Mode=OneWayToSource}">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="1000"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="615"/>
          </Grid.RowDefinitions>

          <Grid.Resources>
            <!-- HomeContent Storyboard -->
            <Storyboard x:Key="SlideInStoryboard" FillBehavior="HoldEnd">
              <DoubleAnimation BeginTime="00:00:00" From="600" To="0" Duration="00:00:01.1" DecelerationRatio="0"
                               FillBehavior="HoldEnd" Storyboard.TargetProperty="RenderTransform.X">
                <DoubleAnimation.EasingFunction>
                  <BackEase Amplitude="0.3" EasingMode="EaseOut"/>
                </DoubleAnimation.EasingFunction>
              </DoubleAnimation>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetProperty="Opacity">
                <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.4" Value="0"/>
                <SplineDoubleKeyFrame KeyTime="00:00:01.1" Value="1"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
            <Storyboard x:Key="SlideOutStoryboard" FillBehavior="Stop">
              <DoubleAnimation BeginTime="00:00:00" From="0" To="600" Duration="00:00:00.5" AccelerationRatio="1"
                               FillBehavior="HoldEnd" Storyboard.TargetProperty="RenderTransform.X" >
              </DoubleAnimation>
              <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetProperty="Opacity">
                <SplineDoubleKeyFrame KeyTime="00:00:00.0" Value="1"/>
                <SplineDoubleKeyFrame KeyTime="00:00:00.5" Value="0"/>
              </DoubleAnimationUsingKeyFrames>
            </Storyboard>
          </Grid.Resources>

          <Grid.Triggers>
            <!-- Trigger that sets the focus on the main menu if the focus toggle command is executed from the home content -->
            <DataTrigger Binding="{Binding Source={StaticResource HomeContentModel}, Path=FocusedContentIndex}" Value="-1">
              <DataTrigger.EnterActions>
                <TriggerCommand Command="{Command Source={StaticResource HomeMenuModel}, Path=SetFocus}"/>
              </DataTrigger.EnterActions>
            </DataTrigger>
          </Grid.Triggers>
          
          <!-- To allow the next home content to slide in whilst the previous slides out we use the HomeContentModel
               To alternate the content between HomeContent0Control and HomeContent1Control below -->

          <!-- Home Content 0 -->
          <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.RenderTransform>
              <TranslateTransform X="1200"/>
            </Grid.RenderTransform>
            <Grid.Triggers>
              <!-- Trigger for the HomeContent Storyboard -->
              <DataTrigger Binding="{Binding CurrentContentIndex}" Value="0">
                <DataTrigger.EnterActions>
                  <BeginStoryboard x:Name="Content0BeginSlideInStoryboard" Storyboard="{StaticResource SlideInStoryboard}"/>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                  <BeginStoryboard x:Name="Content0BeginSlideOutStoryboard" Storyboard="{StaticResource SlideOutStoryboard}"/>
                  <StopStoryboard BeginStoryboardName="Content0BeginSlideInStoryboard"/>
                </DataTrigger.ExitActions>
              </DataTrigger>
            </Grid.Triggers>

            <Control x:Name="HomeContent0Control" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                     SetFocusPrio="None" IsEnabled="False"
                     Template="{wmc_markup_extensions:DynamicResourceBindingExtension ResourceKey={Binding Content0ActionId}}">
              <Control.Triggers>

                <!-- Only enable the content when visible to prevent hidden content from getting focus -->
                <DataTrigger Binding="{Binding CurrentContentIndex}" Value="0">
                  <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>

                <!-- Trigger that sets the focus on the home content if the focus toggle command is executed from the main menu -->
                <DataTrigger Binding="{Binding FocusedContentIndex}" Value="0">
                  <Setter Property="SetFocusPrio" Value="Default"/>
                </DataTrigger>

              </Control.Triggers>
            </Control>
            
          </Grid>

          <!-- Home Content 1 -->

          <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.RenderTransform>
              <TranslateTransform X="1200"/>
            </Grid.RenderTransform>
            <Grid.Triggers>
              <!-- Trigger for the HomeContent Storyboard -->
              <DataTrigger Binding="{Binding CurrentContentIndex}" Value="1">
                <DataTrigger.EnterActions>
                  <BeginStoryboard x:Name="Content1BeginSlideInStoryboard" Storyboard="{StaticResource SlideInStoryboard}"/>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                  <BeginStoryboard x:Name="Content1BeginSlideOutStoryboard" Storyboard="{StaticResource SlideOutStoryboard}"/>
                  <StopStoryboard BeginStoryboardName="Content1BeginSlideInStoryboard"/>
                </DataTrigger.ExitActions>
              </DataTrigger>
            </Grid.Triggers>

            <Control x:Name="HomeContent1Control" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                     SetFocusPrio="None" IsEnabled="False"
                     Template="{wmc_markup_extensions:DynamicResourceBindingExtension ResourceKey={Binding Content1ActionId}}">
              <Control.Triggers>

                <!-- Only enable the content when visible to prevent hidden content from getting focus -->
                <DataTrigger Binding="{Binding CurrentContentIndex}" Value="1">
                  <Setter Property="IsEnabled" Value="True"/>
                </DataTrigger>

                <!-- Trigger that sets the focus on the home content if the focus toggle command is executed from the main menu -->
                <DataTrigger Binding="{Binding FocusedContentIndex}" Value="1">
                  <Setter Property="SetFocusPrio" Value="Default"/>
                </DataTrigger>

              </Control.Triggers>
            </Control>
            
          </Grid>

        </Grid>
        
        <Grid x:Name="LeftButtonGrid" Grid.Row="1" HorizontalAlignment="Right" Margin="0,0,10,-140" Panel.ZIndex="1000"
              IsEnabled="{Binding Source={StaticResource HomeContentModel}, Path=!IsContentFocused}"
              IsVisible="{Binding Source={StaticResource MouseModel},Path=IsMouseUsed}">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <Button VerticalAlignment="Bottom" Style="{StaticResource SubMenuNavigateButtonStyle}" Height="50"
                  Command="{Command Source={StaticResource HomeMenuModel},Path=MoveNextSubItem}"/>
        </Grid>

        <Grid x:Name="RightButtonGrid" Grid.Row="1" HorizontalAlignment="Left" Margin="-250,0,0,-180" Panel.ZIndex="1000"
              IsEnabled="{Binding Source={StaticResource HomeContentModel}, Path=!IsContentFocused}"
              IsVisible="{Binding Source={StaticResource MouseModel},Path=IsMouseUsed}">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <Button VerticalAlignment="Bottom" Style="{StaticResource SubMenuNavigateButtonStyle}" Height="50"
                  Command="{Command Source={StaticResource HomeMenuModel},Path=MovePreviousSubItem}">
            <Button.RenderTransform>
              <RotateTransform Angle="180" />
            </Button.RenderTransform>
          </Button>
        </Grid>

        <Grid x:Name="TopButtonGrid" Grid.Row="1" HorizontalAlignment="Left" VerticalAlignment="Top" Margin="160,30,0,-20" Panel.ZIndex="1000"
              IsEnabled="{Binding Source={StaticResource HomeContentModel}, Path=!IsContentFocused}"
              IsVisible="{Binding Source={StaticResource MouseModel},Path=IsMouseUsed}">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <Button VerticalAlignment="Bottom" Style="{StaticResource SubMenuNavigateButtonStyle}" Height="50"
                  Command="{Command Source={StaticResource HomeMenuModel},Path=MovePrevious}">
            <Button.RenderTransform>
              <RotateTransform Angle="270" />
            </Button.RenderTransform>
          </Button>
        </Grid>

        <Grid x:Name="BottomButtonGrid" Grid.Row="2" HorizontalAlignment="Left" VerticalAlignment="Bottom" Margin="210,0,0,-10" Panel.ZIndex="1000"
              IsEnabled="{Binding Source={StaticResource HomeContentModel}, Path=!IsContentFocused}"
              IsVisible="{Binding Source={StaticResource MouseModel},Path=IsMouseUsed}">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <Button VerticalAlignment="Bottom" Style="{StaticResource SubMenuNavigateButtonStyle}" Height="50"
                  Command="{Command Source={StaticResource HomeMenuModel},Path=MoveNext}">
            <Button.RenderTransform>
              <RotateTransform Angle="90" />
            </Button.RenderTransform>
          </Button>
        </Grid>

        <KeyBinding Key="Up" Command="{Command Source={StaticResource HomeMenuModel},Path=MovePrevious}" IsEnabled="{Binding ElementName=HomeContentGrid, Path=!IsKeyboardFocusWithin}"/>
        <KeyBinding Key="Down" Command="{Command Source={StaticResource HomeMenuModel},Path=MoveNext}" IsEnabled="{Binding ElementName=HomeContentGrid, Path=!IsKeyboardFocusWithin}"/>
        <!-- Toggles focus between the main menu and the home content -->
        <KeyBinding Key="Info" Command="{Command Source={StaticResource HomeContentModel},Path=ToggleFocus}"/>
        <KeyBinding Key="i" Command="{Command Source={StaticResource HomeContentModel},Path=ToggleFocus}"/>

      </Grid>
    </ControlTemplate>
  </Include.Resources>
</Include>
