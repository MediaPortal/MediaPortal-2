<?xml version="1.0" encoding="utf-8"?>

<!--
This is the master template for standard menu screens:
A header text, left the menu, under the menu a small video preview,
at the right side the content pane and at the bottom the current play control.

Usage:

  <Include
      xmlns="www.team-mediaportal.com/2008/mpf/directx"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      Source="screens\master_menu.xaml">
    <Include.Resources>
      <ResourceWrapper x:Key="Header_Text">
        [Header text]
      </ResourceWrapper>
      <ControlTemplate x:Key="Contents_Template">
        [UI element to be displayed in the content area]
      </ControlTemplate>
    </Include.Resources>
  </Include>

Parameters which have to be accessible by a DynamicResource lookup:
 - Header_Text (String): The text to be displayed as header
 - Contents_Template (ConrolTemplate): Template for element to be displayed
   in the content area at the right side
-->

<Include
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Source="screens\master_home.xaml"
    xmlns:mp_special_controls="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Controls;assembly=SkinEngine"
    >
  <Include.Resources>

    <ControlTemplate x:Key="FanArtBackground_Template">
      <Image Stretch="Fill" Opacity="{Binding Source={StaticResource SkinSettingsModel}, Path=[WMC].FanartOverlayOpacity}" Source="Background_GridView.png"/>
    </ControlTemplate>

    <!-- Background Manager for menu hovers -->
    <Model x:Key="BackgroundManagerModel" Id="1F4CAEDE-7108-483d-B5C8-18BEC7EC58E5"/>
    <Model x:Key="HomeMenuModel" Id="2EAA2DAB-241F-432F-A487-CDD35CCD4309"/>

    <!-- Header has to be defined by the includer: "Header_Text" -->

    <!-- Client_Template -->
    <ControlTemplate x:Key="Client_Template">
      <Grid x:Name="MainLayoutPanel" Margin="300,50,0,10" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Opacity="0">

        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
          <RowDefinition Height="500"/>
          <RowDefinition Height="480"/>
        </Grid.RowDefinitions>
        <Grid.Resources>
          <Model x:Key="MenuModel" Id="9E9D0CD9-4FDB-4c0f-A0C4-F356E151BDE0"/>
          <Model x:Key="MouseModel" Id="CA6428A7-A6E2-4dd3-9661-F89CEBAF8E62"/>
        </Grid.Resources>
        <Grid.Triggers>
          <DataTrigger Binding="{Binding Source={StaticResource HomeMenuModel},Path=EnableMainMenuAnimations}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard x:Name="BeginMainMenuFadeAnimation" Storyboard="{ThemeResource MainMenuFadeAnimation}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <StopStoryboard BeginStoryboardName="BeginMainMenuFadeAnimation" />
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Grid.Triggers>

        <ListView x:Name="MainMenu" Grid.Column="0" Grid.Row="1" Grid.RowSpan="2"  Style="{ThemeResource MyMainMenuListViewStyle}"
                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,0,0"
                  ItemsSource="{Binding Source={StaticResource HomeMenuModel},Path=NestedMenuItems,Mode=OneTime}">
          <ListView.Resources>
            <CommandBridge x:Key="Menu_Command" Command="{Binding Path=Command,Mode=OneTime}"/>
          </ListView.Resources>
        </ListView>

        <Grid x:Name="SubItemsFadeControl" Grid.Row="2" Grid.Column="0" Opacity="0" Panel.ZIndex="100"
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>

          <Grid.RenderTransform>
            <TranslateTransform Y="0"/>
          </Grid.RenderTransform>

          <Grid.Triggers>
            <DataTrigger Binding="{Binding Source={StaticResource HomeMenuModel},Path=EnableSubMenuAnimations}" Value="True">
              <DataTrigger.EnterActions>
                <BeginStoryboard x:Name="BeginFadeAnimation" Storyboard="{ThemeResource SubItemsFadeAnimation}"/>
              </DataTrigger.EnterActions>
              <DataTrigger.ExitActions>
                <StopStoryboard BeginStoryboardName="BeginFadeAnimation" />
              </DataTrigger.ExitActions>
            </DataTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding Source={StaticResource HomeMenuModel},Path=EnableSubMenuAnimations}" Value="True"/>
                <Condition Binding="{Binding Source={StaticResource HomeMenuModel},Path=ScrollDirection}" Value="Up"/>
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard x:Name="BeginTransformDownAnimation" Storyboard="{ThemeResource SubItemsTransformAnimationDown}"/>
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <StopStoryboard BeginStoryboardName="BeginTransformDownAnimation" />
              </MultiTrigger.ExitActions>
            </MultiTrigger>

            <MultiTrigger>
              <MultiTrigger.Conditions>
                <Condition Binding="{Binding Source={StaticResource HomeMenuModel},Path=EnableSubMenuAnimations}" Value="True"/>
                <Condition Binding="{Binding Source={StaticResource HomeMenuModel},Path=ScrollDirection}" Value="Down"/>
              </MultiTrigger.Conditions>
              <MultiTrigger.EnterActions>
                <BeginStoryboard x:Name="BeginTransformUpAnimation" Storyboard="{ThemeResource SubItemsTransformAnimationUp}"/>
              </MultiTrigger.EnterActions>
              <MultiTrigger.ExitActions>
                <StopStoryboard BeginStoryboardName="BeginTransformUpAnimation" />
              </MultiTrigger.ExitActions>
            </MultiTrigger>

          </Grid.Triggers>

          <ListView Margin="-1240,0,0,0" x:Name="SubItemsListViewHome" 
                   SetFocusPrio="DefaultHigh"
                   ItemsSource="{Binding Source={StaticResource HomeMenuModel},Path=SubItems,Mode=OneTime}"
                   Style="{ThemeResource SubMenuListViewStyle}"
                   SelectionChanged="{CommandStencil Source={StaticResource HomeMenuModel}, Path=SetSelectedItem}">
            <ListView.Resources>
              <CommandBridge x:Key="Menu_Command" Command="{Binding Path=Command,Mode=OneTime}"/>
            </ListView.Resources>
          </ListView>
        </Grid>

        <Grid Grid.Row="2" Grid.Column="0" Opacity="1" Panel.ZIndex="99">
          <Grid.Resources>
            <Model x:Key="MouseModel" Id="CA6428A7-A6E2-4dd3-9661-F89CEBAF8E62"/>
          </Grid.Resources>
          <Image x:Name="FocusFrame" Source="Focus.frame.png" 
                 Stretch="Uniform" Width="360" HorizontalAlignment="Left" Margin="11,-1,0,18"/>
        </Grid>

        <!-- Order matters here: The content grid has to be the last control to fill the rest of the space -->
        <Grid x:Name="ContentPanel" Grid.Row="2" Grid.Column="0" SetFocusPrio="Default">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <Control Margin="10,0,10,10" x:Name="ContentViewer" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Template="{DynamicResource ResourceKey=Contents_Template}" SetFocus="true"/>
        </Grid>

        <Grid x:Name="RightButtonGrid" Grid.Row="1" HorizontalAlignment="Left" Margin="-290,0,0,-140" Panel.ZIndex="1000"
              IsVisible="{Binding Source={StaticResource MouseModel},Path=IsMouseUsed}">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <Button VerticalAlignment="Bottom" Style="{StaticResource SubMenuRightButtonStyle}" Height="50"
                  Command="{Command Source={StaticResource HomeMenuModel},Path=MovePreviousSubItem}"/>
        </Grid>
        
        <Grid x:Name="LeftButtonGrid" Grid.Row="1" HorizontalAlignment="Right" Margin="0,0,10,-140" Panel.ZIndex="1000"
              IsVisible="{Binding Source={StaticResource MouseModel},Path=IsMouseUsed}">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="Auto"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>
          <Button VerticalAlignment="Bottom" Style="{StaticResource SubMenuLeftButtonStyle}" Height="50"
                  Command="{Command Source={StaticResource HomeMenuModel},Path=MoveNextSubItem}"/>
        </Grid>

        <KeyBinding Key="Up" Command="{Command Source={StaticResource HomeMenuModel},Path=MovePrevious}"/>
        <KeyBinding Key="Down" Command="{Command Source={StaticResource HomeMenuModel},Path=MoveNext}"/>

      </Grid>
    </ControlTemplate>
  </Include.Resources>
</Include>
