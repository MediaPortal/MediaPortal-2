<?xml version="1.0" encoding="utf-8"?>

<ResourceDictionary
  xmlns="www.team-mediaportal.com/2008/mpf/directx"
  xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
  xmlns:collections="clr-namespace:MediaPortal.UI.Presentation.DataObjects;assembly=MediaPortal.UI"
  xmlns:wrh="clr-namespace:Webradio.Models"
  DependsOnStyleResources="Buttons,Colors,Consts">

  <!-- A data template which shows an image and the Name of the ListItem -->
  <DataTemplate x:Key="WebradioFilterItemDataTemplate" DataType="{x:Type collections:ListItem}">
    <DockPanel x:Name="ItemControl" LastChildFill="False">
      <CheckBox DockPanel.Dock="Left" IsChecked="{Binding Selected}" />
      <Label x:Name="ItemLabel" DockPanel.Dock="Center" Content="{Binding [Name]}"
             HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}"
             Color="{ThemeResource TextColor}" />
    </DockPanel>
  </DataTemplate>

  <DataTemplate x:Key="WebradioDlgFavoritesDataTemplate" DataType="{x:Type collections:ListItem}">
    <DockPanel x:Name="ItemControl" LastChildFill="False">
      <Label x:Name="ItemLabelLeft" DockPanel.Dock="Center" Content="{Binding [Name]}"
             HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}"
             Color="{ThemeResource TextColor}" />
      <Label x:Name="ItemLabelRight" DockPanel.Dock="Center" Content="{Binding [Count]}"
             HorizontalAlignment="Right" VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}"
             Color="{ThemeResource TextColor}" />
    </DockPanel>
  </DataTemplate>

  <!-- ListView style to be used in the content area of the screens -->
  <Style x:Key="WebradioFilterListViewStyle" BasedOn="{ThemeResource DefaultListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource WebradioFilterItemDataTemplate}" />
    <Setter Property="DataStringProvider" Value="{ThemeResource ContentsMenuItemDataStringProvider}" />
    <Setter Property="ItemContainerStyle" Value="{ThemeResource DefaultMenuItemContainerStyle}" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel x:Name="ListItemsHost" IsItemsHost="True" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="WebradioDlgFavoritesListViewStyle" BasedOn="{ThemeResource DefaultListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource WebradioDlgFavoritesDataTemplate}" />
    <Setter Property="DataStringProvider" Value="{ThemeResource ContentsMenuItemDataStringProvider}" />
    <Setter Property="ItemContainerStyle" Value="{ThemeResource DefaultMenuItemContainerStyle}" />
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <VirtualizingStackPanel x:Name="ListItemsHost" IsItemsHost="True" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="WebRadioButtonStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Style="{ThemeResource MediaItemButtonHomeStyle}"
                  Command="{DynamicResource ResourceKey=Menu_Command}"
                  ContextMenuCommand="{DynamicResource ResourceKey=Context_Menu_Command}"
                  IsEnabled="{Binding Enabled}"
                  SetFocusPrio="{Binding Path=Selected,Mode=OneTime,Converter={StaticResource BoolToFocusPriorityConverter},ConverterParameter=Highest}">
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
                <!--Setter Property="StackPanel.ZIndex" Value="100.0"/-->
              </Trigger>
            </Button.Triggers>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate x:Key="WebRadioDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid x:Name="ItemControl" Margin="2" Background="#50575c">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource MEDIA_AUDIO_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource MEDIA_AUDIO_HEIGHT}"/>
      </Grid.RowDefinitions>
      <Grid>
        <Grid.OpacityMask>
          <VisualBrush>
            <VisualBrush.Visual>
              <Border Name="mask" Background="White" CornerRadius="{StaticResource MediumRadius}" BorderThickness="0" BorderBrush="Black"/>
            </VisualBrush.Visual>
          </VisualBrush>
        </Grid.OpacityMask>
        <Image x:Name="ItemTypeAudio" Thumbnail="True" Stretch="Fill" Source="{Binding [ImageSrc]}" FallbackSource="{Binding [DefaultIconSrc]}"/>
        <Border VerticalAlignment="Stretch" HorizontalAlignment="Stretch" BorderThickness="0" Background="#FF50575c"
                IsVisible="{Binding ElementName=ItemTypeAudio, Path=!HasImage}">
        </Border>
        <Image Stretch="Uniform" HorizontalAlignment="Center" VerticalAlignment="Center" Source="Audio.png" Margin="10"
               IsVisible="{Binding ElementName=ItemTypeAudio, Path=!HasImage}">
        </Image>
      </Grid>
    </Grid>
  </DataTemplate>

  <Style x:Key="WebRadioContainerStyle" BasedOn="{ThemeResource ContentsMenuListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource WebRadioDataTemplate}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource WebRadioButtonStyle}"/>
    <BindingSetter Property="Template">
      <BindingSetter.BindingWrapper>
        <BindingWrapper>
          <BindingWrapper.Binding>
              <Binding>
                <Binding.Source>
                  <ControlTemplate TargetType="{x:Type ListView}">
                    <ScrollViewer CanContentScroll="True" Margin="0,0,0,0" Style="{ThemeResource GradientGridScrollViewerStyle}"
                                  HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled"
                                  HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
                      <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="0,-5,150,5"/>
                    </ScrollViewer>
                  </ControlTemplate>
                </Binding.Source>
              </Binding>
          </BindingWrapper.Binding>
        </BindingWrapper>
      </BindingSetter.BindingWrapper>
    </BindingSetter>
    <BindingSetter Property="ItemsPanel">
      <BindingSetter.BindingWrapper>
        <BindingWrapper>
          <BindingWrapper.Binding>
              <Binding>
                <Binding.Source>
                  <ItemsPanelTemplate>
                    <AnimatedWrapPanel x:Name="GridItemsHost" IsItemsHost="True" Orientation="Horizontal" LoopScroll="False"
                                       ScrollMargin="0,200" Margin="0,-100,0,-150">
                      <AnimatedWrapPanel.Resources>
                        <Storyboard x:Key="ScrollAnimation" FillBehavior="HoldEnd">
                          <DoubleAnimation BeginTime="00:00:00" From="0" To="1" Duration="00:00:00.300"
                                           FillBehavior="HoldEnd" Storyboard.TargetName="GridItemsHost" Storyboard.TargetProperty="ScrollOffsetMultiplier"/>
                        </Storyboard>
                      </AnimatedWrapPanel.Resources>
                      <AnimatedWrapPanel.Triggers>
                        <EventTrigger RoutedEvent="AnimatedWrapPanel.Scroll">
                          <EventTrigger.Actions>
                            <BeginStoryboard Storyboard="{ThemeResource ScrollAnimation}"/>
                          </EventTrigger.Actions>
                        </EventTrigger>
                      </AnimatedWrapPanel.Triggers>
                    </AnimatedWrapPanel>
                  </ItemsPanelTemplate>
                </Binding.Source>
              </Binding>
          </BindingWrapper.Binding>
        </BindingWrapper>
      </BindingSetter.BindingWrapper>
    </BindingSetter>
  </Style>

</ResourceDictionary>
