<?xml version="1.0" encoding="utf-8"?>

<!--
This is the master template for standard menu screens:
On top the window buttons, the player controls and the notification symbol,
at the left side the menu,
at the right side the content pane and
at the bottom the navbar.

The contents (Contents_Template) are displayed inside a GroupBox.
If an alternative contents display should be used,
the element Alternative_Contents_Element can be used; in that case, no
surrounding GroupBox will be used.

Usage:

  <Include
      xmlns="www.team-mediaportal.com/2008/mpf/directx"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      Source="screens\master_menu.xaml">
    <Include.Resources>
      <ResourceWrapper x:Key="Header_Text">
        [Header text]
      </ResourceWrapper>

      <!- Either ->
      <ControlTemplate x:Key="Contents_Template">
        [UI element to be displayed in the content area]
      </ControlTemplate>
      <!- Or ->
      <ControlTemplate x:Key="Alternative_Contents_Template">
        [UI element to be displayed in the content area]
      </ControlTemplate>

    </Include.Resources>
  </Include>

Parameters which have to be accessible by a DynamicResource lookup:
 - Header_Text (String): The text to be displayed as header. Only used when Contents_Template is given.
 - Contents_Template (ConrolTemplate): Template for the contents to be displayed
   in the content area at the right side, inside a GroupBox.
 - Alternative_Contents_Template (ControlTemplate): Template of the contents to be displayed
   in the content area at the right side, without a GroupBox.
-->

<Include
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Source="screens\master_bare.xaml"
    xmlns:mp_special_controls="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Controls;assembly=SkinEngine"
    >
  <Include.Resources>
    <Model x:Key="MenuModel" Id="A6C6D5DA-55FE-4b5f-AE83-B03E8BBFA177"/>
    <!-- Header has to be defined by the includer: "Header_Text" -->

    <ControlTemplate x:Key="Header_Text_Template">
      <Label x:Name="HeaderLabel" FontFamily="DefaultBold" FontSize="32"
               VerticalAlignment="Center" HorizontalAlignment="Left" Color="{ThemeResource TextColor}"
               Content="{Binding Source={DynamicResource Header_Text},Path=Resource}">
      </Label>
    </ControlTemplate>

    <ControlTemplate x:Key="Menu_Button_Placeholder">
      <Button x:Name="MenuButton" Style="{ThemeResource MenuButtonStyle}" Grid.Row="0" Grid.Column="0" Margin="0"
              HorizontalAlignment="Center" VerticalAlignment="Center"
              IsEnabled="{Binding Source={StaticResource MenuModel},Path=!IsMenuOpen}"
              Command="{Command Source={StaticResource MenuModel}, Path=ToggleMenu}">
      </Button>
    </ControlTemplate>

    <ControlTemplate x:Key="Client_Template">
      <Grid Margin="10" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.Resources>
          <Model x:Key="MenuModel" Id="A6C6D5DA-55FE-4b5f-AE83-B03E8BBFA177"/>
        </Grid.Resources>

        <!-- Order matters here: The content control has to be the last control to fill the rest of the space -->
        <Grid x:Name="ContentPanel" SetFocusPrio="DefaultLow">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>

          <!--Container for content templates to handle common triggers-->
          <Grid Grid.Row="0" Grid.Column="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
            <Grid.Triggers>
              <!--Close the hidden menu when the main content gets focus-->
              <EventTrigger RoutedEvent="FrameworkElement.GotFocus">
                <TriggerCommand Command="{Command Source={StaticResource MenuModel}, Path=CloseMenu}"/>
              </EventTrigger>
            </Grid.Triggers>

            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Control x:Name="ContentControl" Template="{DynamicResource ResourceKey=Contents_Template}" Grid.Row="0" Grid.Column="0" Margin="10,0,10,10"
                     IsVisible="{Binding ElementName=ContentControl,Path=Template,Converter={StaticResource ReferenceToBoolConverter}}"/>

            <Control x:Name="AlternativeContentControl" Grid.Row="0" Grid.Column="0"
                     VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                     Template="{DynamicResource ResourceKey=Alternative_Contents_Template}"
                     IsVisible="{Binding RelativeSource={RelativeSource Self},Path=Template,Converter={StaticResource ReferenceToBoolConverter}}"/>
          </Grid>

          <Grid x:Name="RightPanel" Margin="10,-160,-680,-300" VerticalAlignment="Stretch"
              Width="550" HorizontalAlignment="Right">
            <Grid.IsVisible>
              <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"
                     Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} != {LayoutType}.{CoverLayout}"/>
            </Grid.IsVisible>
            <Grid.Resources>
              <Storyboard x:Key="SlideInStoryboard" FillBehavior="HoldEnd">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="RightPanel" Storyboard.TargetProperty="RenderTransform.X">
                  <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.35" Value="-550"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SlideOutStoryboard" FillBehavior="HoldEnd">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="RightPanel" Storyboard.TargetProperty="RenderTransform.X">
                  <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-550"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.35" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </Grid.Resources>
            <Grid.Triggers>
              <!--Open the menu when the grid gets focus-->
              <EventTrigger RoutedEvent="FrameworkElement.GotFocus">
                <TriggerCommand Command="{Command Source={StaticResource MenuModel}, Path=OpenMenu}"/>
              </EventTrigger>
              <!-- Slide-In animation when the MenuModel.ShowMenu gets true -->
              <DataTrigger Binding="{Binding Source={StaticResource MenuModel},Path=IsMenuOpen}" Value="True">
                <DataTrigger.EnterActions>
                  <BeginStoryboard x:Name="SlideIn_BeginStoryboard" Storyboard="{ThemeResource SlideInStoryboard}"/>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                  <BeginStoryboard x:Name="SlideOut_BeginStoryboard" Storyboard="{ThemeResource SlideOutStoryboard}"/>
                  <StopStoryboard BeginStoryboardName="SlideIn_BeginStoryboard"/>
                </DataTrigger.ExitActions>
                <Setter TargetName="MainListMenu" Property="SetFocusPrio" Value="Highest" />
              </DataTrigger>
            </Grid.Triggers>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="550"/>
              <ColumnDefinition Width="0"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="100"/>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.RenderTransform>
              <TranslateTransform X="0"/>
            </Grid.RenderTransform>
            <Rectangle Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="-2,40,60,360">
              <Rectangle.Fill>
                <ImageBrush ImageSource="win10_bg.png"></ImageBrush>
              </Rectangle.Fill>
            </Rectangle>
            <ListView x:Name="MainListMenu" Grid.Row="1" Grid.Column="0" Style="{ThemeResource SlideMenuListViewStyle}" Margin="10,40,10,360"
                      HorizontalAlignment="Stretch" VerticalAlignment="Center" SetFocusPrio="Default"
                      ItemsSource="{Binding Source={StaticResource MenuModel},Path=MenuItems,Mode=OneTime}"
                      IsEnabled="{Binding Source={StaticResource MenuModel},Path=IsMenuOpen}">
              <ListView.Resources>
                <CommandBridge x:Key="Menu_Command" Command="{Binding Path=Command,Mode=OneTime}"/>
              </ListView.Resources>
              <ListView.Triggers>
                <Trigger Property="IsEmpty" Value="True">
                  <Setter TargetName="RightPanel" Property="Visibility" Value="Hidden" />
                </Trigger>
              </ListView.Triggers>
            </ListView>
            <Button x:Name="MenuShowButton" Content="Menu" Style="{ThemeResource MenuButtonWideStyle}"
                    Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Center" Height="180" Margin="-45,0,0,340"
                    IsEnabled="{Binding Source={StaticResource MenuModel},Path=!IsMenuOpen}"
                    Command="{Command Source={StaticResource MenuModel}, Path=ToggleMenu}">
              <Image Source="hiddenmenu_tab.png" Stretch="Uniform" Margin="0,0,0,0"/>
            </Button>
          </Grid>

          <Grid x:Name="TopPanel" Margin="0,-45,-130,-1285" VerticalAlignment="Bottom"
              Width="550" Height="1150" HorizontalAlignment="Right">
            <Grid.IsVisible>
              <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"
                     Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{CoverLayout}"/>
            </Grid.IsVisible>
            <Grid.Resources>
              <Storyboard x:Key="SlideDownStoryboard" FillBehavior="HoldEnd">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="TopPanel" Storyboard.TargetProperty="RenderTransform.Y">
                  <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.35" Value="-936"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="SlideUpStoryboard" FillBehavior="HoldEnd">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="TopPanel" Storyboard.TargetProperty="RenderTransform.Y">
                  <SplineDoubleKeyFrame KeyTime="00:00:00" Value="-936"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.35" Value="0"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </Grid.Resources>
            <Grid.Triggers>
              <!--Open the menu when the grid gets focus-->
              <EventTrigger RoutedEvent="FrameworkElement.GotFocus">
                <TriggerCommand Command="{Command Source={StaticResource MenuModel}, Path=OpenMenu}"/>
              </EventTrigger>
              <!-- Slide-In animation when the MenuModel.ShowMenu gets true -->
              <DataTrigger Binding="{Binding Source={StaticResource MenuModel},Path=IsMenuOpen}" Value="True">
                <DataTrigger.EnterActions>
                  <BeginStoryboard x:Name="SlideDown_BeginStoryboard" Storyboard="{ThemeResource SlideDownStoryboard}"/>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                  <BeginStoryboard x:Name="Slideup_BeginStoryboard" Storyboard="{ThemeResource SlideUpStoryboard}"/>
                  <StopStoryboard BeginStoryboardName="SlideDown_BeginStoryboard"/>
                </DataTrigger.ExitActions>
                <Setter TargetName="TopMenu" Property="SetFocusPrio" Value="Highest" />
              </DataTrigger>
            </Grid.Triggers>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="550"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="105"/>
              <RowDefinition Height="*"/>
              <RowDefinition Height="0"/>
            </Grid.RowDefinitions>
            <Grid.RenderTransform>
              <TranslateTransform Y="0"/>
            </Grid.RenderTransform>

            <Rectangle Grid.Row="1" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Margin="0,0,65,140">
              <Rectangle.Fill>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                  <GradientStop Color="#E6666666" Offset="0"/>
                  <GradientStop Color="#E6666666" Offset="0.62"/>
                  <GradientStop Color="#00666666" Offset="0.73"/>
                </LinearGradientBrush>
              </Rectangle.Fill>
            </Rectangle>
            <ListView x:Name="TopMenu" Grid.Row="1" Style="{ThemeResource SlideMenuListViewStyle}" Margin="10,20,14,80"
              HorizontalAlignment="Stretch" VerticalAlignment="Stretch" SetFocusPrio="Default"
              ItemsSource="{Binding Source={StaticResource MenuModel},Path=MenuItems,Mode=OneTime}"
              IsEnabled="{Binding Source={StaticResource MenuModel},Path=IsMenuOpen}">
              <ListView.Resources>
                <CommandBridge x:Key="Menu_Command" Command="{Binding Path=Command,Mode=OneTime}"/>
              </ListView.Resources>
            </ListView>
            <Button x:Name="MenuShowTopButton" Content="Menu" Style="{ThemeResource MenuButtonWideStyle}"
                  Grid.Row="1" Grid.Column="0" VerticalAlignment="Top" Width="180" Margin="0,-40,0,0"
                  IsEnabled="{Binding Source={StaticResource MenuModel},Path=!IsMenuOpen}"
                  IsVisible="{Binding Source={StaticResource MenuModel},Path=!IsMenuOpen}"
                  Command="{Command Source={StaticResource MenuModel}, Path=ToggleMenu}">
              <Image Source="hiddenmenu_tab_up.png" Stretch="Uniform"/>
            </Button>
          </Grid>

          <KeyBinding Key="Info" Command="{Command Source={StaticResource MenuModel}, Path=ToggleMenu}"/>
          <KeyBinding Key="Escape" Command="{Command Source={StaticResource MenuModel}, Path=ToggleMenu}" IsEnabled="{Binding Source={StaticResource MenuModel},Path=IsMenuOpen}"/>
        </Grid>

      </Grid>
    </ControlTemplate>

  </Include.Resources>
</Include>
