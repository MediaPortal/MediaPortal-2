<?xml version="1.0" encoding="utf-8"?>

<Include
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    Source="screens\master_mediamenu.xaml"
    xmlns:mp_special_controls="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Controls;assembly=SkinEngine"
    >
  <Include.Resources>

    <!-- Header -->
    <ResourceWrapper x:Key="Header_Text" Resource="[Weather.Title]"/>

    <!-- Weather model -->
    <Model x:Key="Model" Id="92BDB53F-4159-4dc2-B212-6083C820A214"/>

    <ControlTemplate x:Key="TopGradient_Template">
      <Border HorizontalAlignment="Stretch" VerticalAlignment="Stretch" BorderThickness="0" Margin="0,0,0,0" Panel.ZIndex="1000">
        <Border.Background>
          <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#E6000000" Offset="0" />
            <GradientStop Color="#00000000" Offset="1" />
          </LinearGradientBrush>
        </Border.Background>
      </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="BottomGradient_Template">
      <Border HorizontalAlignment="Stretch" VerticalAlignment="Bottom" BorderThickness="0" Margin="0,0,0,0" Height="100" Panel.ZIndex="1000">
        <Border.Background>
          <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
            <GradientStop Color="#00000000" Offset="0" />
            <GradientStop Color="#E6000000" Offset="1" />
          </LinearGradientBrush>
        </Border.Background>
      </Border>
    </ControlTemplate>

    <ControlTemplate x:Key="FanArtBackground_Template">
      <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Image Source="weather\weather_background.jpg" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Fill"/>
        <Image Stretch="Fill" Opacity="{Binding Source={StaticResource SkinSettingsModel}, Path=[Nereus].FanartOverlayOpacity}">
          <Image.Source>
            <Binding Source="Background_GridView.png"/>
          </Image.Source>
        </Image>
      </Grid>
    </ControlTemplate>

    <ControlTemplate x:Key="Client_Template">
      <Grid x:Name="ClientGrid" Margin="-200,10,0,10" VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
        <Grid.Resources>
          <Model x:Key="MenuModel" Id="9E9D0CD9-4FDB-4c0f-A0C4-F356E151BDE0"/>
        </Grid.Resources>

        <Grid.Triggers>
          <MultiTrigger>
            <MultiTrigger.Conditions>
              <Condition Binding="{Binding Source={StaticResource MenuModel},Path=IsMenuOpen}" Value="True" />
            </MultiTrigger.Conditions>
            <MultiTrigger.EnterActions>
              <BeginStoryboard x:Name="SlideIn" Storyboard="{ThemeResource HiddenMenuSlideIn}"/>
            </MultiTrigger.EnterActions>
            <MultiTrigger.ExitActions>
              <BeginStoryboard x:Name="SlideOut" Storyboard="{ThemeResource HiddenMenuSlideOut}"/>
              <StopStoryboard BeginStoryboardName="SlideIn"/>
            </MultiTrigger.ExitActions>
          </MultiTrigger>
        </Grid.Triggers>
        
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="200"/>
          <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <Grid.RenderTransform>
          <TranslateTransform X="0"/>
        </Grid.RenderTransform>

        <Grid x:Name="SlideMenuPanel" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" 
              Grid.Column="0" Margin="0,-100,0,-270">
          <Grid.Triggers>
            <EventTrigger RoutedEvent="Screen.Show">
              <TriggerCommand Command="{Command Source={StaticResource MenuModel}, Path=CloseMenu}"/>
            </EventTrigger>
            <!--Open the menu when the grid gets focus-->
            <EventTrigger RoutedEvent="FrameworkElement.GotFocus">
              <TriggerCommand Command="{Command Source={StaticResource MenuModel}, Path=OpenMenu}"/>
            </EventTrigger>
          </Grid.Triggers>

          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="200"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>

          <Image Source="MenuGlow.png" Stretch="Fill" VerticalAlignment="Stretch" HorizontalAlignment="Right" Margin="0,0,-38,0"/>
          <Rectangle Fill="Black" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0.9"/>
          <Image Source="LeftMenuIndicator.PNG" HorizontalAlignment="Right" Stretch="Fill" Width="25" Height="45" 
                 Opacity="0.9" VerticalAlignment="Center" Margin="0,0,-25,0"/>

          <ListView x:Name="MainListMenu" Style="{ThemeResource MediaMenuListViewStyle}"
                    HorizontalAlignment="Stretch" VerticalAlignment="Stretch" RestoreFocus="True"
                    ItemsSource="{Binding Source={StaticResource MenuModel},Path=MenuItems,Mode=OneTime}">
            <ListView.Resources>
              <CommandBridge x:Key="Menu_Command" Command="{Binding Path=Command,Mode=OneTime}"/>
            </ListView.Resources>
          </ListView>
        </Grid>

        <!-- Order matters here: The content control has to be the last control to fill the rest of the space -->
        <Grid x:Name="ContentPanel" Grid.Row="0" Grid.Column="1" SetFocusPrio="DefaultHigh" 
              Focusable="True" HorizontalAlignment="Stretch" Margin="30,0,30,0">
          <Grid.ColumnDefinitions>
            <ColumnDefinition Width="*"/>
          </Grid.ColumnDefinitions>
          <Grid.RowDefinitions>
            <RowDefinition Height="*"/>
          </Grid.RowDefinitions>

          <Grid.Triggers>
            <!--Close the hidden menu when the main content gets focus-->
            <EventTrigger RoutedEvent="FrameworkElement.GotFocus">
              <TriggerCommand Command="{Command Source={StaticResource MenuModel}, Path=CloseMenu}"/>
            </EventTrigger>
          </Grid.Triggers>

          <StackPanel VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                      DataContext="{Binding Source={StaticResource Model}}">
            <Grid x:Name="CurrentConditionPanel" HorizontalAlignment="Center" VerticalAlignment="Stretch">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="1000"/>
                <ColumnDefinition Width="180"/>
                <ColumnDefinition Width="Auto"/>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.Triggers>
                <!-- Setting default state of menu to hidden -->
                <!-- Checking if weather has been configured -->
                <EventTrigger RoutedEvent="Screen.Show">
                  <TriggerCommand Command="{Command Path=CheckWeatherConfigured}"/>
                </EventTrigger>
              </Grid.Triggers>

              <StackPanel x:Name="CurrentConditionOverview" Grid.Column="1" Grid.Row="0" Orientation="Horizontal"
                          HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,0,0,0">
                <Image x:Name="BigIcon" Width="250" Height="250" Margin="0,0,20,0"
                       Source="{Binding CurrentLocation.Condition.BigIconProperty}" Stretch="Uniform" />
                <StackPanel x:Name="Temperatures" Orientation="Vertical" HorizontalAlignment="Center" VerticalAlignment="Center" IsVisible="{Binding CurrentLocation}">
                  <Label x:Name="Temperature" FontSize="{ThemeResource HugeFontSize}" Color="{ThemeResource TextColor}"
                         Content="{Binding CurrentLocation.Condition.Temperature}"/>
                  <Label x:Name="LocName" HorizontalAlignment="Center" FontSize="{ThemeResource HugeFontSize}" Color="{ThemeResource TextColor}" Margin="0,0,0,28"
                         Content="{Binding CurrentLocation.Name}" Wrap="True" Width="750"/>
                </StackPanel>
              </StackPanel>

              <Grid x:Name="CurrentConditionDetail" Grid.Column="3" Grid.Row="0"
                    HorizontalAlignment="Left" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="Auto"/>
                  <ColumnDefinition Width="30"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>

                <Label Grid.Column="0" Grid.Row="2" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource NereusColorLight}" Content="[Weather.Wind]"/>
                <Label Grid.Column="2" Grid.Row="2" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}" Content="{Binding CurrentLocation.Condition.Wind}"/>

                <Label Grid.Column="0" Grid.Row="3" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource NereusColorLight}" Content="[Weather.Humidity]"/>
                <Label Grid.Column="2" Grid.Row="3" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}" Content="{Binding CurrentLocation.Condition.Humidity}"/>

                <Label Grid.Column="0" Grid.Row="4" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource NereusColorLight}" Content="[Weather.Precipitation]"/>
                <Label Grid.Column="2" Grid.Row="4" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}" Content="{Binding CurrentLocation.Condition.Precipitation}"/>

                <Label Grid.Column="0" Grid.Row="5" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource NereusColorLight}" Content="[Weather.Pressure]"/>
                <Label Grid.Column="2" Grid.Row="5" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}" Content="{Binding CurrentLocation.Condition.Pressure}"/>

              </Grid>
            </Grid>

            <!-- Forecasts (dynamic count) -->
            <ListView Margin="10,30,10,10" HorizontalAlignment="Center" VerticalAlignment="Center"
                      Style="{ThemeResource ForecastListViewStyle}"
                      ItemsSource="{Binding Path=CurrentLocation.ForecastCollection}" />

            <StackPanel HorizontalAlignment="Right" Margin="0,10,20,0">
              <Label FontSize="{ThemeResource TinyFontSize}" Content="{Binding LastUpdateTime}" Color="{ThemeResource HintTextColor}" IsVisible="{Binding !IsUpdating}"/>
              <Label FontSize="{ThemeResource TinyFontSize}" x:Name="RefreshingHintLabel" Content="[Weather.Updating]" IsVisible="{Binding IsUpdating}"
                     HorizontalAlignment="Center" VerticalAlignment="Center" Wrap="true" Color="{ThemeResource HintTextColor}"/>
            </StackPanel>
          </StackPanel>
        </Grid>
      </Grid>
    </ControlTemplate>

  </Include.Resources>
</Include>


