<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:fanart="clr-namespace:MediaPortal.Extensions.UserServices.FanArtService.Client;assembly=FanArtService.Client"
    xmlns:nereus_controls="clr-namespace:MediaPortal.UiComponents.Nereus.Controls;assembly=Nereus"
    xmlns:nereus_converters="clr-namespace:MediaPortal.UiComponents.Nereus.Converters;assembly=Nereus"
    DependsOnStyleResources="OtherControls,OtherControlsOverrides,MediaConsts,Colors,Buttons,Consts"
    >

  <!--Sizes of each tile group-->
  <ResourceWrapper x:Key="TileGroupHeight" Resource="900" />
  <ResourceWrapper x:Key="TileGroupMargin" Resource="20,0" />

  <ResourceWrapper x:Key="TileGroupWidthTiny" Resource="223" />
  <ResourceWrapper x:Key="TileGroupWidthVeryNarrow" Resource="400" />
  <ResourceWrapper x:Key="TileGroupWidthNarrow" Resource="650" />
  <ResourceWrapper x:Key="TileGroupWidthMedium" Resource="760" />
  <ResourceWrapper x:Key="TileGroupWidthWide" Resource="900" />

  <!--Sizes of each tile-->
  <ResourceWrapper x:Key="PosterChacheWidth" Resource="334" />
  <ResourceWrapper x:Key="PosterChacheHeight" Resource="500" />
  <ResourceWrapper x:Key="BannerChacheWidth" Resource="500" />
  <ResourceWrapper x:Key="BannerChacheHeight" Resource="100" />
  <ResourceWrapper x:Key="TvLogoChacheWidth" Resource="300" />
  <ResourceWrapper x:Key="TvLogoChacheHeight" Resource="100" />

  <!--The margin around each tile-->
  <ResourceWrapper x:Key="TileMargin" Resource="5" />

  <!--Color setting of each tile-->
  <ResourceWrapper x:Key="SubMenuTileBackgroundFocusColor" Resource="#FF666666" />
  <ResourceWrapper x:Key="SubMenuTileBackgroundColor" Resource="#FF444444" />
  <ResourceWrapper x:Key="ContentTileBackgroundFocusColor" Resource="#FF009999" />
  <ResourceWrapper x:Key="ContentTileBackgroundColor" Resource="#FF196866" />

  <!--Used Models and Converters-->
  <Model x:Key="MediaListModel" Id="6121E6CC-EB66-4ABC-8AA0-D952B64C0414"/>
  <Model x:Key="CurrentWeatherModel" Id="FC57FF5C-F72F-47E9-B973-338E31FF7FF1"/>
  <Model x:Key="CurrentNewsModel" Id="EE1BBF83-AE5C-491C-9978-14737A2B0883"/>
  <Model x:Key="TimeModel" Id="E821B1C8-0666-4339-8027-AA45A4F6F107"/>

  <nereus_converters:MediaListVisibilityConverter x:Key="MediaListVisibilityConverter"/>
  <nereus_converters:RoundingFormatConverter x:Key="RoundingFormatConverter"/>

  <!--
		############################################################################################################################################################
		################################################################## SQUARE TILE TEMPLATES ###################################################################
		############################################################################################################################################################
	-->

  <!--Template for a square tile-->

  <ControlTemplate x:Key="SquareTileTemplate">
    <Grid x:Name="ItemControl" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="60"/>
      </Grid.RowDefinitions>

      <!-- Background fill -->
      <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="2"
                   x:Name="HomeFill" Fill="black" Opacity="0.4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

      <!-- Image -->
      <Image Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Stretch="UniformToFill"
             Source="{Binding MediaItem}"/>

      <!-- Darkened band -->
      <Rectangle Grid.Row="1" Grid.Column="0" Fill="#FF000000" Opacity="0.749"
                 HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

      <!-- Item label -->
      <Label Grid.Row="1" Grid.Column="0" x:Name="ItemLabel" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{Binding SimpleTitle}"
             FontSize="{ThemeResource BigFontSize}" Color="{ThemeResource TextColor}" Margin="5,0,5,0" ScrollDelay="0">
        <Label.Scroll>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
            <Binding Source="Auto"/>
            <Binding Source="None"/>
          </MultiBinding>
        </Label.Scroll>
      </Label>
    </Grid>
  </ControlTemplate>

  <!--
		##############################################################################################################################################################################################
		################################################################## MOVIE TILE TEMPLATES ###################################################################
		##############################################################################################################################################################################################
	-->

  <!--Template for a square movie tile-->

  <ControlTemplate x:Key="MovieSquareTileTemplate">
    <Grid x:Name="ItemControl" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="60"/>
      </Grid.RowDefinitions>

      <!-- Background fill -->
      <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="2"
                   x:Name="HomeFill" Fill="black" Opacity="0.4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

      <!-- Image -->
      <Image Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Stretch="UniformToFill"
             Source="{Binding MediaItem}"/>

      <!-- Darkened band -->
      <Rectangle Grid.Row="1" Grid.Column="0" Fill="#FF000000" Opacity="0.749"
                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch" />

      <!-- Item label -->
      <Label Grid.Row="1" Grid.Column="0" x:Name="ItemLabel" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{Binding SimpleTitle}"
             FontSize="{ThemeResource BigFontSize}" Color="{ThemeResource TextColor}" Margin="5,0,5,0" ScrollDelay="0">
        <Label.Scroll>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
            <Binding Source="Auto"/>
            <Binding Source="None"/>
          </MultiBinding>
        </Label.Scroll>
      </Label>
      
    </Grid>
  </ControlTemplate>

  <!--Template for a movie poster-->

  <ControlTemplate x:Key="MoviePosterTileTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="60"/>
      </Grid.RowDefinitions>

      <!-- Background fill -->
      <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="2"
                   x:Name="HomeFill" Fill="black" Opacity="0.4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

      <!-- Image -->
      <Image Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Stretch="Fill">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Movie" fanart:FanArtType="Poster" fanart:FanArtName="{Binding Source={Binding MediaItem}, Path=MediaItemId}"
               fanart:MaxWidth="{ThemeResource PosterChacheWidth}" fanart:MaxHeight="{ThemeResource PosterChacheHeight}"/>
        </Image.Source>
      </Image>

    </Grid>
  </ControlTemplate>

  <!--Template for a movie banner-->

  <ControlTemplate x:Key="MovieBannerTileTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <!-- Background fill -->
      <Rectangle x:Name="HomeFill" Fill="black" Opacity="0.4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

      <!-- Image -->
      <Image VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Stretch="Fill">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Movie" fanart:FanArtType="Banner" fanart:FanArtName="{Binding Source={Binding MediaItem}, Path=MediaItemId}"
               fanart:MaxWidth="{StaticResource BannerChacheWidth}" fanart:MaxHeight="{StaticResource BannerChacheHeight}"/>
        </Image.Source>
      </Image>

    </Grid>
  </ControlTemplate>

  <!--
		##############################################################################################################################################################################################
		################################################################## SERIES TILE TEMPLATES #####################################################################################################
		##############################################################################################################################################################################################
	-->

  <!--Template for a series poster-->

  <ControlTemplate x:Key="SeriesPosterTileTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="60"/>
      </Grid.RowDefinitions>

      <!-- Background fill -->
      <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="2"
                   x:Name="HomeFill" Fill="black" Opacity="0.4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

      <!-- Image -->
      <Image Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Stretch="Fill">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Series" fanart:FanArtType="Poster" fanart:FanArtName="{Binding Source={Binding MediaItem}, Path=MediaItemId}"
               fanart:MaxWidth="{StaticResource PosterChacheWidth}" fanart:MaxHeight="{StaticResource PosterChacheHeight}"/>
        </Image.Source>
      </Image>

      <!-- Darkened band -->
      <!--
      <Rectangle Grid.Row="1" Grid.Column="0" Fill="#FF000000" Opacity="0.749"
                   HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>
      -->
      <!-- Item label -->
      <!--
      <Label Grid.Row="1" Grid.Column="0" x:Name="ItemLabel" HorizontalAlignment="Center" VerticalAlignment="Center" Content="{Binding Series}"
               FontSize="{ThemeResource BigFontSize}" Color="{ThemeResource TextColor}"/>
	  -->
    </Grid>
  </ControlTemplate>

  <!--Template for a series banner-->

  <ControlTemplate x:Key="SeriesBannerTileTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <!-- Background fill -->
      <Rectangle x:Name="HomeFill" Fill="black" Opacity="0.4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

      <!-- Image -->
      <Image VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Stretch="Fill">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Series" fanart:FanArtType="Banner" fanart:FanArtName="{Binding Source={Binding MediaItem}, Path=MediaItemId}"
               fanart:MaxWidth="{StaticResource BannerChacheWidth}" fanart:MaxHeight="{StaticResource BannerChacheHeight}"/>
        </Image.Source>
      </Image>

    </Grid>
  </ControlTemplate>

  <!--
		##############################################################################################################################################################################################
		################################################################## AUDIO TILE TEMPLATES ###################################################################
		##############################################################################################################################################################################################
	-->

  <!--Template for an album cover-->

  <ControlTemplate x:Key="AudioCoverTileTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="60"/>
      </Grid.RowDefinitions>

      <Rectangle Grid.Row="0" Grid.Column="0" Grid.RowSpan="2"
                 x:Name="HomeFill" Fill="black" Opacity="0.4" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>

      <Image Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Stretch="Fill">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Album" fanart:FanArtType="Poster" fanart:FanArtName="{Binding Source={Binding MediaItem}, Path=MediaItemId}"
                    fanart:MaxWidth="{StaticResource PosterChacheWidth}" fanart:MaxHeight="{StaticResource PosterChacheWidth}"/>
        </Image.Source>
      </Image>

    </Grid>
  </ControlTemplate>

  <!--
		##############################################################################################################################################################################################
		########################################################################### TV TILE TEMPLATES ################################################################################################
		##############################################################################################################################################################################################
	-->

  <!--Template for a TVChannel tile-->

  <ControlTemplate x:Key="TVChannelTileTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Grid.Background>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
          <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
          <Binding Source="{ThemeResource ContentTileBackgroundFocusColor}"/>
          <Binding Source="{ThemeResource ContentTileBackgroundColor}"/>
        </MultiBinding>
      </Grid.Background>

      <Image VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Stretch="Uniform" Margin="10">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding ChannelLogoType}" fanart:FanArtType="Banner" fanart:FanArtName="{Binding Channel.Name}"
                                    fanart:MaxWidth="{StaticResource TvLogoChacheWidth}" fanart:MaxHeight="{StaticResource TvLogoChacheHeight}"/>
        </Image.Source>
      </Image>

    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="TVProgramTileTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="75*"/>
        <ColumnDefinition Width="25*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <Border Grid.ColumnSpan="2" Grid.RowSpan="2" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Border.Background>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
            <Binding Source="{ThemeResource ContentTileBackgroundFocusColor}"/>
            <Binding Source="{ThemeResource ContentTileBackgroundColor}"/>
          </MultiBinding>
        </Border.Background>
      </Border>

      <Label x:Name="ProgramLabel" Grid.Row="1" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="20,10,10,10" Content="{Binding Program.Title}" 
             TextTrimming="CharacterEllipsis" Wrap="True" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" Opacity="0.7" />
      
      <Label x:Name="StartTimeLabel" VerticalAlignment="Center" Margin="20,10,10,10" Content="{Binding Program.StartTime}"
             Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" FontFamily="SegoeUIBold" />

      <Grid Grid.Column="1" Margin="10,15,10,15" Grid.RowSpan="2">
        <Image VerticalAlignment="Center" HorizontalAlignment="Center" Stretch="Uniform">
          <Image.Source>
            <Binding Path="Progress" Converter="{StaticResource RoundingFormatConverter}" ConverterParameter="{}5;CircularBar\{0}.png"/>
          </Image.Source>
        </Image>
        <Label VerticalAlignment="Center" HorizontalAlignment="Center" FontSize="{ThemeResource SmallerFontSize}" Color="White"
               Margin="0,0,0,0" HorizontalContentAlignment="Center" VerticalContentAlignment="Center">
          <Label.Content>
            <Binding Path="Progress" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}{0:F0}%"/>
          </Label.Content>
        </Label>
      </Grid>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="TVScheduleTileTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="150"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <Border Grid.ColumnSpan="3" Grid.RowSpan="3" BorderThickness="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
        <Border.Background>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
            <Binding Source="{ThemeResource ContentTileBackgroundFocusColor}"/>
            <Binding Source="{ThemeResource ContentTileBackgroundColor}"/>
          </MultiBinding>
        </Border.Background>
      </Border>

      <Image x:Name="ItemTypeImage" Grid.RowSpan="2" Grid.Column="2" Stretch="Uniform" Margin="10" >
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="{Binding Program.ChannelLogoType}" fanart:FanArtType="Banner" fanart:FanArtName="{Binding Program.ChannelName}"
                                    fanart:MaxWidth="{StaticResource TvLogoChacheWidth}" fanart:MaxHeight="{StaticResource TvLogoChacheHeight}"/>
        </Image.Source>
      </Image>

      <Label x:Name="ItemLabel" Grid.RowSpan="2" Grid.Column="2" HorizontalAlignment="Center" VerticalAlignment="Center" 
             TextTrimming="CharacterEllipsis" IsVisible="{Binding ElementName=ItemTypeImage, Path=!HasImage}"
             Content="{Binding Program.ChannelName}" Color="Black" FontSize="{ThemeResource SmallFontSize}" Margin="5"/>

      <Label x:Name="ProgramLabel" VerticalAlignment="Top" HorizontalAlignment="Stretch" Grid.ColumnSpan="2" Margin="10,10,0,0" Content="{Binding Program.Title}"
             TextTrimming="CharacterEllipsis" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" />
      
      <Label x:Name="StartTimeLabel" VerticalAlignment="Center" Grid.ColumnSpan="2" Grid.Row="1" Margin="10,0,0,0" Content="{Binding Program.StartTime}"
             Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" Opacity="0.6"/>

      <Image Grid.Row="2" x:Name="SeriesRecIndicator" Source="RECORD.SERIES.png" IsVisible="{Binding Program.IsSeriesScheduled}"
             VerticalAlignment="Center" HorizontalAlignment="Left" Height="30" Stretch="Uniform" Margin="10,5,0,5"/>
      <Image Grid.Row="2" x:Name="RecIndicator" Source="RECORD.SINGLE.png" IsVisible="{Binding !Program.IsSeriesScheduled}"
             VerticalAlignment="Center" HorizontalAlignment="Left" Height="30" Stretch="Uniform" Margin="10,10,0,10"/>

      <Label x:Name="ScheduleTypeLabel" VerticalAlignment="Center" Grid.Column="1" Grid.ColumnSpan="2" Grid.Row="2" 
             Content="{Binding [ScheduleType]}" ScrollDelay="0" Scroll="None" Margin="10,0,10,0"
             Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}" HorizontalAlignment="Left" >
        <Label.Triggers>
          <DataTrigger Binding="{Binding RelativeSource={RelativeSource Mode=FindAncestor, AncestorType=Button}, Path=HasFocus}" Value="True">
            <Setter Property="Scroll" Value="Auto"/>
          </DataTrigger>
        </Label.Triggers>
      </Label>
    </Grid>
  </ControlTemplate>


  <!--
		##############################################################################################################################################################################################
		################################################################## TILE CONTAINER TEMPLATES ##################################################################################################
		##############################################################################################################################################################################################
	-->

  <ResourceWrapper x:Key="TileFocusedBorderBrush">
    <LinearGradientBrush StartPoint="0,0" EndPoint="1,1">
      <GradientStop Color="{ThemeResource TextColor}" Offset="0"/>
      <GradientStop Color="{ThemeResource TextColor}" Offset="0.30"/>
      <GradientStop Color="{ThemeResource TextColor}" Offset="0.70"/>
      <GradientStop Color="{ThemeResource TextColor}" Offset="1"/>
    </LinearGradientBrush>
  </ResourceWrapper>

  <!-- Home tile button style -->
  <Style x:Key="HomeTileButtonControlStyle" TargetType="{x:Type Control}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="ButtonControlRectangle" IsVisible ="False">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Border 
              BorderThickness="5" Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              CornerRadius="{ThemeResource ButtonControlRadiusX}"
              BorderBrush="#80000000"/>
            <Border 
              BorderThickness="4" Margin="0" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
              CornerRadius="{ThemeResource ButtonControlRadiusX}"
              BorderBrush="{ThemeResource TileFocusedBorderBrush}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="HomeTileButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="GrowControl" Margin="-8">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Image x:Name="ItemShadow" Stretch="Fill">
              <Image.Source>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" 
                              ConverterParameter="{}{0}/{1} &gt; 1.1 ? ({1} &gt; 210 ? {2}:{3}) : ({0}/{1} &gt; 0.85 ? ({0} &gt; 210 ? {4}:{5}) : ({0}/{1} &gt; 0.3 ? ({1} &gt; 300 ? {6}:{7}) : ({1} &gt; 590 ? {8}:{9})))">
                  <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="ActualHeight"/>
                  <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="ActualWidth"/>
                  <Binding Source="poster_large.png"/>
                  <Binding Source="poster_small.png"/>
                  <Binding Source="square_large.png"/>
                  <Binding Source="square_small.png"/>
                  <Binding Source="thumbnail_large.png"/>
                  <Binding Source="thumbnail_small.png"/>
                  <Binding Source="banner_large.png"/>
                  <Binding Source="banner_small.png"/>
                </MultiBinding>
              </Image.Source>
            </Image>
            <Control Margin="8" x:Name="ContentControl" Template="{DynamicResource ResourceKey=ContentControlTemplate}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            <Control Margin="8" Style="{ThemeResource HomeTileButtonControlStyle}" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            <!--Label FontSize="18" Margin="8">
              <Label.Content>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" 
                              ConverterParameter="{}{0}/{1} &gt; 1.1 ? ({1} &gt; 210 ? {2}:{3}) : ({0}/{1} &gt; 0.85 ? ({0} &gt; 210 ? {4}:{5}) : ({0}/{1} &gt; 0.3 ? ({1} &gt; 300 ? {6}:{7}) : ({1} &gt; 590 ? {8}:{9})))">
                  <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="ActualHeight"/>
                  <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="ActualWidth"/>
                  <Binding Source="poster_shadow_large"/>
                  <Binding Source="poster_shadow_small"/>
                  <Binding Source="square_shadow_large"/>
                  <Binding Source="square_shadow_small"/>
                  <Binding Source="thumbnail_shadow_large"/>
                  <Binding Source="thumbnail_shadow_small"/>
                  <Binding Source="banner_shadow_large"/>
                  <Binding Source="banner_shadow_small"/>
                </MultiBinding>
              </Label.Content>
            </>
            <Label Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}, Path=ActualHeight}" Margin="8,30,8,8"/>
            <Label Content="{Binding RelativeSource={RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}, Path=ActualWidth}" Margin="8,60,8,8"/-->
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasFocus" Value="True">
              <Setter TargetName="ButtonControlRectangle" Property="IsVisible" Value="True"/>
              <Trigger.EnterActions>
                <SoundPlayerAction Source="navigate.wav" DisableOnAudioOutput="True"/>
              </Trigger.EnterActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="Pressed_BeginStoryboard" Storyboard="{ThemeResource PressedButtonWideStoryboard}"
                    HandoffBehavior="TemporaryReplace"/>
                <SoundPlayerAction Source="click.wav" DisableOnAudioOutput="True"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="Pressed_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="Disabled_BeginStoryBoard" Storyboard="{ThemeResource DisabledButtonStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="Disabled_BeginStoryBoard"/>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--Template to use for the button that contains the tile content-->

  <Style x:Key="SubMenuButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate>
          <Grid x:Name="GrowControl" Margin="-8">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.Background>
              <ImageBrush Stretch="Fill" ImageSource="square_shadow.png"/>
            </Grid.Background>

            <!--Border BorderThickness="0" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="8">
              <Border.Background>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
                  <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="HasFocus"/>
                  <Binding Source="{ThemeResource SubMenuTileBackgroundFocusColor}"/>
                  <Binding Source="{ThemeResource SubMenuTileBackgroundColor}"/>
                </MultiBinding>
              </Border.Background>
            </Border-->

            <Image x:Name="ItemBackground" Margin="8" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Stretch="Fill">
              <Image.Source>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? ({3}+{1}) : ({3}+{2})">
                  <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type Button}}" Path="HasFocus"/>
                  <Binding Source="g_tile_background_focus.jpg"/>
                  <Binding Source="g_tile_background_nofocus.jpg"/>
                  <Binding Source="MediaMenu\"/>
                </MultiBinding>
              </Image.Source>
            </Image>

            <ContentPresenter x:Name="ButtonContentPresenter" Margin="8" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

            <Grid x:Name="ItemBandGrid" HorizontalAlignment="Stretch" VerticalAlignment="Bottom" RenderTransformOrigin="0.5,1" Margin="8">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
              </Grid.RowDefinitions>
              <Grid.RenderTransform>
                <TransformGroup>
                  <ScaleTransform ScaleX="1" ScaleY="0"/>
                </TransformGroup>
              </Grid.RenderTransform>
              <Rectangle x:Name="ItemBand" Fill="Black" HorizontalAlignment="Stretch" VerticalAlignment="Stretch" Opacity="0.4"/>
              <Label x:Name="ItemLabel" HorizontalAlignment="Center" VerticalAlignment="Center" Content="" 
               FontSize="{ThemeResource SmallerFontSize}" Color="{ThemeResource MenuTextForeground}" Margin="5,-5,5,1"
               ScrollDelay="0" Scroll="None" FontFamily="SegoeUIBold"/>
            </Grid>
          </Grid>

          <ControlTemplate.Triggers>
            <Trigger Property="HasFocus" Value="True">
              <Setter TargetName="ButtonContentPresenter" Property="Opacity" Value="1"/>
              <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
              <Trigger.EnterActions>
                <SoundPlayerAction Source="navigate.wav" DisableOnAudioOutput="True"/>
                <BeginStoryboard x:Name="SlideOut">
                  <BeginStoryboard.Storyboard>
                    <Storyboard>
                      <DoubleAnimation BeginTime="00:00:00" From="0" To="1" Duration="00:00:00.7" DecelerationRatio="1"
                                FillBehavior="HoldEnd" Storyboard.TargetName="ItemBandGrid" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY">
                        <DoubleAnimation.EasingFunction>
                          <BackEase Amplitude="0.6" EasingMode="EaseOut"/>
                        </DoubleAnimation.EasingFunction>
                      </DoubleAnimation>
                    </Storyboard>
                  </BeginStoryboard.Storyboard>
                </BeginStoryboard>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <BeginStoryboard x:Name="SlideBack">
                  <BeginStoryboard.Storyboard>
                    <Storyboard>
                      <DoubleAnimation
                           Storyboard.TargetName="ItemBandGrid"
                           Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY"
                           From="1" To="0" BeginTime="0:0:0" Duration="00:00:00.35"
                           FillBehavior="HoldEnd"/>
                    </Storyboard>
                  </BeginStoryboard.Storyboard>
                </BeginStoryboard>
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="HasFocus" Value="False">
              <Setter TargetName="ButtonContentPresenter" Property="Opacity" Value="0.6"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Trigger.EnterActions>
                <SoundPlayerAction Source="click.wav" DisableOnAudioOutput="True"/>
              </Trigger.EnterActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <ControlTemplate x:Key="TileButtonTemplate">
    <Button Style="{ThemeResource HomeTileButtonStyle}" Margin="{ThemeResource TileMargin}"
            HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
            Command="{Binding Command}">
      <Button.Triggers>
        <Trigger Property="HasFocus" Value="True">
          <Trigger.EnterActions>
            <TriggerCommand Command="{DynamicResource Menu_Focus_Command}"/>
          </Trigger.EnterActions>
        </Trigger>
      </Button.Triggers>
    </Button>
  </ControlTemplate>

  <!--Base Template for all square tiles-->
  <ControlTemplate x:Key="SquareTileContainerTemplate">
    <ControlTemplate.Resources>

      <!--Square plugin tile-->
      <ControlTemplate x:Key="ContentControlTemplate">
        <Control Template="{DynamicResource Square_Tile_Template}"/>
      </ControlTemplate>

    </ControlTemplate.Resources>

    <!--Actual container for the tile that displays the template-->
    <Control Template="{ThemeResource TileButtonTemplate}" DataContext="{Binding TileItem}" />

  </ControlTemplate>

  <!--Base Template for all poster tiles-->
  <ControlTemplate x:Key="PosterTileContainerTemplate">
    <ControlTemplate.Resources>

      <!--Poster tile template-->
      <ControlTemplate x:Key="ContentControlTemplate">
        <Control Template="{DynamicResource Poster_Tile_Template}"/>
      </ControlTemplate>

    </ControlTemplate.Resources>

    <!--Actual container for the tile that displays the template-->
    <Control Template="{ThemeResource TileButtonTemplate}" DataContext="{Binding TileItem}" />

  </ControlTemplate>

  <!--Base Template for all banner tiles-->
  <ControlTemplate x:Key="BannerTileContainerTemplate">
    <ControlTemplate.Resources>

      <!--Banner tile template-->
        <ControlTemplate x:Key="ContentControlTemplate">
          <Control Template="{DynamicResource Banner_Tile_Template}"/>
        </ControlTemplate>

      </ControlTemplate.Resources>

    <!--Actual container for the tile that displays the template-->
    <Control Template="{ThemeResource TileButtonTemplate}" DataContext="{Binding TileItem}" />

  </ControlTemplate>

  <!--
		##############################################################################################################################################################################################
		################################################################## TILE GROUP TEMPLATES ######################################################################################################
		##############################################################################################################################################################################################
	-->
  
  <!-- 6 square tiles, 2 large and 4 small -->
  <ControlTemplate x:Key="SquareTileLayout1Template">
    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TileGroup}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>

      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Control x:Name="Tile1" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[0]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile2" Grid.Column="2" Grid.Row="0"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[1]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile3" Grid.Column="2" Grid.Row="1"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[2]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile4" Grid.Column="0" Grid.Row="2"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[3]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile5" Grid.Column="0" Grid.Row="3"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[4]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile6" Grid.Column="1" Grid.Row="2" Grid.ColumnSpan="2" Grid.RowSpan="2"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[5]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

    </Grid>
  </ControlTemplate>

  <!-- 6 square tiles, 2 large and 4 small, mirrors SquareTileLayout1Template -->
  <ControlTemplate x:Key="SquareTileLayout2Template">
    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TileGroup}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>

      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Control x:Name="Tile1" Grid.Column="0" Grid.Row="0"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[0]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile2" Grid.Column="0" Grid.Row="1"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[1]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile3" Grid.Column="1" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[2]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile4" Grid.Column="0" Grid.Row="2" Grid.ColumnSpan="2" Grid.RowSpan="2"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[3]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile5" Grid.Column="2" Grid.Row="2"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[4]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile6" Grid.Column="2" Grid.Row="3"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[5]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

    </Grid>
  </ControlTemplate>

  <!-- 6 square tiles, 1 large and 5 small -->
  <ControlTemplate x:Key="SquareTileLayout3Template">
    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TileGroup}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>

      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Control x:Name="Tile1" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[0]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile2" Grid.Column="0" Grid.Row="2"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[1]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile3" Grid.Column="1" Grid.Row="2"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[2]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile4" Grid.Column="0" Grid.Row="3"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[3]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile5" Grid.Column="1" Grid.Row="3"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[4]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile6" Grid.Column="0" Grid.Row="4"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[5]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

    </Grid>
  </ControlTemplate>

  <!-- 5 equal square tiles -->
  <ControlTemplate x:Key="SquareTileLayout4Template">
    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TileGroup}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>

      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Control x:Name="Tile1" Grid.Row="0"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[0]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile2" Grid.Row="1"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[1]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile3" Grid.Row="2"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[2]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile4" Grid.Row="3"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[3]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile5" Grid.Row="4"
               Template="{ThemeResource SquareTileContainerTemplate}"
               DataContext="{Binding Tiles[4]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>
    </Grid>
  </ControlTemplate>

  <!-- 6 poster tiles, 2 large and 4 small -->
  <ControlTemplate x:Key="PosterTileLayout1Template">
    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TileGroup}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>

      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Control x:Name="Tile1" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2"
               Template="{ThemeResource PosterTileContainerTemplate}"
               DataContext="{Binding Tiles[0]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile2" Grid.Column="2" Grid.Row="0"
               Template="{ThemeResource PosterTileContainerTemplate}"
               DataContext="{Binding Tiles[1]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile3" Grid.Column="3" Grid.Row="0"
               Template="{ThemeResource PosterTileContainerTemplate}"
               DataContext="{Binding Tiles[2]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile4" Grid.Column="0" Grid.Row="2"
               Template="{ThemeResource PosterTileContainerTemplate}"
               DataContext="{Binding Tiles[3]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile5" Grid.Column="1" Grid.Row="2"
               Template="{ThemeResource PosterTileContainerTemplate}"
               DataContext="{Binding Tiles[4]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile6" Grid.Column="2" Grid.Row="1" Grid.ColumnSpan="2" Grid.RowSpan="2"
               Template="{ThemeResource PosterTileContainerTemplate}"
               DataContext="{Binding Tiles[5]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

    </Grid>
  </ControlTemplate>

  <!-- 6 poster tiles, 2 large and 4 small, mirrors PosterTileLayout1Template -->
  <ControlTemplate x:Key="PosterTileLayout2Template">
    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TileGroup}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>

      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Control x:Name="Tile1" Grid.Column="0" Grid.Row="0"
               Template="{ThemeResource PosterTileContainerTemplate}"
               DataContext="{Binding Tiles[0]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile2" Grid.Column="1" Grid.Row="0"
               Template="{ThemeResource PosterTileContainerTemplate}"
               DataContext="{Binding Tiles[1]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile3" Grid.Column="2" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2"
               Template="{ThemeResource PosterTileContainerTemplate}"
               DataContext="{Binding Tiles[2]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile4" Grid.Column="0" Grid.Row="1" Grid.ColumnSpan="2" Grid.RowSpan="2"
               Template="{ThemeResource PosterTileContainerTemplate}"
               DataContext="{Binding Tiles[3]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile5" Grid.Column="2" Grid.Row="2"
               Template="{ThemeResource PosterTileContainerTemplate}"
               DataContext="{Binding Tiles[4]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile6" Grid.Column="3" Grid.Row="2"
               Template="{ThemeResource PosterTileContainerTemplate}"
               DataContext="{Binding Tiles[5]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

    </Grid>
  </ControlTemplate>

  <!-- 6 poster tiles, 2 large and 4 small -->
  <ControlTemplate x:Key="PosterTileLayout3Template">
    <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=TileGroup}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>

      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Control x:Name="Tile1" Grid.Column="0" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2"
               Template="{ThemeResource PosterTileContainerTemplate}"
               DataContext="{Binding Tiles[0]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile2" Grid.Column="2" Grid.Row="0" Grid.ColumnSpan="2" Grid.RowSpan="2"
               Template="{ThemeResource PosterTileContainerTemplate}"
               DataContext="{Binding Tiles[1]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile3" Grid.Column="0" Grid.Row="2"
               Template="{ThemeResource PosterTileContainerTemplate}"
               DataContext="{Binding Tiles[2]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile4" Grid.Column="1" Grid.Row="2"
               Template="{ThemeResource PosterTileContainerTemplate}"
               DataContext="{Binding Tiles[3]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile5" Grid.Column="2" Grid.Row="2"
               Template="{ThemeResource PosterTileContainerTemplate}"
               DataContext="{Binding Tiles[4]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

      <Control x:Name="Tile6" Grid.Column="3" Grid.Row="2" 
               Template="{ThemeResource PosterTileContainerTemplate}"
               DataContext="{Binding Tiles[5]}"
               IsVisible="{Binding Path=TileItem, Converter={StaticResource ReferenceToBoolConverter}}"/>

    </Grid>
  </ControlTemplate>

  <!--+++++++++++++++++++++++++++++++++++++++-->
  <!--++++ HOME CONTENT LIST ITEM STYLES ++++-->
  <!--+++++++++++++++++++++++++++++++++++++++-->

  <Style x:Key="MediaGridTemplateStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Content">
      <Setter.Value>
        <DockPanel x:Name="MediaGridPanel"
                   Height="{ThemeResource TileGroupHeight}" Margin="{ThemeResource TileGroupMargin}">

          <Label x:Name="MediaListLabel" FontFamily="SegoeUIBold" DockPanel.Dock="Top" HorizontalAlignment="Left"
                 Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}"
                 Content="{Binding Source={DynamicResource Grid_Label},Path=Resource}"/>

          <nereus_controls:TileGroupWrapper ItemsSource="{Binding Path=AllItems}"
                                            Template="{Binding Source={DynamicResource Grid_Style},Path=Resource}"/>
        </DockPanel>
      </Setter.Value>
    </Setter>
  </Style>

  <!--
		##############################################################################################################################################################################################
		################################################################## MAIN HOME TIMELINE ########################################################################################################
		##############################################################################################################################################################################################
	-->

  <Style x:Key="HomeTilesListViewStyle" BasedOn="{ThemeResource DefaultListViewStyle}">
    <Setter Property="ItemTemplate"/>
    <!-- Don't inherit the ItemTemplate from DefaultListViewStyle - It should remain null to make the SkinEngine choose an appropriate template -->
    
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <ScrollViewer CanContentScroll="True" HorizontalScrollBarVisibility="Hidden" VerticalScrollBarVisibility="Hidden">
            <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>

          <AnimatedStackPanel x:Name="ListItemsHost" IsItemsHost="True" Orientation="Horizontal" Margin="-950,0,-950,0" ScrollMargin="950,0,950,0">
            <AnimatedStackPanel.Resources>
              <Storyboard x:Key="ScrollAnimation" FillBehavior="HoldEnd">
                <DoubleAnimation BeginTime="00:00:00" From="0" To="1" Duration="00:00:00.700" DecelerationRatio="0.4" AccelerationRatio="0.4"
                                 FillBehavior="HoldEnd" Storyboard.TargetName="ListItemsHost" Storyboard.TargetProperty="ScrollOffsetMultiplier" />
              </Storyboard>
            </AnimatedStackPanel.Resources>
            <AnimatedStackPanel.Triggers>
              <EventTrigger RoutedEvent="AnimatedStackPanel.Scroll">
                <EventTrigger.Actions>
                  <BeginStoryboard Storyboard="{ThemeResource ScrollAnimation}"/>
                </EventTrigger.Actions>
              </EventTrigger>
            </AnimatedStackPanel.Triggers>
          </AnimatedStackPanel>
          
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!--+++++++++++++++++++++++++++++++++++++++++++++-->
  <!--++++ ACTION ID -> HOME CONTENT TEMPLATES ++++-->
  <!--+++++++++++++++++++++++++++++++++++++++++++++-->

  <!--++++++++++ Movies +++++++++++-->

  <ControlTemplate x:Key="80d2e2cc-baaa-4750-807b-f37714153751">
    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Grid.Resources>
        <ControlTemplate x:Key="Square_Tile_Template">
          <Control Template="{ThemeResource SquareTileTemplate}"/>
        </ControlTemplate>
        <ControlTemplate x:Key="Thumbnail_Tile_Template">
          <Control Template="{ThemeResource SquareTileTemplate}"/>
        </ControlTemplate>
        <ControlTemplate x:Key="Poster_Tile_Template">
          <Control Template="{ThemeResource MoviePosterTileTemplate}"/>
        </ControlTemplate>
        <ControlTemplate x:Key="Banner_Tile_Template">
          <Control Template="{ThemeResource MovieBannerTileTemplate}"/>
        </ControlTemplate>
      </Grid.Resources>
      
      <ListView Style="{ThemeResource HomeTilesListViewStyle}"
                IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEnabled}">

        <ListView Width="190" Margin="0,35,15,0" RestoreFocus="True">
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\genre.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Genre"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\year.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Year"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\age.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Age Rating"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\actor.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Actor"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\search.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Search"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
        </ListView>

        <ListViewItem DataContext="{Binding Source={StaticResource MediaListModel}, Path=Lists[LatestMovies]}"
                      Style="{ThemeResource MediaGridTemplateStyle}" Width="{ThemeResource TileGroupWidthMedium}"
                      Visibility="{Binding Source={Binding AllItems}, Converter={StaticResource MediaListVisibilityConverter}}">
          <ListViewItem.Resources>
            <ResourceWrapper x:Key="Grid_Label" Resource="[Nereus.Home.LatestAdded]"/>
            <ResourceWrapper x:Key="Grid_Style" Resource="{ThemeResource PosterTileLayout1Template}"/>
          </ListViewItem.Resources>
        </ListViewItem>
        
        <ListViewItem DataContext="{Binding Source={StaticResource MediaListModel}, Path=Lists[ContinuePlayMovies]}"
                      Style="{ThemeResource MediaGridTemplateStyle}" Width="{ThemeResource TileGroupWidthMedium}"
                      Visibility="{Binding Source={Binding AllItems}, Converter={StaticResource MediaListVisibilityConverter}}">
          <ListViewItem.Resources>
            <ResourceWrapper x:Key="Grid_Label" Resource="[Nereus.Home.ContinuePlayed]"/>
            <ResourceWrapper x:Key="Grid_Style" Resource="{ThemeResource PosterTileLayout2Template}"/>
          </ListViewItem.Resources>
        </ListViewItem>
        
        <ListViewItem DataContext="{Binding Source={StaticResource MediaListModel}, Path=Lists[FavoriteMovies]}"
                      Style="{ThemeResource MediaGridTemplateStyle}" Width="{ThemeResource TileGroupWidthMedium}"
                      Visibility="{Binding Source={Binding AllItems}, Converter={StaticResource MediaListVisibilityConverter}}">
          <ListViewItem.Resources>
            <ResourceWrapper x:Key="Grid_Label" Resource="[Nereus.Home.Favorites]"/>
            <ResourceWrapper x:Key="Grid_Style" Resource="{ThemeResource PosterTileLayout1Template}"/>
          </ListViewItem.Resources>
        </ListViewItem>
        
        
        <ListViewItem DataContext="{Binding Source={StaticResource MediaListModel}, Path=Lists[UnplayedMovies]}"
                      Style="{ThemeResource MediaGridTemplateStyle}" Width="{ThemeResource TileGroupWidthMedium}"
                      Visibility="{Binding Source={Binding AllItems}, Converter={StaticResource MediaListVisibilityConverter}}">
          <ListViewItem.Resources>
            <ResourceWrapper x:Key="Grid_Label" Resource="[Nereus.Home.Unplayed]"/>
            <ResourceWrapper x:Key="Grid_Style" Resource="{ThemeResource PosterTileLayout2Template}"/>
          </ListViewItem.Resources>
        </ListViewItem>
        
      </ListView>
    </Grid>
  </ControlTemplate>

  <!--++++++++++ Series +++++++++++-->

  <ControlTemplate x:Key="30f57cba-459c-4202-a587-09fff5098251">
    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Grid.Resources>
        <ControlTemplate x:Key="Square_Tile_Template">
          <Control Template="{ThemeResource SquareTileTemplate}"/>
        </ControlTemplate>
        <ControlTemplate x:Key="Thumbnail_Tile_Template">
          <Control Template="{ThemeResource SquareTileTemplate}"/>
        </ControlTemplate>
        <ControlTemplate x:Key="Poster_Tile_Template">
          <Control Template="{ThemeResource SeriesPosterTileTemplate}"/>
        </ControlTemplate>
        <ControlTemplate x:Key="Banner_Tile_Template">
          <Control Template="{ThemeResource SeriesBannerTileTemplate}"/>
        </ControlTemplate>
      </Grid.Resources>

      <ListView Style="{ThemeResource HomeTilesListViewStyle}"
                IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEnabled}">

        <ListView Width="190" Margin="0,35,15,0">
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\genre.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Genre"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\year.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Year"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\age.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Age Rating"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\actor.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Actor"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\search.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Search"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
        </ListView>

        <ListViewItem DataContext="{Binding Source={StaticResource MediaListModel}, Path=Lists[LatestEpisodes]}"
                      Style="{ThemeResource MediaGridTemplateStyle}" Width="{ThemeResource TileGroupWidthWide}"
                      Visibility="{Binding Source={Binding AllItems}, Converter={StaticResource MediaListVisibilityConverter}}">
          <ListViewItem.Resources>
            <ResourceWrapper x:Key="Grid_Label" Resource="[Nereus.Home.LatestAdded]"/>
            <ResourceWrapper x:Key="Grid_Style" Resource="{ThemeResource SquareTileLayout1Template}"/>
          </ListViewItem.Resources>
        </ListViewItem>

        <ListViewItem DataContext="{Binding Source={StaticResource MediaListModel}, Path=Lists[ContinuePlaySeries]}"
                      Style="{ThemeResource MediaGridTemplateStyle}" Width="{ThemeResource TileGroupWidthMedium}"
                      Visibility="{Binding Source={Binding AllItems}, Converter={StaticResource MediaListVisibilityConverter}}">
          <ListViewItem.Resources>
            <ResourceWrapper x:Key="Grid_Label" Resource="[Nereus.Home.ContinuePlayed]"/>
            <ResourceWrapper x:Key="Grid_Style" Resource="{ThemeResource PosterTileLayout3Template}"/>
          </ListViewItem.Resources>
        </ListViewItem>

        <ListViewItem DataContext="{Binding Source={StaticResource MediaListModel}, Path=Lists[FavoriteSeries]}"
                      Style="{ThemeResource MediaGridTemplateStyle}" Width="{ThemeResource TileGroupWidthMedium}"
                      Visibility="{Binding Source={Binding AllItems}, Converter={StaticResource MediaListVisibilityConverter}}">
          <ListViewItem.Resources>
            <ResourceWrapper x:Key="Grid_Label" Resource="[Nereus.Home.Favorites]"/>
            <ResourceWrapper x:Key="Grid_Style" Resource="{ThemeResource PosterTileLayout1Template}"/>
          </ListViewItem.Resources>
        </ListViewItem>


        <ListViewItem DataContext="{Binding Source={StaticResource MediaListModel}, Path=Lists[UnplayedSeries]}"
                      Style="{ThemeResource MediaGridTemplateStyle}" Width="{ThemeResource TileGroupWidthMedium}"
                      Visibility="{Binding Source={Binding AllItems}, Converter={StaticResource MediaListVisibilityConverter}}">
          <ListViewItem.Resources>
            <ResourceWrapper x:Key="Grid_Label" Resource="[Nereus.Home.Unplayed]"/>
            <ResourceWrapper x:Key="Grid_Style" Resource="{ThemeResource PosterTileLayout2Template}"/>
          </ListViewItem.Resources>
        </ListViewItem>

      </ListView>
    </Grid>
  </ControlTemplate>

  <!--++++++++++ Audio +++++++++++-->

  <ControlTemplate x:Key="30715d73-4205-417f-80aa-e82f0834171f">
    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Grid.Resources>
        <ControlTemplate x:Key="Square_Tile_Template">
          <Control Template="{ThemeResource SquareTileTemplate}"/>
        </ControlTemplate>
        <ControlTemplate x:Key="Thumbnail_Tile_Template">
          <Control Template="{ThemeResource SquareTileTemplate}"/>
        </ControlTemplate>
        <ControlTemplate x:Key="Poster_Tile_Template">
          <Control Template="{ThemeResource SeriesPosterTileTemplate}"/>
        </ControlTemplate>
        <ControlTemplate x:Key="Banner_Tile_Template">
          <Control Template="{ThemeResource SeriesBannerTileTemplate}"/>
        </ControlTemplate>
      </Grid.Resources>
     
      <ListView Style="{ThemeResource HomeTilesListViewStyle}"
                IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEnabled}">

        <ListView Width="190" Margin="0,35,15,0">
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\audiogenre.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Genre"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\track.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Tracks"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\Album.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Album"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\actor.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Interpret"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\year.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Year"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
        </ListView>


        <ListViewItem DataContext="{Binding Source={StaticResource MediaListModel}, Path=Lists[LatestAudio]}"
                      Style="{ThemeResource MediaGridTemplateStyle}" Width="{ThemeResource TileGroupWidthNarrow}"
                      Visibility="{Binding Source={Binding AllItems}, Converter={StaticResource MediaListVisibilityConverter}}">
          <ListViewItem.Resources>
            <ResourceWrapper x:Key="Grid_Label" Resource="[Nereus.Home.LatestAdded]"/>
            <ResourceWrapper x:Key="Grid_Style" Resource="{ThemeResource SquareTileLayout1Template}"/>
          </ListViewItem.Resources>
        </ListViewItem>

        <ListViewItem DataContext="{Binding Source={StaticResource MediaListModel}, Path=Lists[ContinuePlayAlbum]}"
                      Style="{ThemeResource MediaGridTemplateStyle}" Width="{ThemeResource TileGroupWidthNarrow}"
                      Visibility="{Binding Source={Binding AllItems}, Converter={StaticResource MediaListVisibilityConverter}}">
          <ListViewItem.Resources>
            <ResourceWrapper x:Key="Grid_Label" Resource="[Nereus.Home.ContinuePlayed]"/>
            <ResourceWrapper x:Key="Grid_Style" Resource="{ThemeResource SquareTileLayout2Template}"/>
          </ListViewItem.Resources>
        </ListViewItem>

        <ListViewItem DataContext="{Binding Source={StaticResource MediaListModel}, Path=Lists[FavoriteAudio]}"
                      Style="{ThemeResource MediaGridTemplateStyle}" Width="{ThemeResource TileGroupWidthNarrow}"
                      Visibility="{Binding Source={Binding AllItems}, Converter={StaticResource MediaListVisibilityConverter}}">
          <ListViewItem.Resources>
            <ResourceWrapper x:Key="Grid_Label" Resource="[Nereus.Home.Favorites]"/>
            <ResourceWrapper x:Key="Grid_Style" Resource="{ThemeResource SquareTileLayout1Template}"/>
          </ListViewItem.Resources>
        </ListViewItem>


        <ListViewItem DataContext="{Binding Source={StaticResource MediaListModel}, Path=Lists[UnplayedAlbums]}"
                      Style="{ThemeResource MediaGridTemplateStyle}" Width="{ThemeResource TileGroupWidthNarrow}"
                      Visibility="{Binding Source={Binding AllItems}, Converter={StaticResource MediaListVisibilityConverter}}">
          <ListViewItem.Resources>
            <ResourceWrapper x:Key="Grid_Label" Resource="[Nereus.Home.Unplayed]"/>
            <ResourceWrapper x:Key="Grid_Style" Resource="{ThemeResource SquareTileLayout2Template}"/>
          </ListViewItem.Resources>
        </ListViewItem>

      </ListView>
    </Grid>
  </ControlTemplate>

  <!--++++++++++ News +++++++++++-->

  <ControlTemplate x:Key="bb49a591-7705-408f-8177-45d633fdfad0">
    <Grid Margin="0,70,0,0" Height="350" Width="980" HorizontalAlignment="Left" VerticalAlignment="Top"
          DataContext="{Binding Source={StaticResource CurrentNewsModel}}">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="*" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>

      <Label Grid.Row="0" x:Name="News" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}" Wrap="True"
             Content="{Binding CurrentNewsItem.Title}" FontFamily="SegoeUIBold" HorizontalAlignment="Stretch"/>
      <Label Grid.Row="1" Margin="0,10,0,20" x:Name="NewSummary" Wrap="True"
             Content="{Binding CurrentNewsItem.Summary}" HorizontalAlignment="Stretch" Opacity="1.3"
             Color="{ThemeResource MenuTextBackground}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </ControlTemplate>

  <!--++++++++++ Weather +++++++++++-->

  <ControlTemplate x:Key="e34fdb62-1f3e-4aa9-8a61-d143e0af77b5">
    <Grid DataContext="{Binding Source={StaticResource CurrentWeatherModel}}" VerticalAlignment="Top" Margin="0,70,0,0">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto" />
        <ColumnDefinition Width="30" />
        <ColumnDefinition Width="Auto" />
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto" />
        <RowDefinition Height="Auto" />
      </Grid.RowDefinitions>

      <Label x:Name="Temperature" FontSize="{ThemeResource HugeFontSize}" Color="{ThemeResource TextColor}" 
             Content="{Binding CurrentLocation.Condition.Temperature}" HorizontalAlignment="Center"/>
      <Label Grid.Column="2" x:Name="LocName" FontSize="{ThemeResource HugeFontSize}" Color="{ThemeResource TextColor}" Content="{Binding CurrentLocation.Name}"/>
      <Image Grid.Row="1" x:Name="BigIcon" Stretch="Fill" Height="175" Width="175" HorizontalAlignment="Center" VerticalAlignment="Center"
             Source="{Binding CurrentLocation.Condition.BigIconProperty}"/>

      <StackPanel Grid.Row="1" Grid.Column="2">
        <Label x:Name="Date" FontSize="{ThemeResource NormalFontSize}"
               Content="{Binding Source={StaticResource TimeModel}, Path=CurrentDate}" Color="{ThemeResource TextColor}"/>
        <Label x:Name="Wind" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource MenuTextBackground}" 
               Content="{Binding CurrentLocation.Condition.Wind}" Opacity="1.3"/>
        <StackPanel Orientation="Horizontal">
          <Label x:Name="Humidity" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource MenuTextBackground}" 
                 Content="{Binding CurrentLocation.Condition.Humidity}" Opacity="1.3"/>
          <Label FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource MenuTextBackground}" Content="   " Opacity="1.3"/>
          <Label x:Name="Pressure" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource MenuTextBackground}" 
                 Content="{Binding CurrentLocation.Condition.Pressure}" Opacity="1.3"/>
        </StackPanel>
      </StackPanel>
    </Grid>
  </ControlTemplate>

  <!--++++++++++ TV +++++++++++-->

  <ControlTemplate x:Key="b4a9199f-6dd4-4bda-a077-de9c081f7703">
    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Grid.Resources>
        <ControlTemplate x:Key="Square_Tile_Template">
          <Control Template="{ThemeResource TVChannelTileTemplate}"/>
        </ControlTemplate>
        <ControlTemplate x:Key="Thumbnail_Tile_Template">
          <Control Template="{ThemeResource TVChannelTileTemplate}"/>
        </ControlTemplate>
        <ControlTemplate x:Key="Poster_Tile_Template">
          <Control Template="{ThemeResource TVChannelTileTemplate}"/>
        </ControlTemplate>
        <ControlTemplate x:Key="Banner_Tile_Template">
          <Control Template="{ThemeResource TVChannelTileTemplate}"/>
        </ControlTemplate>
      </Grid.Resources>

      <ListView Style="{ThemeResource HomeTilesListViewStyle}"
                IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEnabled}">

        <ListView Width="190" Margin="0,35,15,0">
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=C7646667-5E63-48c7-A490-A58AC9518CFA}">
              <Button.Content>
                <Image Source="MediaMenu\LiveTV.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="LiveTV"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=7323BEB9-F7B0-48c8-80FF-8B59A4DB5385}">
              <Button.Content>
                <Image Source="MediaMenu\EPG.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="TV-Guide"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=88842E97-2EF9-4658-AD35-8D74E3C689A4}">
              <Button.Content>
                <Image Source="MediaMenu\schedules.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Schedules"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=9D5B01A7-035F-46CF-8246-3C158C6CA960}">
              <Button.Content>
                <Image Source="MediaMenu\Recordings.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Recordings"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=CB5D4851-27D2-4222-B6A0-703EDC2071B5}">
              <Button.Content>
                <Image Source="MediaMenu\search.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Search Program"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
        </ListView>

        <ListViewItem DataContext="{Binding Source={StaticResource MediaListModel}, Path=Lists[LastPlayTV]}"
                      Style="{ThemeResource MediaGridTemplateStyle}" Width="{ThemeResource TileGroupWidthVeryNarrow}"
                      Visibility="{Binding Source={Binding AllItems}, Converter={StaticResource MediaListVisibilityConverter}}">
          <ListViewItem.Resources>
            <ResourceWrapper x:Key="Grid_Label" Resource="[Nereus.Home.LatestPlayed]"/>
            <ResourceWrapper x:Key="Grid_Style" Resource="{ThemeResource SquareTileLayout3Template}"/>
          </ListViewItem.Resources>
        </ListViewItem>
        
        <ListViewItem DataContext="{Binding Source={StaticResource MediaListModel}, Path=Lists[FavoriteTV]}"
                      Style="{ThemeResource MediaGridTemplateStyle}" Width="{ThemeResource TileGroupWidthTiny}"
                      Visibility="{Binding Source={Binding AllItems}, Converter={StaticResource MediaListVisibilityConverter}}">
          <ListViewItem.Resources>
            <ResourceWrapper x:Key="Grid_Label" Resource="[Nereus.Home.Favorites]"/>
            <ResourceWrapper x:Key="Grid_Style" Resource="{ThemeResource SquareTileLayout4Template}"/>
          </ListViewItem.Resources>
        </ListViewItem>

        <ListViewItem DataContext="{Binding Source={StaticResource MediaListModel}, Path=Lists[CurrentPrograms]}"
                      Style="{ThemeResource MediaGridTemplateStyle}" Width="{ThemeResource TileGroupWidthNarrow}"
                      Visibility="{Binding Source={Binding AllItems}, Converter={StaticResource MediaListVisibilityConverter}}">
          <ListViewItem.Resources>
            <ResourceWrapper x:Key="Grid_Label" Resource="[Nereus.Home.CurrentPrograms]"/>
            <ResourceWrapper x:Key="Grid_Style" Resource="{ThemeResource SquareTileLayout4Template}"/>
            <ControlTemplate x:Key="Square_Tile_Template">
              <Control Template="{ThemeResource TVProgramTileTemplate}"/>
            </ControlTemplate>
            <ControlTemplate x:Key="Thumbnail_Tile_Template">
              <Control Template="{ThemeResource TVProgramTileTemplate}"/>
            </ControlTemplate>
            <ControlTemplate x:Key="Poster_Tile_Template">
              <Control Template="{ThemeResource TVProgramTileTemplate}"/>
            </ControlTemplate>
            <ControlTemplate x:Key="Banner_Tile_Template">
              <Control Template="{ThemeResource TVProgramTileTemplate}"/>
            </ControlTemplate>
          </ListViewItem.Resources>
        </ListViewItem>

        <ListViewItem DataContext="{Binding Source={StaticResource MediaListModel}, Path=Lists[CurrentSchedules]}"
                      Style="{ThemeResource MediaGridTemplateStyle}" Width="{ThemeResource TileGroupWidthNarrow}"
                      Visibility="{Binding Source={Binding AllItems}, Converter={StaticResource MediaListVisibilityConverter}}">
          <ListViewItem.Resources>
            <ResourceWrapper x:Key="Grid_Label" Resource="[Nereus.Home.CurrentSchedules]"/>
            <ResourceWrapper x:Key="Grid_Style" Resource="{ThemeResource SquareTileLayout4Template}"/>
            <ControlTemplate x:Key="Square_Tile_Template">
              <Control Template="{ThemeResource TVScheduleTileTemplate}"/>
            </ControlTemplate>
            <ControlTemplate x:Key="Thumbnail_Tile_Template">
              <Control Template="{ThemeResource TVScheduleTileTemplate}"/>
            </ControlTemplate>
            <ControlTemplate x:Key="Poster_Tile_Template">
              <Control Template="{ThemeResource TVScheduleTileTemplate}"/>
            </ControlTemplate>
            <ControlTemplate x:Key="Banner_Tile_Template">
              <Control Template="{ThemeResource TVScheduleTileTemplate}"/>
            </ControlTemplate>
          </ListViewItem.Resources>
        </ListViewItem>
        
      </ListView>
    </Grid>
  </ControlTemplate>

  <!--++++++++++ Image +++++++++++-->

  <ControlTemplate x:Key="55556593-9fe9-436c-a3b6-a971e10c9d44">
    <Grid HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>

      <Grid.Resources>
        <ControlTemplate x:Key="Square_Tile_Template">
          <Control Template="{ThemeResource SquareTileTemplate}"/>
        </ControlTemplate>
        <ControlTemplate x:Key="Thumbnail_Tile_Template">
          <Control Template="{ThemeResource SquareTileTemplate}"/>
        </ControlTemplate>
        <ControlTemplate x:Key="Poster_Tile_Template">
          <Control Template="{ThemeResource SeriesPosterTileTemplate}"/>
        </ControlTemplate>
        <ControlTemplate x:Key="Banner_Tile_Template">
          <Control Template="{ThemeResource SeriesBannerTileTemplate}"/>
        </ControlTemplate>
      </Grid.Resources>

      <ListView Style="{ThemeResource HomeTilesListViewStyle}"
                IsEnabled="{Binding RelativeSource={RelativeSource TemplatedParent}, Path=IsEnabled}">

        <ListView Width="190" Margin="0,35,15,0">
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\year.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Year"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\place.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Place"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\System.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="System"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\Size.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Size"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
          <ListViewItem>
            <Button Width="170" Height="159" Focusable="True" Margin="{ThemeResource TileMargin}" Style="{ThemeResource SubMenuButtonStyle}"
                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=2529B0F0-8415-4A4E-971B-38D6CDD2406A}">
              <Button.Content>
                <Image Source="MediaMenu\Search.png" Stretch="Uniform" Opacity="1"/>
              </Button.Content>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Content" Value="Search"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </ListViewItem>
        </ListView>


        <ListViewItem DataContext="{Binding Source={StaticResource MediaListModel}, Path=Lists[LatestImages]}"
                      Style="{ThemeResource MediaGridTemplateStyle}" Width="{ThemeResource TileGroupWidthWide}"
                      Visibility="{Binding Source={Binding AllItems}, Converter={StaticResource MediaListVisibilityConverter}}">
          <ListViewItem.Resources>
            <ResourceWrapper x:Key="Grid_Label" Resource="[Nereus.Home.LatestAdded]"/>
            <ResourceWrapper x:Key="Grid_Style" Resource="{ThemeResource SquareTileLayout1Template}"/>
          </ListViewItem.Resources>
        </ListViewItem>

        <ListViewItem DataContext="{Binding Source={StaticResource MediaListModel}, Path=Lists[FavoriteImages]}"
                      Style="{ThemeResource MediaGridTemplateStyle}" Width="{ThemeResource TileGroupWidthWide}"
                      Visibility="{Binding Source={Binding AllItems}, Converter={StaticResource MediaListVisibilityConverter}}">
          <ListViewItem.Resources>
            <ResourceWrapper x:Key="Grid_Label" Resource="[Nereus.Home.Favorites]"/>
            <ResourceWrapper x:Key="Grid_Style" Resource="{ThemeResource SquareTileLayout1Template}"/>
          </ListViewItem.Resources>
        </ListViewItem>


        <ListViewItem DataContext="{Binding Source={StaticResource MediaListModel}, Path=Lists[UnplayedImages]}"
                      Style="{ThemeResource MediaGridTemplateStyle}" Width="{ThemeResource TileGroupWidthWide}"
                      Visibility="{Binding Source={Binding AllItems}, Converter={StaticResource MediaListVisibilityConverter}}">
          <ListViewItem.Resources>
            <ResourceWrapper x:Key="Grid_Label" Resource="[Nereus.Home.Unplayed]"/>
            <ResourceWrapper x:Key="Grid_Style" Resource="{ThemeResource SquareTileLayout2Template}"/>
          </ListViewItem.Resources>
        </ListViewItem>

      </ListView>
    </Grid>
  </ControlTemplate>

</ResourceDictionary>
