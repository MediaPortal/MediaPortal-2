<?xml version="1.0" encoding="utf-8"?>

<!--
This is the master template for a standard dialog.
Usage:
  <Include
      xmlns="www.team-mediaportal.com/2008/mpf/directx"
      xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
      Source="screens\master_dialog_bare.xaml"
      >
    <Include.Resources>
      <ResourceWrapper x:Key="Dialog_Header_Text">
        [Header text to be shown as dialog title]
      </ResourceWrapper>
      <ControlTemplate x:Key="Contents_Template">
        [Element which represents the contents area of the dialog.
         Will be placed into a ScrollViewer.]
      </ControlTemplate>
    </Include.Resources>
  </Include>
Parameters which have to be accessible by a DynamicResource lookup:
 - Dialog_Header_Text (String): The text to be displayed as dialog title
 - Contents_Template (ConrolTemplate): Template for the content area of the dialog.
-->

<Screen
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:mp_special_controls="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Controls;assembly=SkinEngine"
    x:Name="DialogScreen"
    >

  <Screen.Resources>
    <Model x:Key="MouseModel" Id="CA6428A7-A6E2-4dd3-9661-F89CEBAF8E62"/>

    <Storyboard x:Key="Show1DialogStoryboard" FillBehavior="HoldEnd">
      <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="ScreenAnimationElement" Storyboard.TargetProperty="Opacity">
        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
        <SplineDoubleKeyFrame KeyTime="00:00:00.2" Value="1"/>
      </DoubleAnimationUsingKeyFrames>
      <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" DecelerationRatio="0.4"
                                     Storyboard.TargetName="DialogBorder" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX">
        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
        <EasingDoubleKeyFrame KeyTime="00:00:00.4" Value="1"/>
      </DoubleAnimationUsingKeyFrames>
      <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" DecelerationRatio="0.4"
                                     Storyboard.TargetName="DialogBorder" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY">
        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="0"/>
        <EasingDoubleKeyFrame KeyTime="00:00:00.4" Value="1"/>
      </DoubleAnimationUsingKeyFrames>
    </Storyboard>

    <Storyboard x:Key="Hide1DialogStoryboard" FillBehavior="HoldEnd">
      <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="DialogBorder" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX">
        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
        <SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="0"/>
      </DoubleAnimationUsingKeyFrames>
      <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="DialogBorder" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY">
        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
        <SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="0"/>
      </DoubleAnimationUsingKeyFrames>
      <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="ScreenAnimationElement" Storyboard.TargetProperty="Opacity">
        <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
        <SplineDoubleKeyFrame KeyTime="00:00:00.1" Value="1"/>
        <SplineDoubleKeyFrame KeyTime="00:00:00.3" Value="0"/>
      </DoubleAnimationUsingKeyFrames>
    </Storyboard>

  </Screen.Resources>
  <Screen.Triggers>
    <EventTrigger RoutedEvent="Screen.Show">
      <EventTrigger.Actions>
        <BeginStoryboard Storyboard="{ThemeResource Show1DialogStoryboard}"/>
      </EventTrigger.Actions>
    </EventTrigger>
    <EventTrigger RoutedEvent="Screen.Hide">
      <EventTrigger.Actions>
        <BeginStoryboard Storyboard="{ThemeResource Hide1DialogStoryboard}"/>
      </EventTrigger.Actions>
    </EventTrigger>
  </Screen.Triggers>

  <Grid x:Name="ScreenAnimationElement" RenderTransformOrigin="0.5,0.5" Background="{ThemeResource DialogScreenBackgroundColor}">
    <Grid.ColumnDefinitions>
      <ColumnDefinition Width="*"/>
    </Grid.ColumnDefinitions>
    <Grid.RowDefinitions>
      <RowDefinition Height="*"/>
    </Grid.RowDefinitions>

      <DockPanel x:Name="DialogBorder" LastChildFill="True" RenderTransformOrigin="0.5,0.5" Margin="50"
                 HorizontalAlignment="Center" VerticalAlignment="Center">
      <DockPanel.Resources>
        <Model x:Key="MenuModel" Id="CED34107-565C-48D9-BEC8-195F7969F90F"/>
      </DockPanel.Resources>
      <DockPanel.RenderTransform>
        <TransformGroup>
          <ScaleTransform ScaleX="1" ScaleY="1"/>
        </TransformGroup>
      </DockPanel.RenderTransform>
        
      <mp_special_controls:UserInputCapture VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
               MousePositionMode="Relative" Buttons="Left"
               MouseClickedCommand="{CommandStencil Source={StaticResource MenuModel},Path=CloseTopmostDialog}"
               IsActive="{Binding ElementName=ContentPanel, Path=!IsKeyboardFocusWithin}"/>

      <!-- Effect around dialog with white edged glow -->
        <!--Border DockPanel.Dock="Center" Background="Transparent" BorderThickness="3" BorderBrush="#0AFFFFFF" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-15"/>
        <Border DockPanel.Dock="Center" Background="Transparent" BorderThickness="2" BorderBrush="#0FFFFFFF" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-12"/>
        <Border DockPanel.Dock="Center" Background="Transparent" BorderThickness="2" BorderBrush="#14FFFFFF" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-10"/>
        <Border DockPanel.Dock="Center" Background="Transparent" BorderThickness="2" BorderBrush="#1AFFFFFF" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-8"/>
        <Border DockPanel.Dock="Center" Background="Transparent" BorderThickness="2" BorderBrush="#23FFFFFF" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-6"/>
        <Border DockPanel.Dock="Center" Background="Transparent" BorderThickness="2" BorderBrush="#2EFFFFFF" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-4"/>
        <Border DockPanel.Dock="Center" Background="Transparent" BorderThickness="2" BorderBrush="#40FFFFFF" VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-2"/-->

      <!-- Effect around dialog with rounded corners and white glow -->
      <Border DockPanel.Dock="Center" Background="Transparent" BorderThickness="3" BorderBrush="#0AFFFFFF"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-15" CornerRadius="19"
              IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[Nereus].EnableWhiteGlowColor}"/>
      <Border DockPanel.Dock="Center" Background="Transparent" BorderThickness="2" BorderBrush="#0FFFFFFF"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-12" CornerRadius="16"
              IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[Nereus].EnableWhiteGlowColor}"/>
      <Border DockPanel.Dock="Center" Background="Transparent" BorderThickness="2" BorderBrush="#14FFFFFF"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-10" CornerRadius="14"
              IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[Nereus].EnableWhiteGlowColor}"/>
      <Border DockPanel.Dock="Center" Background="Transparent" BorderThickness="2" BorderBrush="#1AFFFFFF"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-8" CornerRadius="12"
              IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[Nereus].EnableWhiteGlowColor}"/>
      <Border DockPanel.Dock="Center" Background="Transparent" BorderThickness="2" BorderBrush="#23FFFFFF"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-6" CornerRadius="10"
              IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[Nereus].EnableWhiteGlowColor}"/>
      <Border DockPanel.Dock="Center" Background="Transparent" BorderThickness="2" BorderBrush="#2EFFFFFF"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-4" CornerRadius="8"
              IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[Nereus].EnableWhiteGlowColor}"/>
      <Border DockPanel.Dock="Center" Background="{ThemeResource DialogBackgroundColor}" BorderThickness="2" BorderBrush="#40FFFFFF"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-2" CornerRadius="{ThemeResource DialogBorderCornerRadius}"
              IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=[Nereus].EnableWhiteGlowColor}"/>

      <!-- Effect around dialog with rounded corners and focus color glow -->
      <Border DockPanel.Dock="Center" Background="Transparent" BorderThickness="3" BorderBrush="{ThemeResource NereusColorLight}" Opacity="0.04"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-15" CornerRadius="19"
              IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=![Nereus].EnableWhiteGlowColor}"/>
      <Border DockPanel.Dock="Center" Background="Transparent" BorderThickness="2" BorderBrush="{ThemeResource NereusColorLight}" Opacity="0.06"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-12" CornerRadius="16"
              IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=![Nereus].EnableWhiteGlowColor}"/>
      <Border DockPanel.Dock="Center" Background="Transparent" BorderThickness="2" BorderBrush="{ThemeResource NereusColorLight}" Opacity="0.08"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-10" CornerRadius="14"
              IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=![Nereus].EnableWhiteGlowColor}"/>
      <Border DockPanel.Dock="Center" Background="Transparent" BorderThickness="2" BorderBrush="{ThemeResource NereusColorLight}" Opacity="0.1"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-8" CornerRadius="12"
              IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=![Nereus].EnableWhiteGlowColor}"/>
      <Border DockPanel.Dock="Center" Background="Transparent" BorderThickness="2" BorderBrush="{ThemeResource NereusColorLight}" Opacity="0.13"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-6" CornerRadius="10"
              IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=![Nereus].EnableWhiteGlowColor}"/>
      <Border DockPanel.Dock="Center" Background="Transparent" BorderThickness="2" BorderBrush="{ThemeResource NereusColorLight}" Opacity="0.18"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-4" CornerRadius="8"
              IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=![Nereus].EnableWhiteGlowColor}"/>
      <Border DockPanel.Dock="Center" Background="{ThemeResource DialogBackgroundColor}" BorderBrush="Transparent" BorderThickness="2" VerticalAlignment="Stretch" Opacity="0.8"
              HorizontalAlignment="Stretch" Margin="-2" CornerRadius="{ThemeResource DialogBorderCornerRadius}"
              IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=![Nereus].EnableWhiteGlowColor}"/>
      <Border DockPanel.Dock="Center" BorderThickness="2" BorderBrush="{ThemeResource NereusColorLight}" Opacity="0.25"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Margin="-2" CornerRadius="{ThemeResource DialogBorderCornerRadius}"
              IsVisible="{Binding Source={StaticResource SkinSettingsModel}, Path=![Nereus].EnableWhiteGlowColor}"/>

      <Grid x:Name="DialogHeaderGrid" DockPanel.Dock="Top"
            VerticalAlignment="Top" HorizontalAlignment="Stretch">
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Grid.RowDefinitions>
          <RowDefinition Height="Auto"/>
          <RowDefinition Height="6"/>
        </Grid.RowDefinitions>

        <Border Grid.RowSpan="2" CornerRadius="6" BorderThickness="0" Background="{ThemeResource NereusColorMedium}"/>
        <Border Grid.RowSpan="2" CornerRadius="6" BorderThickness="0">
          <Border.Background>
            <LinearGradientBrush StartPoint="0.5,1" EndPoint="0.5,0">
              <GradientStop Color="#60000000" Offset="0.00"/>
              <GradientStop Color="#00000000" Offset="0.50"/>
              <GradientStop Color="#00000000" Offset="1.00"/>
            </LinearGradientBrush>
          </Border.Background>
        </Border>
        <Border Grid.Row="1" BorderThickness="0" Background="{ThemeResource NereusColorLight}" HorizontalAlignment="Stretch" VerticalAlignment="Stretch"/>

        <Label x:Name="DialogTitle" Grid.Column="0" Grid.Row="0" FontSize="{ThemeResource DialogTitleFontSize}" Margin="10,5,10,5"
                 Content="{Binding Source={DynamicResource Dialog_Header_Text},Path=Resource}" Color="{ThemeResource DialogHeaderColor}"
                 VerticalAlignment="Center" HorizontalAlignment="Center" FontFamily="Noto-Bold"
                 IsVisible="{Binding RelativeSource={RelativeSource Self},Path=Content,Converter={StaticResource ReferenceToBoolConverter}}"/>

          <Control x:Name="AlternativeHeaderControl" Grid.Row="0" Grid.Column="0"
                   VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                   Template="{DynamicResource ResourceKey=Alternative_Contents_Template}"
                   IsVisible="{Binding RelativeSource={RelativeSource Self},Path=Template,Converter={StaticResource ReferenceToBoolConverter}}"/>

          <!--<Button x:Name="CloseButton" Grid.Column="1" Grid.Row="0" Style="{ThemeResource DialogCloseButtonStyle}"
                       Command="{Command Source={Service ScreenManager},Path=CloseTopmostDialog}"/>-->
        </Grid>

        <Control x:Name="ContentPanel" Margin="10" DockPanel.Dock="Center"
                 VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                 Template="{DynamicResource ResourceKey=Contents_Template}"/>
      </DockPanel>

    <Control x:Name="AdditionalKeyBindings" Visibility="Hidden" Template="{DynamicResource ResourceKey=Additional_KeyBindings}"/>
  </Grid>
</Screen>
