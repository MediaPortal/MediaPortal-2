<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:collections="clr-namespace:MediaPortal.UI.Presentation.DataObjects;assembly=MediaPortal.UI"
    xmlns:navitems="clr-namespace:MediaPortal.UiComponents.Media.Models.Navigation;assembly=Media"
    xmlns:mp_special_controls="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Controls;assembly=SkinEngine"
    xmlns:latestmedia="clr-namespace:MediaPortal.UiComponents.Media.Models;assembly=Media"
    xmlns:fanart="clr-namespace:MediaPortal.Extensions.UserServices.FanArtService.Client;assembly=FanArtService.Client"
    DependsOnStyleResources="FullScreenContentConsts,MediaButtons,MediaColors,Consts,Colors,Buttons,OtherControls"
    >

  <!-- ***************************************** OSD ************************************************** -->
  <Storyboard x:Key="OSDCurrentPlayerControlStoryboard" FillBehavior="Stop">
    <!-- TODO: nicer background cycle effect -->
    <ColorAnimationUsingKeyFrames RepeatBehavior="Forever" AutoReverse="true" BeginTime="00:00:00"
        Storyboard.TargetName="OSD_Background" Storyboard.TargetProperty="Background.GradientStops[0].Color">
      <SplineColorKeyFrame KeyTime="00:00:00" Value="{ThemeResource OSDCurrentPlayerControlBackgroundColor1}"/>
      <SplineColorKeyFrame KeyTime="{ThemeResource OSDCurrentPlayerControlAnimationTime1}" Value="{ThemeResource OSDCurrentPlayerControlBackgroundColor1}"/>
      <SplineColorKeyFrame KeyTime="{ThemeResource OSDCurrentPlayerControlAnimationTime2}" Value="{ThemeResource OSDCurrentPlayerControlBackgroundColor1}"/>
    </ColorAnimationUsingKeyFrames>
    <ColorAnimationUsingKeyFrames RepeatBehavior="Forever" AutoReverse="true" BeginTime="00:00:00"
        Storyboard.TargetName="OSD_Background" Storyboard.TargetProperty="Background.GradientStops[1].Color">
      <SplineColorKeyFrame KeyTime="00:00:00" Value="{ThemeResource OSDCurrentPlayerControlBackgroundColor2}"/>
      <SplineColorKeyFrame KeyTime="{ThemeResource OSDCurrentPlayerControlAnimationTime1}" Value="{ThemeResource OSDCurrentPlayerControlBackgroundColor2}"/>
      <SplineColorKeyFrame KeyTime="{ThemeResource OSDCurrentPlayerControlAnimationTime2}" Value="{ThemeResource OSDCurrentPlayerControlBackgroundColor2}"/>
    </ColorAnimationUsingKeyFrames>
    <ColorAnimationUsingKeyFrames RepeatBehavior="Forever" AutoReverse="true" BeginTime="00:00:00"
        Storyboard.TargetName="OSD_Background" Storyboard.TargetProperty="Background.GradientStops[2].Color">
      <SplineColorKeyFrame KeyTime="00:00:00" Value="{ThemeResource OSDCurrentPlayerControlBackgroundColor3}"/>
      <SplineColorKeyFrame KeyTime="{ThemeResource OSDCurrentPlayerControlAnimationTime1}" Value="{ThemeResource OSDCurrentPlayerControlBackgroundColor3}"/>
      <SplineColorKeyFrame KeyTime="{ThemeResource OSDCurrentPlayerControlAnimationTime2}" Value="{ThemeResource OSDCurrentPlayerControlBackgroundColor3}"/>
    </ColorAnimationUsingKeyFrames>
  </Storyboard>

  <Style x:Key="PrimaryVideoOSDStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <ControlTemplate.Resources>
            <Model x:Key="VideoPlayerModel" Id="4E2301B4-3C17-4a1d-8DE5-2CEA169A0256"/>
          </ControlTemplate.Resources>
          <Border x:Name="OSD_Background" BorderBrush="{ThemeResource OSDPlayControlBorderColor}"
              CornerRadius="{ThemeResource OSDPlayControlCornerRadius}" BorderThickness="{ThemeResource OSDPlayControlBorderThickness}"
              DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <Border.Background>
              <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="{ThemeResource OSDPlayerControlBackgroundColor1}"/>
                <GradientStop Offset="0.5" Color="{ThemeResource OSDPlayerControlBackgroundColor2}"/>
                <GradientStop Offset="1" Color="{ThemeResource OSDPlayerControlBackgroundColor3}"/>
              </LinearGradientBrush >
            </Border.Background>
            <Grid x:Name="PlayerGrid" Margin="10,0,10,0"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <DockPanel Grid.Column="0" Grid.Row="0" LastChildFill="true" Margin="3">
                <Grid x:Name="AudioPanel" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="4,0,0,0">
                  <Grid x:Name="Audio_NoMouse" IsVisible="{Binding !ShowMouseControls}"
                      VerticalAlignment="Center" HorizontalAlignment="Center"> <!-- Must be located the same as Audio_Mouse -->
                    <Control x:Name="AudioSimple" IsVisible="{Binding IsAudio}" Template="{ThemeResource AudioActiveControlTemplate}"/>
                    <Control x:Name="MuteOnOffSimple" Template="{ThemeResource MuteOnOffControlTemplate}">
                      <Control.IsVisible>
                        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} &amp;&amp; {1}">
                          <Binding Path="IsAudio"/>
                          <Binding Path="IsMuted"/>
                        </MultiBinding>
                      </Control.IsVisible>
                    </Control>
                  </Grid>
                  <Grid x:Name="Audio_Mouse" IsVisible="{Binding ShowMouseControls}"
                      VerticalAlignment="Center" HorizontalAlignment="Center"> <!-- Must be located the same as Audio_NoMouse -->
                    <Button x:Name="AudioActiveButton" IsVisible="{Binding IsAudio}" Style="{ThemeResource AudioActiveButtonStyle}"
                        Command="{Command AudioButtonPressed}"/>
                    <Button x:Name="AudioInactiveButton" IsVisible="{Binding !IsAudio}" Style="{ThemeResource AudioInactiveButtonStyle}"
                        Command="{Command AudioButtonPressed}"/>
                  </Grid>
                </Grid>
                <Grid DockPanel.Dock="Center">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <Label x:Name="VideoName" Content="{Binding Path=MediaItemTitle}" Color="{ThemeResource TextColor}" Scroll="Auto"
                      HorizontalAlignment="Left" VerticalAlignment="Center"/>
                </Grid>
              </DockPanel>
              <Border x:Name="BgProgressbar" Grid.Row="1" Grid.Column="0"
                  HorizontalAlignment="Stretch" VerticalAlignment="Top"
                  BorderBrush="Black" CornerRadius="3" BorderThickness="1">
                <Border.Background>
                  <RadialGradientBrush Center="0.5,-0" GradientOrigin="0.5,0" RadiusX="0.9" RadiusY="0.5">
                    <GradientStop Offset="0" Color="{ThemeResource OSDProgressBarBackgroundGradient1Color}"/>
                    <GradientStop Offset="1" Color="{ThemeResource OSDProgressBarBackgroundGradient2Color}"/>
                  </RadialGradientBrush>
                </Border.Background>
                <ProgressBar x:Name="ProgressBar" Height="10" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                    Value="{Binding Path=PercentPlayed, Mode=TwoWay}"/>
              </Border>
              <Grid x:Name="StatusLineGrid" Grid.Column="0" Grid.Row="2">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label x:Name="PlayerStateLabel" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left"
                    Content="{Binding PlayerStateText}" Color="{ThemeResource TextColor}" Scroll="Auto"/>
                <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0" Margin="10,0,0,0" HorizontalAlignment="Right"
                    IsVisible="{Binding IsPlayerPresent}">
                  <Label x:Name="CurrentTimeLabel" Content="{Binding CurrentTime}" Color="{ThemeResource TextColor}"/>
                  <Label Content="/" Margin="4,0,4,0" Color="{ThemeResource TextColor}"/>
                  <Label x:Name="VideoDurationLabel" Content="{Binding Duration}" Color="{ThemeResource TextColor}"/>
                </StackPanel>
              </Grid> <!-- StatusLineGrid -->
              <StackPanel x:Name="PlayControlsPanel" Orientation="Horizontal" Grid.Column="0" Grid.Row="3" Margin="10,10,10,0"
                  VerticalAlignment="Center" HorizontalAlignment="Center" IsVisible="{Binding ShowMouseControls}" >
                <Button x:Name="SkipBackButton" Style="{ThemeResource SkipBackButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSkipBack}"
                    Command="{Command Previous}"/>
                <Button x:Name="RewindButton" Style="{ThemeResource RewindButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSeekBackward}"
                    Command="{Command SeekBackward}"/>
                <Button x:Name="PlayButton" Style="{ThemeResource PlayButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPlay}"
                    Command="{Command Play}"/>
                <Button x:Name="PauseButton" Style="{ThemeResource PauseButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPause}"
                    Command="{Command Pause}"/>
                <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanStop}"
                    Command="{Command Stop}"/>
                <Button x:Name="ForwardButton" Style="{ThemeResource ForwardButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSeekForward}"
                    Command="{Command SeekForward}"/>
                <Button x:Name="SkipForwardButton" Style="{ThemeResource SkipForwardButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSkipForward}"
                    Command="{Command Next}"/>
                <Button x:Name="SelectTitleButton" Style="{ThemeResource ShowDvdMenuButtonStyle}" Margin="5,0,5,0"
                    IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.TitlesAvailable}"
                    Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseTitleDialog}"/>
                <Button x:Name="PreviousChapterButton" Style="{ThemeResource PreviousChapterButtonStyle}" Margin="5,0,5,0"
                    IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.ChaptersAvailable}"
                    Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.PrevChapter}"/>
                  <Button x:Name="SelectChapterButton" Style="{ThemeResource SelectChapterButtonStyle}" Margin="5,0,5,0"
                    IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.ChaptersAvailable}"
                    Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseChapterDialog}"/>
                  <Button x:Name="NextChapterButton" Style="{ThemeResource NextChapterButtonStyle}" Margin="5,0,5,0"
                    IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.ChaptersAvailable}"
                    Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.NextChapter}"/>
                <Button x:Name="SelectSubtitleButton" Style="{ThemeResource SelectSubtitleButtonStyle}" Margin="5,0,5,0"
                    IsVisible="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.SubtitlesAvailable}"
                    Command="{Command Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor.OpenChooseSubtitleDialog}"/>

              </StackPanel> <!-- PlayControlsPanel -->
            </Grid> <!-- PlayerGrid -->
          </Border> <!-- OSD_Background -->
          <ControlTemplate.Triggers>
            <Trigger Property="IsCurrentPlayer" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="CurrentPlayer_BeginStoryboard" Storyboard="{ThemeResource OSDCurrentPlayerControlStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="CurrentPlayer_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="PlayerContext" Value="PrimaryPlayer"/>
  </Style>

  <Style x:Key="PrimaryDvdOSDStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <Border x:Name="OSD_Background" BorderBrush="{ThemeResource OSDPlayControlBorderColor}"
              CornerRadius="{ThemeResource OSDPlayControlCornerRadius}" BorderThickness="{ThemeResource OSDPlayControlBorderThickness}"
              DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <Border.Resources>
              <Model x:Key="VideoPlayerModel" Id="4E2301B4-3C17-4a1d-8DE5-2CEA169A0256"/>
            </Border.Resources>
            <Border.Background>
              <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="{ThemeResource OSDPlayerControlBackgroundColor1}"/>
                <GradientStop Offset="0.5" Color="{ThemeResource OSDPlayerControlBackgroundColor2}"/>
                <GradientStop Offset="1" Color="{ThemeResource OSDPlayerControlBackgroundColor3}"/>
              </LinearGradientBrush >
            </Border.Background>
            <Grid x:Name="PlayerGrid" Margin="10,0,10,0"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
              </Grid.RowDefinitions>
              <DockPanel Grid.Column="0" Grid.Row="0" LastChildFill="true" Margin="3">
                <Grid x:Name="AudioPanel" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="4,0,0,0">
                  <Grid x:Name="Audio_NoMouse" IsVisible="{Binding !ShowMouseControls}"
                      VerticalAlignment="Center" HorizontalAlignment="Center">
                    <!-- Must be located the same as Audio_Mouse -->
                    <Control x:Name="AudioSimple" IsVisible="{Binding IsAudio}" Template="{ThemeResource AudioActiveControlTemplate}"/>
                    <Control x:Name="MuteOnOffSimple" Template="{ThemeResource MuteOnOffControlTemplate}">
                      <Control.IsVisible>
                        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} &amp;&amp; {1}">
                          <Binding Path="IsAudio"/>
                          <Binding Path="IsMuted"/>
                        </MultiBinding>
                      </Control.IsVisible>
                    </Control>
                  </Grid>
                  <Grid x:Name="Audio_Mouse" IsVisible="{Binding ShowMouseControls}"
                      VerticalAlignment="Center" HorizontalAlignment="Center">
                    <!-- Must be located the same as Audio_NoMouse -->
                    <Button x:Name="AudioActiveButton" IsVisible="{Binding IsAudio}" Style="{ThemeResource AudioActiveButtonStyle}"
                        Command="{Command AudioButtonPressed}"/>
                    <Button x:Name="AudioInactiveButton" IsVisible="{Binding !IsAudio}" Style="{ThemeResource AudioInactiveButtonStyle}"
                        Command="{Command AudioButtonPressed}"/>
                  </Grid>
                </Grid>
                <Grid DockPanel.Dock="Center">
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <Label x:Name="VideoName" Content="{Binding Path=MediaItemTitle}" Color="{ThemeResource TextColor}" Scroll="Auto"
                      HorizontalAlignment="Left" VerticalAlignment="Center"/>
                </Grid>
              </DockPanel>
              <Border x:Name="BgProgressbar" Grid.Row="1" Grid.Column="0"
                  HorizontalAlignment="Stretch" VerticalAlignment="Top"
                  BorderBrush="Black" CornerRadius="3" BorderThickness="1">
                <Border.Background>
                  <RadialGradientBrush Center="0.5,-0" GradientOrigin="0.5,0" RadiusX="0.9" RadiusY="0.5">
                    <GradientStop Offset="0" Color="{ThemeResource OSDProgressBarBackgroundGradient1Color}"/>
                    <GradientStop Offset="1" Color="{ThemeResource OSDProgressBarBackgroundGradient2Color}"/>
                  </RadialGradientBrush>
                </Border.Background>
                <ProgressBar x:Name="ProgressBar" Height="10" HorizontalAlignment="Stretch" VerticalAlignment="Center"
                    Value="{Binding Path=PercentPlayed, Mode=TwoWay}"/>
              </Border>
              <Grid x:Name="StatusLineGrid" Grid.Column="0" Grid.Row="2">
                <Grid.ColumnDefinitions>
                  <ColumnDefinition Width="*"/>
                  <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                  <RowDefinition Height="Auto"/>
                </Grid.RowDefinitions>
                <Label x:Name="PlayerStateLabel" Grid.Column="0" Grid.Row="0" HorizontalAlignment="Left"
                    Content="{Binding PlayerStateText}" Color="{ThemeResource TextColor}" Scroll="Auto"/>
                <StackPanel Orientation="Horizontal" Grid.Column="1" Grid.Row="0" Margin="10,0,0,0" HorizontalAlignment="Right"
                    IsVisible="{Binding IsPlayerPresent}">
                  <Label x:Name="CurrentTimeLabel" Content="{Binding CurrentTime}" Color="{ThemeResource TextColor}"/>
                  <Label Content="/" Margin="4,0,4,0" Color="{ThemeResource TextColor}"/>
                  <Label x:Name="VideoLengthLabel" Content="{Binding Duration}" Color="{ThemeResource TextColor}"/>
                </StackPanel>
              </Grid>
              <!-- StatusLineGrid -->
              <StackPanel x:Name="PlayControlsPanel" Orientation="Horizontal" Grid.Column="0" Grid.Row="3" Margin="10,10,10,0"
                  VerticalAlignment="Center" HorizontalAlignment="Center" IsVisible="{Binding ShowMouseControls}" >
                <Button x:Name="SkipBackButton" Style="{ThemeResource SkipBackButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSkipBack}"
                    Command="{Command Previous}"/>
                <Button x:Name="RewindButton" Style="{ThemeResource RewindButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSeekBackward}"
                    Command="{Command SeekBackward}"/>
                <Button x:Name="PlayButton" Style="{ThemeResource PlayButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPlay}"
                    Command="{Command Play}"/>
                <Button x:Name="PauseButton" Style="{ThemeResource PauseButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPause}"
                    Command="{Command Pause}"/>
                <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanStop}"
                    Command="{Command Stop}"/>
                <Button x:Name="ForwardButton" Style="{ThemeResource ForwardButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSeekForward}"
                    Command="{Command SeekForward}"/>
                <Button x:Name="SkipForwardButton" Style="{ThemeResource SkipForwardButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSkipForward}"
                    Command="{Command Next}"/>

                <!-- DVD specific feature buttons -->
                <StackPanel x:Name="DvdButtons" Orientation="Horizontal" VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                    DataContext="{Binding Source={StaticResource VideoPlayerModel},Path=PlayerUIContributor}">
                  <Button x:Name="ShowDvdMenuButton" Style="{ThemeResource ShowDvdMenuButtonStyle}" Margin="5,0,5,0" 
                      Command="{Command ShowDvdMenu}"/>
                  <Button x:Name="PreviousChapterButton" Style="{ThemeResource PreviousChapterButtonStyle}" Margin="5,0,5,0" 
                      IsVisible="{Binding ChaptersAvailable}"
                      Command="{Command PrevChapter}"/>
                  <Button x:Name="SelectChapterButton" Style="{ThemeResource SelectChapterButtonStyle}" Margin="5,0,5,0" 
                      IsVisible="{Binding ChaptersAvailable}"
                      Command="{Command OpenChooseChapterDialog}"/>
                  <Button x:Name="NextChapterButton" Style="{ThemeResource NextChapterButtonStyle}" Margin="5,0,5,0" 
                      IsVisible="{Binding ChaptersAvailable}"
                      Command="{Command NextChapter}"/>
                  <Button x:Name="SelectSubtitleButton" Style="{ThemeResource SelectSubtitleButtonStyle}" Margin="5,0,5,0" 
                      IsVisible="{Binding SubtitlesAvailable}"
                      Command="{Command OpenChooseSubtitleDialog}"/>
                  <Button x:Name="SelectTitleButton" Style="{ThemeResource SelectChapterButtonStyle}" Margin="5,0,5,0" 
                      IsVisible="{Binding TitlesAvailable}"
                      Command="{Command OpenChooseTitleDialog}"/>
                </StackPanel> <!-- DvdButtons -->
              </StackPanel> <!-- PlayControlsPanel -->
              <!-- PlayControlsPanel -->
            </Grid> <!-- PlayerGrid -->
          </Border> <!-- OSD_Background -->
          <ControlTemplate.Triggers>
            <Trigger Property="IsCurrentPlayer" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="CurrentPlayer_BeginStoryboard" Storyboard="{ThemeResource OSDCurrentPlayerControlStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="CurrentPlayer_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="PlayerContext" Value="PrimaryPlayer"/>
  </Style>

  <Style x:Key="PrimaryImageOSDStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <Border x:Name="OSD_Background" BorderBrush="{ThemeResource OSDPlayControlBorderColor}"
              CornerRadius="{ThemeResource OSDPlayControlCornerRadius}" BorderThickness="{ThemeResource OSDPlayControlBorderThickness}"
              DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <Border.Background>
              <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="{ThemeResource OSDPlayerControlBackgroundColor1}"/>
                <GradientStop Offset="0.5" Color="{ThemeResource OSDPlayerControlBackgroundColor2}"/>
                <GradientStop Offset="1" Color="{ThemeResource OSDPlayerControlBackgroundColor3}"/>
              </LinearGradientBrush >
            </Border.Background>
            <Grid x:Name="PlayerGrid" Margin="10,0,10,0"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <DockPanel x:Name="HeadLine" Grid.Row="0" Grid.Column="0" LastChildFill="True">
                <Grid x:Name="PlayerStatePanel" DockPanel.Dock="Left">
                  <Control x:Name="StatePlay" IsVisible="{Binding IsPlaying}" Template="{ThemeResource PlayControlTemplate}"
                      VerticalAlignment="Center"/>
                  <Control x:Name="StatePause" IsVisible="{Binding IsPaused}" Template="{ThemeResource PauseControlTemplate}"
                      VerticalAlignment="Center"/>
                </Grid> <!-- PlayerStatePanel -->
                <Label x:Name="ImageName" DockPanel.Dock="Center" Margin="3" 
                    Content="{Binding Path=MediaItemTitle}" Color="{ThemeResource TextColor}" Scroll="Auto"
                    HorizontalAlignment="Left" VerticalAlignment="Center"/>
              </DockPanel> <!-- HeadLine -->
              <StackPanel x:Name="PlayControlsPanel" Orientation="Horizontal" Grid.Column="0" Grid.Row="1" Margin="10,10,10,0"
                  IsVisible="{Binding ShowMouseControls}" >
                <Button x:Name="SkipBackButton" Style="{ThemeResource SkipBackButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSkipBack}"
                    Command="{Command Previous}"/>
                <Button x:Name="PlayButton" Style="{ThemeResource PlayButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPlay}"
                    Command="{Command Play}"/>
                <Button x:Name="PauseButton" Style="{ThemeResource PauseButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPause}"
                    Command="{Command Pause}"/>
                <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanStop}"
                    Command="{Command Stop}"/>
                <Button x:Name="SkipForwardButton" Style="{ThemeResource SkipForwardButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSkipForward}"
                    Command="{Command Next}"/>
              </StackPanel> <!-- PlayControlsPanel -->
            </Grid> <!-- PlayerGrid -->
          </Border> <!-- OSD_Background -->
          <ControlTemplate.Triggers>
            <Trigger Property="IsCurrentPlayer" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="CurrentPlayer_BeginStoryboard" Storyboard="{ThemeResource OSDCurrentPlayerControlStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="CurrentPlayer_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="PlayerContext" Value="PrimaryPlayer"/>
  </Style>

  <Storyboard x:Key="PressedPiPOSDButtonStoryboard" FillBehavior="HoldEnd">
    <ColorAnimationUsingKeyFrames BeginTime="00:00:00" RepeatBehavior="Forever" AutoReverse="True" Storyboard.TargetName="PiPControlBorder" Storyboard.TargetProperty="BorderBrush.Color">
      <SplineColorKeyFrame KeyTime="00:00:00" Value="{ThemeResource PipBorderColor}"/>
      <SplineColorKeyFrame KeyTime="{ThemeResource PressedPiPOSDButtonAnimationTime2}" Value="{ThemeResource OSDPipBorderFocusColor}"/>
    </ColorAnimationUsingKeyFrames>
    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="PiPButton" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleX">
      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
      <SplineDoubleKeyFrame KeyTime="{ThemeResource PressedPiPOSDButtonAnimationTime1}" Value="{ThemeResource SquareButtonZoomCoefficient}"/>
    </DoubleAnimationUsingKeyFrames>
    <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="PiPButton" Storyboard.TargetProperty="RenderTransform.Children[0].ScaleY">
      <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
      <SplineDoubleKeyFrame KeyTime="{ThemeResource PressedPiPOSDButtonAnimationTime1}" Value="{ThemeResource SquareButtonZoomCoefficient}"/>
    </DoubleAnimationUsingKeyFrames>
  </Storyboard>

  <Style x:Key="SecondaryMediaOSDStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="FixedImageHeight" Value="{ThemeResource FullScreenContentVideoSecondaryPlayerOSDPipHeight}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <Border x:Name="OSD_Background" BorderBrush="{ThemeResource OSDPlayControlBorderColor}"
              CornerRadius="{ThemeResource OSDPlayControlCornerRadius}" BorderThickness="{ThemeResource OSDPlayControlBorderThickness}"
              DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <Border.Background>
              <LinearGradientBrush StartPoint="0.5,0" EndPoint="0.5,1">
                <GradientStop Offset="0" Color="{ThemeResource OSDPlayerControlBackgroundColor1}"/>
                <GradientStop Offset="0.5" Color="{ThemeResource OSDPlayerControlBackgroundColor2}"/>
                <GradientStop Offset="1" Color="{ThemeResource OSDPlayerControlBackgroundColor3}"/>
              </LinearGradientBrush >
            </Border.Background>
            <Grid x:Name="PlayerGrid" Grid.Column="2" Grid.Row="0" Margin="10,0,10,0"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
              </Grid.ColumnDefinitions>
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="*"/>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <DockPanel x:Name="PiPHeaderPanel" Grid.Column="0" Grid.Row="0" LastChildFill="true" Margin="3">
                <Grid x:Name="AudioPanel" DockPanel.Dock="Right" HorizontalAlignment="Right" Margin="4,0,0,0"
                    IsVisible="{Binding HasAudio}">
                  <Grid x:Name="Audio_NoMouse" IsVisible="{Binding !ShowMouseControls}"
                      VerticalAlignment="Center" HorizontalAlignment="Center"> <!-- Must be located the same as Audio_Mouse -->
                    <Control x:Name="AudioSimple" IsVisible="{Binding IsAudio}" Template="{ThemeResource AudioActiveControlTemplate}"/>
                    <Control x:Name="MuteOnOffSimple" Template="{ThemeResource MuteOnOffControlTemplate}">
                      <Control.IsVisible>
                        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} &amp;&amp; {1}">
                          <Binding Path="IsAudio"/>
                          <Binding Path="IsMuted"/>
                        </MultiBinding>
                      </Control.IsVisible>
                    </Control>
                  </Grid>
                  <Grid x:Name="Audio_Mouse" IsVisible="{Binding ShowMouseControls}"
                      VerticalAlignment="Center" HorizontalAlignment="Center"> <!-- Must be located the same as Audio_NoMouse -->
                    <Button x:Name="AudioActiveButton" IsVisible="{Binding IsAudio}" Style="{ThemeResource AudioActiveButtonStyle}"
                        Command="{Command AudioButtonPressed}"/>
                    <Button x:Name="AudioInactiveButton" IsVisible="{Binding !IsAudio}" Style="{ThemeResource AudioInactiveButtonStyle}"
                        Command="{Command AudioButtonPressed}"/>
                  </Grid>
                </Grid>
                <Grid DockPanel.Dock="Center"> <!-- Has to be last control in DockPanel, LastChildFill! -->
                  <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                  </Grid.ColumnDefinitions>
                  <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                  </Grid.RowDefinitions>
                  <Label x:Name="MediaName" Content="{Binding Path=MediaItemTitle}" Color="{ThemeResource TextColor}" Scroll="Auto"
                      HorizontalAlignment="Left" VerticalAlignment="Center"
                      MaxWidth="{ThemeResource FullScreenContentVideoSecondaryPlayerOSDTextMaxWidth}"/>
                </Grid>
              </DockPanel> <!-- PiPHeaderPanel -->
              <Button x:Name="PiPButton" Grid.Column="0" Grid.Row="1" Margin="5"
                  Style="{ThemeResource PipControlStyle}" RenderTransformOrigin="0.5,0.5"
                  VerticalAlignment="Center" HorizontalAlignment="Center"
                  Command="{Command SwitchPip}" IsVisible="{Binding IsPip}">
                <Button.RenderTransform>
                  <TransformGroup>
                    <ScaleTransform ScaleX="1" ScaleY="1"/>
                  </TransformGroup>
                </Button.RenderTransform>
                <Button.Triggers>
                  <Trigger Property="HasFocus" Value="True">
                    <Trigger.EnterActions>
                      <BeginStoryboard x:Name="Focused_BeginStoryboard" Storyboard="{ThemeResource PressedPiPOSDButtonStoryboard}"/>
                    </Trigger.EnterActions>
                    <Trigger.ExitActions>
                      <StopStoryboard BeginStoryboardName="Focused_BeginStoryboard"/>
                    </Trigger.ExitActions>
                  </Trigger>
                </Button.Triggers>
              </Button> <!-- PiPButton -->
              <Label x:Name="PlayerStateLabel" Grid.Column="0" Grid.Row="2" HorizontalAlignment="Center" Color="{ThemeResource TextColor}"
                  Content="{Binding PlayerStateText}" Scroll="Auto" MaxWidth="{ThemeResource FullScreenContentVideoSecondaryPlayerOSDTextMaxWidth}"/>
              <StackPanel x:Name="PlayControlsPanel" Orientation="Horizontal" Grid.Column="0" Grid.Row="3" Margin="10,10,10,0"
                  VerticalAlignment="Center" HorizontalAlignment="Center" IsVisible="{Binding ShowMouseControls}" >
                <Button x:Name="SkipBackButton" Style="{ThemeResource SkipBackButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSkipBack}"
                    Command="{Command Previous}"/>
                <Button x:Name="RewindButton" Style="{ThemeResource RewindButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSeekBackward}"
                    Command="{Command SeekBackward}"/>
                <Button x:Name="PlayButton" Style="{ThemeResource PlayButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPlay}"
                    Command="{Command Play}"/>
                <Button x:Name="PauseButton" Style="{ThemeResource PauseButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPause}"
                    Command="{Command Pause}"/>
                <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanStop}"
                    Command="{Command Stop}"/>
                <Button x:Name="ForwardButton" Style="{ThemeResource ForwardButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSeekForward}"
                    Command="{Command SeekForward}"/>
                <Button x:Name="SkipForwardButton" Style="{ThemeResource SkipForwardButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanSkipForward}"
                    Command="{Command Next}"/>
              </StackPanel> <!-- PlayControlsPanel -->
            </Grid> <!-- PlayerGrid -->
          </Border> <!-- OSD_Background -->
          <ControlTemplate.Triggers>
            <Trigger Property="IsCurrentPlayer" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="CurrentPlayer_BeginStoryboard" Storyboard="{ThemeResource OSDCurrentPlayerControlStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="CurrentPlayer_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="PlayerContext" Value="SecondaryPlayer"/>
  </Style>

  <!-- ************************************** FSC Audio ************************************************ -->

  <Style x:Key="FullScreenContentAudioCurrentTitleInformationStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="10"/>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Label x:Name="ArtistsLabel" Grid.Row="0" Grid.Column="0"
                Content="[Media.AudioArtistsLabel]" Color="{ThemeResource TextColor}" FontSize="{ThemeResource BigFontSize}"/>
            <Label x:Name="Artists" Grid.Row="0" Grid.Column="2"
                Content="{Binding AudioArtists}" Color="{ThemeResource TextColor}" FontSize="{ThemeResource BigFontSize}"/>
            <Label x:Name="TitleLabel" Grid.Row="1" Grid.Column="0"
                Content="[Media.AudioTitleLabel]" Color="{ThemeResource TextColor}" FontSize="{ThemeResource BigFontSize}"/>
            <Label x:Name="Title" Grid.Row="1" Grid.Column="2" Scroll="Auto"
                Content="{Binding MediaItemTitle}" Color="{ThemeResource TextColor}" FontSize="{ThemeResource BigFontSize}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ************************************** Playlist ************************************************ -->

  <Style x:Key="RemoveButtonStyle" TargetType="{x:Type Button}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type Button}">
          <Grid x:Name="GrowControl" RenderTransformOrigin="0.5,0.5">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.RenderTransform>
              <TransformGroup>
                <ScaleTransform ScaleX="1" ScaleY="1"/>
              </TransformGroup>
            </Grid.RenderTransform>
            <Control Style="{ThemeResource ButtonControlStyle}"
                VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            <Path x:Name="Cross1"
                VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                Margin="10" Stretch="Fill"
                Stroke="{ThemeResource DeleteCrossColor}" StrokeThickness="2" Data="M2,2 L23,23 z"/>
            <Path x:Name="Cross2"
                VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                Margin="10" Stretch="Fill"
                Stroke="{ThemeResource DeleteCrossColor}" StrokeThickness="2" Data="M2,23 L23,2 z"/>
          </Grid>
          <ControlTemplate.Triggers>
            <Trigger Property="HasFocus" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="Focused_BeginStoryboard" Storyboard="{ThemeResource FocusedButtonStoryboard}"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="Focused_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
              <Trigger.EnterActions>
                <BeginStoryboard x:Name="Pressed_BeginStoryboard" Storyboard="{ThemeResource PressedButtonStoryboard}"
                    HandoffBehavior="TemporaryReplace"/>
              </Trigger.EnterActions>
              <Trigger.ExitActions>
                <StopStoryboard BeginStoryboardName="Pressed_BeginStoryboard"/>
              </Trigger.ExitActions>
            </Trigger>
          </ControlTemplate.Triggers>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="PlaylistItemContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button x:Name="ItemButton"
              Style="{ThemeResource ButtonWideStyle}" Context="{Binding}"
              VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
              Command="{DynamicResource ResourceKey=Select_Command}">
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="ItemNameLabel" Property="Scroll" Value="Auto"/>
              </Trigger>
            </Button.Triggers>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="PlaylistMoveUpButtonStyle" TargetType="{x:Type Button}" BasedOn="{ThemeResource ArrowButtonUpStyle}"/>

  <Style x:Key="PlaylistMoveDownButtonStyle" TargetType="{x:Type Button}" BasedOn="{ThemeResource ArrowButtonDownStyle}"/>

  <Style x:Key="EditPlaylistItemContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Grid x:Name="ParentPanel">
            <Grid.RowDefinitions>
              <RowDefinition Height="Auto"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
              <ColumnDefinition Width="Auto"/>
            </Grid.ColumnDefinitions>
            <ContentPresenter x:Name="PlaylistItemData" Grid.Column="0" Grid.Row="0" Margin="0,0,10,0"
                VerticalAlignment="Center" HorizontalAlignment="Stretch"/>
            <Button x:Name="MoveUpButton" Grid.Column="1" Grid.Row="0" Margin="3" Width="30" Height="30"
                VerticalAlignment="Center" HorizontalAlignment="Center"
                Style="{ThemeResource PlaylistMoveUpButtonStyle}" Context="{Binding}"
                Command="{DynamicResource ResourceKey=MoveUp_Command}"
                SetFocus="{Binding Path=AdditionalProperties[IsUpButtonFocused],Mode=OneTime}"/>
            <Button x:Name="MoveDownButton" Grid.Column="2" Grid.Row="0" Margin="3" Width="30" Height="30"
                VerticalAlignment="Center" HorizontalAlignment="Center"
                Style="{ThemeResource PlaylistMoveDownButtonStyle}" Context="{Binding}"
                Command="{DynamicResource ResourceKey=MoveDown_Command}"
                SetFocus="{Binding Path=AdditionalProperties[IsDownButtonFocused],Mode=OneTime}"/>
            <Button x:Name="RemoveButton" Grid.Column="3" Grid.Row="0" Margin="3" Width="30" Height="30"
                VerticalAlignment="Center" HorizontalAlignment="Center"
                Style="{ThemeResource RemoveButtonStyle}" Context="{Binding}"
                Command="{DynamicResource ResourceKey=Remove_Command}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate x:Key="PlaylistsListItemDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid x:Name="ItemControl">
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="100"/>
      </Grid.ColumnDefinitions>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="0" Content="{Binding [Name]}"
          HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}"/>
      <Label Grid.Row="0" Grid.Column="1" Content="{Binding AdditionalProperties[PlaylistNumItems]}"
          HorizontalAlignment="Left" VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}" Color="{ThemeResource TextColor}"/>
    </Grid>
  </DataTemplate>

  <DataTemplate x:Key="PlaylistItemDataTemplate" DataType="{x:Type collections:ListItem}">
    <Grid Margin="0,3,0,3">
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid VerticalAlignment="Stretch" HorizontalAlignment="Stretch">
        <Grid.RowDefinitions>
          <RowDefinition Height="*"/>
        </Grid.RowDefinitions>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="*"/>
          <ColumnDefinition Width="Auto"/>
        </Grid.ColumnDefinitions>
        <Label x:Name="ItemNumberLabel" Grid.Column="0" Grid.Row="0"
            Content="{Binding [NumberStr]}"
            Color="{ThemeResource PlaylistItemColor}"
            VerticalAlignment="Center" FontSize="{ThemeResource SmallFontSize}"/>
        <Label x:Name="ItemNameLabel" Grid.Column="1" Grid.Row="0" Margin="10,0,10,0"
            Content="{Binding SimpleTitle}"
            Color="{ThemeResource PlaylistItemColor}"
            FontSize="{ThemeResource SmallFontSize}" HorizontalAlignment="Left" VerticalAlignment="Center">
          <Label.Color>
            <MultiBinding Converter="{ThemeResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
              <Binding Path="AdditionalProperties[IsCurrentItem]"/>
              <Binding Source="{ThemeResource PlaylistHighlightLabelColor}"/>
              <Binding Source="{ThemeResource PlaylistItemColor}"/>
            </MultiBinding>
          </Label.Color>
        </Label>
        <Label x:Name="ItemDurationLabel" Grid.Column="2" Grid.Row="0" FontSize="{ThemeResource SmallerFontSize}" VerticalAlignment="Center"
            Content="{Binding Duration}" Color="{ThemeResource PlaylistItemColor}"/>
      </Grid>
    </Grid>
  </DataTemplate>

  <DataStringProvider x:Key="PlaylistItemDataStringProvider" Path="SimpleTitle"/>

  <Style x:Key="PlaylistListViewStyle" BasedOn="{ThemeResource ContentsMenuListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource PlaylistItemDataTemplate}"/>
    <Setter Property="DataStringProvider" Value="{ThemeResource PlaylistItemDataStringProvider}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource PlaylistItemContainerStyle}"/>
  </Style>

  <Style x:Key="EditPlaylistListViewStyle" BasedOn="{ThemeResource ContentsMenuListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource PlaylistItemDataTemplate}"/>
    <Setter Property="DataStringProvider" Value="{ThemeResource PlaylistItemDataStringProvider}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource EditPlaylistItemContainerStyle}"/>
  </Style>

  <Style x:Key="PlaylistsListViewStyle" BasedOn="{ThemeResource ContentsMenuListViewStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ScrollViewer CanContentScroll="true"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                IsVisible="{Binding RelativeSource={RelativeSource TemplatedParent},Path=!IsEmpty}">
              <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            </ScrollViewer>
            <Label Content="[Media.NoPlaylistsAvailable]" IsVisible="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsEmpty}"
                Color="{ThemeResource HintTextColor}" FontSize="{ThemeResource SmallFontSize}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemTemplate" Value="{ThemeResource PlaylistsListItemDataTemplate}"/>
  </Style>

  <Style x:Key="MultiMarkablePlaylistsListViewStyle" BasedOn="{ThemeResource MarkableListViewStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <Grid>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <ScrollViewer CanContentScroll="true"
                HorizontalAlignment="Stretch" VerticalAlignment="Stretch"
                IsVisible="{Binding RelativeSource={RelativeSource TemplatedParent},Path=!IsEmpty}"
                Background="{ThemeResource ItemsControlShadowBackgroundColor}">
              <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            </ScrollViewer>
            <Label Content="[Media.NoPlaylistsAvailable]" IsVisible="{Binding RelativeSource={RelativeSource TemplatedParent},Path=IsEmpty}"
                Color="{ThemeResource HintTextColor}" FontSize="{ThemeResource SmallFontSize}"/>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemTemplate" Value="{ThemeResource PlaylistsListItemDataTemplate}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource MultiMarkableShareContainerStyle}"/>
  </Style>

  <!-- 
    Media Navigation styles.
    We provide different control styles for thumbnail list and grid views for each navigation item (filter, audio, video,...).
  -->
  <Model x:Key="ViewModeModel" Id="6997CD35-63F0-4F96-8997-E18C9382E2DC"/>

  <!-- Fallback data template, if data template for actual item type is not defined -->
  <DataTemplate DataType="{x:Type navitems:NavigationItem}">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Label x:Name="ItemLabel" Grid.Column="0" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="NumItems" Grid.Column="1" Content="{Binding NumItems}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </DataTemplate>

  <!-- Filter -->
  <ControlTemplate x:Key="ListViewFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            Source="FilterSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
            Source="FilterSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
            Source="FilterLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="NumItems" Grid.Row="0" Grid.Column="2" Content="{Binding NumItems}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource GRIDVIEW_FILTER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource GRIDVIEW_FILTER_HEIGHT}"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Image x:Name="ItemTypeImage" Grid.Row="0" Grid.Column="0" Stretch="Uniform" Margin="0,0,0,0" Source="FilterLarge.png"
           Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}"/>
      <Label x:Name="ItemLabel" Grid.Row="1" Grid.Column="0" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </ControlTemplate>

  <!-- Series Filter -->
  <ControlTemplate x:Key="ListViewSeriesFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="50"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
     
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Image Width="{StaticResource MEDIA_BANNER_WIDTH}" Height="{StaticResource MEDIA_BANNER_HEIGHT}" Stretch="Uniform" Grid.Row="0" Grid.Column="0">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Series" fanart:FanArtType="Banner" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_BANNER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_BANNER_HEIGHT}"/>
        </Image.Source>
      </Image>

      <Label x:Name="NumItems" Grid.Row="0" Grid.Column="2" Content="{Binding NumItems}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewSeriesFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource MEDIA_POSTER_CONTAINER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Label x:Name="ItemLabel" Grid.Row="1" Grid.Column="0" Content="{Binding SimpleTitle}" HorizontalAlignment="Center"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Image Width="{StaticResource MEDIA_POSTER_WIDTH}" Height="{StaticResource MEDIA_POSTER_HEIGHT}" Stretch="Uniform" Grid.Row="0" Grid.Column="1">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Series" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
      </Image>
    </Grid>
  </ControlTemplate>

  <!-- Series Season Filter -->
  <ControlTemplate x:Key="ListViewSeriesSeasonFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="50"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
     
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Image Width="{StaticResource MEDIA_BANNER_WIDTH}" Height="{StaticResource MEDIA_BANNER_HEIGHT}" Stretch="Uniform" Grid.Row="0" Grid.Column="0">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="SeriesSeason" fanart:FanArtType="Banner" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_BANNER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_BANNER_HEIGHT}"/>
        </Image.Source>
      </Image>

      <Label x:Name="NumItems" Grid.Row="0" Grid.Column="2" Content="{Binding NumItems}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewSeriesSeasonFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource MEDIA_POSTER_CONTAINER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Label x:Name="ItemLabel" Grid.Row="1" Grid.Column="0" Content="{Binding SimpleTitle}" HorizontalAlignment="Center"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Image Width="{StaticResource MEDIA_POSTER_WIDTH}" Height="{StaticResource MEDIA_POSTER_HEIGHT}" Stretch="Uniform" Grid.Row="0" Grid.Column="1">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="SeriesSeason" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
      </Image>
    </Grid>
  </ControlTemplate>

  <!-- Movie Collection Filter -->
  <ControlTemplate x:Key="ListViewMovieFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="50"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>

      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>

      <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            FallbackSource="VideoSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="MovieCollection" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
        </Image.IsVisible>
      </Image>
      <Image x:Name="ItemTypeMedium" Stretch="Uniform"
            FallbackSource="VideoSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="MovieCollection" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
        </Image.IsVisible>
      </Image>
      <Image x:Name="ItemTypeLarge" Stretch="Uniform"
            FallbackSource="VideoLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="MovieCollection" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
        <Image.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
        </Image.IsVisible>
      </Image>

      <Label x:Name="NumItems" Grid.Row="0" Grid.Column="2" Content="{Binding NumItems}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewMovieFilterItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource MEDIA_POSTER_CONTAINER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Label x:Name="ItemLabel" Grid.Row="1" Grid.Column="0" Content="{Binding SimpleTitle}" HorizontalAlignment="Center"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Image Width="{StaticResource MEDIA_POSTER_WIDTH}" Height="{StaticResource MEDIA_POSTER_HEIGHT}" Stretch="Uniform" Grid.Row="0" Grid.Column="1">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="MovieCollection" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource FANART_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource FANART_POSTER_HEIGHT}"/>
        </Image.Source>
      </Image>
    </Grid>
  </ControlTemplate>

  <!-- Movies Item -->
  <ControlTemplate x:Key="ListViewMovieItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform" FallbackSource="VideoSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Movie" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource MEDIA_THUMB_WIDTH_S}" fanart:MaxHeight="{StaticResource MEDIA_THUMB_HEIGHT_S}"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform" FallbackSource="VideoSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Movie" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource MEDIA_THUMB_WIDTH_M}" fanart:MaxHeight="{StaticResource MEDIA_THUMB_HEIGHT_M}"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform" FallbackSource="VideoLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Movie" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource MEDIA_THUMB_WIDTH_L}" fanart:MaxHeight="{StaticResource MEDIA_THUMB_HEIGHT_L}"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding MovieName}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="Duration" Grid.Row="0" Grid.Column="2" Content="{Binding Duration}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Grid x:Name="Details" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Stretch">
        <Grid.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} != {LayoutSize}.{Small}"/>
        </Grid.IsVisible>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="200"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="200"/>
        </Grid.ColumnDefinitions>
        <Label x:Name="VideoEncodingTitle" Grid.Column="0" Content="Video: " FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
        <Label x:Name="VideoEncoding" Grid.Column="1" Content="{Binding VideoEncoding}" FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
        <Label x:Name="AudioEncodingTitle" Grid.Column="2" Content="Audio: " FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
        <Label x:Name="AudioEncoding" Grid.Column="3" Content="{Binding AudioEncoding}" FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
      </Grid>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewMovieItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource MEDIA_POSTER_CONTAINER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Label x:Name="ItemLabel" Grid.Row="1" Grid.Column="0" Content="{Binding MovieName}" HorizontalAlignment="Center"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Image Width="{StaticResource MEDIA_POSTER_WIDTH}" Height="{StaticResource MEDIA_POSTER_HEIGHT}" Stretch="Uniform" Grid.Row="0" Grid.Column="1"
        FallbackSource="VideoLarge.png">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Movie" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource MEDIA_POSTER_WIDTH}" fanart:MaxHeight="{StaticResource MEDIA_POSTER_HEIGHT}"/>
        </Image.Source>
      </Image>
    </Grid>
  </ControlTemplate>

  <!-- Container -->
  <ControlTemplate x:Key="ListViewContainerItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            Source="NavigationSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
            Source="NavigationSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
            Source="NavigationLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="NumItems" Grid.Row="0" Grid.Column="2" Content="{Binding NumItems}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewContainerItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource GRIDVIEW_FILTER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource GRIDVIEW_FILTER_HEIGHT}"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Image x:Name="ItemTypeImage" Grid.Row="0" Stretch="Uniform" Source="NavigationLarge.png"
           Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}"/>
      <Label x:Name="ItemLabel" Grid.Row="1" Content="{Binding SimpleTitle}" Color="{ThemeResource TextColor}"
           FontSize="{ThemeResource SmallFontSize}" HorizontalAlignment="Center"/>
    </Grid>
  </ControlTemplate>

  <!-- Video -->
  <ControlTemplate x:Key="ListViewVideoItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="VideoSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="VideoSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="VideoLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="Duration" Grid.Row="0" Grid.Column="2" Content="{Binding Duration}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Grid x:Name="Details" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Stretch">
        <Grid.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} != {LayoutSize}.{Small}"/>
        </Grid.IsVisible>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="200"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="200"/>
        </Grid.ColumnDefinitions>
        <Label x:Name="VideoEncodingTitle" Grid.Column="0" Content="Video: " FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
        <Label x:Name="VideoEncoding" Grid.Column="1" Content="{Binding VideoEncoding}" FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
        <Label x:Name="AudioEncodingTitle" Grid.Column="2" Content="Audio: " FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
        <Label x:Name="AudioEncoding" Grid.Column="3" Content="{Binding AudioEncoding}" FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
      </Grid>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewVideoItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource GRIDVIEW_FILTER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource GRIDVIEW_FILTER_HEIGHT}"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Image x:Name="ItemTypeImage" Grid.Row="0" Stretch="Uniform" Source="{Binding MediaItem}"
           Thumbnail="True" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}"
           FallbackSource="VideoLarge.png"/>
      <Label x:Name="ItemLabel" Grid.Row="1" Content="{Binding SimpleTitle}" FontSize="{ThemeResource SmallFontSize}"
           Color="{ThemeResource TextColor}" HorizontalAlignment="Center"/>
    </Grid>
  </ControlTemplate>

  <!-- Audio -->
  <ControlTemplate x:Key="ListViewAudioItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel Grid.Row="0" Grid.Column="0" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="AudioSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="AudioSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="AudioLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Column="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="Duration" Grid.Column="2" Content="{Binding Duration}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewAudioItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource GRIDVIEW_FILTER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource GRIDVIEW_FILTER_HEIGHT}"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Image x:Name="ItemTypeImage" Grid.Row="0" Stretch="Uniform" Source="{Binding MediaItem}" FallbackSource="AudioLarge.png"
           Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}"/>
      <Label x:Name="ItemLabel" Grid.Row="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"
          HorizontalAlignment="Center"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="ListViewAlbumItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel Grid.Row="0" Grid.Column="0" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform" FallbackSource="AudioSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Album" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource MEDIA_THUMB_WIDTH_S}" fanart:MaxHeight="{StaticResource MEDIA_THUMB_HEIGHT_S}"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform" FallbackSource="AudioSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Album" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource MEDIA_THUMB_WIDTH_M}" fanart:MaxHeight="{StaticResource MEDIA_THUMB_HEIGHT_M}"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform" FallbackSource="AudioLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.Source>
            <fanart:FanArtImageSource fanart:FanArtMediaType="Album" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource MEDIA_THUMB_WIDTH_L}" fanart:MaxHeight="{StaticResource MEDIA_THUMB_HEIGHT_L}"/>
          </Image.Source>
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Column="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewAlbumItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource GRIDVIEW_FILTER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource GRIDVIEW_FILTER_HEIGHT}"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <Image x:Name="ItemTypeImage" Grid.Row="0" Stretch="Uniform" FallbackSource="AudioLarge.png"
           Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
        <Image.Source>
          <fanart:FanArtImageSource fanart:FanArtMediaType="Album" fanart:FanArtType="Poster" fanart:FanArtName="{Binding MediaItem.MediaItemId}"
                                    fanart:MaxWidth="{StaticResource MEDIA_THUMB_WIDTH_L}" fanart:MaxHeight="{StaticResource MEDIA_THUMB_HEIGHT_L}"/>
        </Image.Source>
      </Image>
      <Label x:Name="ItemLabel" Grid.Row="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"
          HorizontalAlignment="Center"/>
    </Grid>
  </ControlTemplate>

  <!-- Image -->
  <ControlTemplate x:Key="ListViewImageItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="Auto"/>
        <ColumnDefinition Width="*"/>
        <ColumnDefinition Width="Auto"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="Auto"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <DockPanel Grid.Row="0" Grid.Column="0" Grid.RowSpan="2" Margin="0,0,4,0">
        <Image x:Name="ItemTypeSmall" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="ImageSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_S}" Height="{StaticResource MEDIA_THUMB_HEIGHT_S}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Small}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeMedium" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="ImageSmall.png" Width="{StaticResource MEDIA_THUMB_WIDTH_M}" Height="{StaticResource MEDIA_THUMB_HEIGHT_M}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Medium}"/>
          </Image.IsVisible>
        </Image>
        <Image x:Name="ItemTypeLarge" Stretch="Uniform"
            Source="{Binding MediaItem}" FallbackSource="ImageLarge.png" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}">
          <Image.IsVisible>
            <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} == {LayoutSize}.{Large}"/>
          </Image.IsVisible>
        </Image>
      </DockPanel>
      <Label x:Name="ItemLabel" Grid.Row="0" Grid.Column="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Label x:Name="Size" Grid.Row="0" Grid.Column="2" Content="{Binding Size}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
      <Grid x:Name="Details" Grid.Row="1" Grid.Column="1" Grid.ColumnSpan="2" HorizontalAlignment="Stretch">
        <Grid.IsVisible>
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutSize" Converter="{StaticResource ExpressionValueConverter}" ConverterParameter="{}{0} != {LayoutSize}.{Small}"/>
        </Grid.IsVisible>
        <Grid.ColumnDefinitions>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="200"/>
          <ColumnDefinition Width="Auto"/>
          <ColumnDefinition Width="200"/>
        </Grid.ColumnDefinitions>
        <Label x:Name="FileTypeTitle" Grid.Column="0" Content="File type: " FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
        <Label x:Name="FileType" Grid.Column="1" Content="{Binding Extension}" FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
        <Label x:Name="MimeTypeTitle" Grid.Column="2" Content="Mime type: " FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
        <Label x:Name="MimeType" Grid.Column="3" Content="{Binding MimeType}" FontSize="{ThemeResource SmallFontSize}" Color="{StaticResource MediaDetailsColor}"/>
      </Grid>
    </Grid>
  </ControlTemplate>

  <ControlTemplate x:Key="GridViewImageItemTemplate">
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="{StaticResource GRIDVIEW_FILTER_WIDTH}"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="{StaticResource GRIDVIEW_FILTER_HEIGHT}"/>
        <RowDefinition Height="Auto"/>
      </Grid.RowDefinitions>
      <!-- For grid layout, we only support large layout size -->
      <Image x:Name="ItemTypeImage" Grid.Row="0" Stretch="Uniform" Source="{Binding MediaItem}"
           Thumbnail="True" Width="{StaticResource MEDIA_THUMB_WIDTH_L}" Height="{StaticResource MEDIA_THUMB_HEIGHT_L}"
           FallbackSource="ImageLarge.png"/>
      <Label x:Name="ItemLabel" Grid.Row="1" Content="{Binding SimpleTitle}"
          Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"
          HorizontalAlignment="Center"/>
    </Grid>
  </ControlTemplate>

  <!-- Specific media navigation data templates -->
  <DataTemplate DataType="{x:Type navitems:ContainerItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewContainerItemTemplate}"/>
          <Binding Source="{StaticResource GridViewContainerItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:SeriesFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewSeriesFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewSeriesFilterItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:SeasonFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewSeriesSeasonFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewSeriesSeasonFilterItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:MovieFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewMovieFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewMovieFilterItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>
  
  <DataTemplate DataType="{x:Type navitems:FilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewFilterItemTemplate}"/>
          <Binding Source="{StaticResource GridViewFilterItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:VideoItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewVideoItemTemplate}"/>
          <Binding Source="{StaticResource GridViewVideoItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:MovieItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewMovieItemTemplate}"/>
          <Binding Source="{StaticResource GridViewMovieItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:AudioItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewAudioItemTemplate}"/>
          <Binding Source="{StaticResource GridViewAudioItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:AlbumFilterItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewAlbumItemTemplate}"/>
          <Binding Source="{StaticResource GridViewAlbumItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataTemplate DataType="{x:Type navitems:ImageItem}">
    <Control>
      <Control.Template>
        <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
          <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
          <Binding Source="{StaticResource ListViewImageItemTemplate}"/>
          <Binding Source="{StaticResource GridViewImageItemTemplate}"/>
        </MultiBinding>
      </Control.Template>
    </Control>
  </DataTemplate>

  <DataStringProvider x:Key="MediaItemDataStringProvider" Path="SimpleTitle"/>

  <Model x:Key="MediaItemsActionModel" Id="970649B2-CAE8-4830-A985-E5E78F3CB24F"/>

  <!-- An item list container used for MediaItems. Additionally to the standard "Button", it adds a context menu command  -->
  <Style x:Key="MediaItemWithContextMenuContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Style="{ThemeResource ButtonWideStyle}"
                  Command="{DynamicResource ResourceKey=Menu_Command}"
                  IsEnabled="{Binding Enabled}"
                  SetFocusPrio="{Binding Path=Selected,Mode=OneTime,Converter={StaticResource BoolToFocusPriorityConverter},ConverterParameter=Highest}">
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
                <Setter Property="StackPanel.ZIndex" Value="100.0"/>
              </Trigger>
            </Button.Triggers>
            <Button.ContextMenuCommand>
              <Command Source="{StaticResource MediaItemsActionModel}" Path="ShowMediaItemActions" Parameters="{LateBoundValue BindingValue={Binding MediaItem}}"/>
            </Button.ContextMenuCommand>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MediaItemsListListViewStyle" BasedOn="{ThemeResource ContentsMenuListViewStyle}">
    <Setter Property="ItemTemplate"/> <!-- Don't inherit the ItemTemplate from ContentsMenuListViewStyle - It should remain null to make the SkinEngine choose an appropriate template -->
    <Setter Property="DataStringProvider" Value="{ThemeResource MediaItemDataStringProvider}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource MediaItemWithContextMenuContainerStyle}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <ScrollViewer CanContentScroll="True" Margin="5"
              HorizontalScrollBarVisibility="Disabled" HorizontalAlignment="Stretch" VerticalAlignment="Stretch">
            <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <BindingSetter Property="ItemsPanel">
      <BindingSetter.BindingWrapper>
        <BindingWrapper>
          <BindingWrapper.Binding>
            <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} == {LayoutType}.{ListLayout} ? {1} : {2}">
              <Binding Source="{StaticResource ViewModeModel}" Path="LayoutType"/>
              <Binding>
                <Binding.Source>
                  <ItemsPanelTemplate>
                    <VirtualizingStackPanel x:Name="ListItemsHost" IsItemsHost="True"/>
                  </ItemsPanelTemplate>
                </Binding.Source>
              </Binding>
              <Binding>
                <Binding.Source>
                  <ItemsPanelTemplate>
                    <VirtualizingWrapPanel x:Name="GridItemsHost" IsItemsHost="True"/>
                  </ItemsPanelTemplate>
                </Binding.Source>
              </Binding>
            </MultiBinding>
          </BindingWrapper.Binding>
        </BindingWrapper>
      </BindingSetter.BindingWrapper>
    </BindingSetter>
  </Style>

  <!-- Latest media styles -->
  <Model x:Key="MediaModel" Id="4CDD601F-E280-43b9-AD0A-6D7B2403C856"/>

  <Style x:Key="LatestMediaListViewStyle" BasedOn="{ThemeResource MediaItemsListListViewStyle}">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <UniformGrid x:Name="ListItemsHost" Columns="{x:Static latestmedia:LatestMediaModel.QUERY_LIMIT}" IsItemsHost="True" />
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate x:Key="NestedMediaListDataTemplate" DataType="{x:Type collections:ListItem}">
    <StackPanel>
      <Label Content="{Binding [Name]}" Color="{ThemeResource TextColor}" />

      <ListView x:Name="MediaItemsList" Style="{ThemeResource LatestMediaListViewStyle}" ItemsSource="{Binding Items}"
                HorizontalAlignment="Stretch">
        <ListView.Resources>
          <Command x:Key="Menu_Command" Source="{StaticResource MediaModel}" Path="Select" Parameters="{LateBoundValue BindingValue={Binding}}"/>
        </ListView.Resources>
      </ListView>
    </StackPanel>
  </DataTemplate>

  <Style x:Key="NestedMediaListViewStyle" BasedOn="{ThemeResource DefaultListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource NestedMediaListDataTemplate}"/>
  </Style>

</ResourceDictionary>
