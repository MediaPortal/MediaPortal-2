<?xml version="1.0" encoding="utf-8"?>
<ResourceDictionary
    xmlns="www.team-mediaportal.com/2008/mpf/directx"
    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
    xmlns:system="clr-namespace:System"
    xmlns:collections="clr-namespace:MediaPortal.UI.Presentation.DataObjects;assembly=MediaPortal.UI"
    xmlns:mp_special_controls="clr-namespace:MediaPortal.UI.SkinEngine.SpecialElements.Controls;assembly=SkinEngine"
    xmlns:fanart="clr-namespace:MediaPortal.Extensions.UserServices.FanArtService.Client;assembly=FanArtService.Client"
    xmlns:bgm="clr-namespace:MediaPortal.UiComponents.BackgroundManager.Converter;assembly=BackgroundManager"
    xmlns:wmc="clr-namespace:MediaPortal.UiComponents.WMCSkin.Controls;assembly=WMCSkin"
    xmlns:wmcc="clr-namespace:MediaPortal.UiComponents.WMCSkin.Converters;assembly=WMCSkin"
    xmlns:aspect="clr-namespace:MediaPortal.Common.MediaManagement.DefaultItemAspects;assembly=MediaPortal.Common"
    DependsOnStyleResources="Colors,Buttons,Consts,OtherControls,Animations"
    >

  <!-- BackgroundManager model -->
  <Model x:Key="BackgroundManagerModel" Id="1F4CAEDE-7108-483d-B5C8-18BEC7EC58E5"/>
  <Model x:Key="HomeMenuModel" Id="2EAA2DAB-241F-432F-A487-CDD35CCD4309"/>
  <Model x:Key="ViewModeModel" Id="6997CD35-63F0-4F96-8997-E18C9382E2DC"/>
  <Model x:Key="GeneralPlayerModel" Id="A2F24149-B44C-498b-AE93-288213B87A1A"/>
 
  <bgm:ListItemActionIdConverter x:Key="ListItemActionIdConverter"/>
  <ExpressionMultiValueConverter x:Key="ExpressionMultiValueConverter"/>
  <StringFormatConverter x:Key="StringFormatConverter"/>
  <wmcc:IncludeItemsListActionFilter x:Key="IncludeItemsListActionFilter"/>
  <wmcc:ExcludeItemsListActionFilter x:Key="ExcludeItemsListActionFilter"/>
  <fanart:MediaItemAspectToBoolConverter x:Key="MediaItemAspectToBoolConverter"/>
  <fanart:InvertedMediaItemAspectToBoolConverter x:Key="InvertedMediaItemAspectToBoolConverter"/>

  <!--
  Workflow ActionIds that will be shown in MediaMenu by default. Other actions are excluded 
  Format has to be a ";" delimited list of Guids
  -->
  <!--ResourceWrapper x:Key="ActionIdFilter">
    D5D980B9-EB3C-4f07-AB20-0684C35D2764;
    652C8DEE-38F8-4479-BBB3-F25557641E60;
    63935BB2-3434-482b-BE52-EBE787522EA7;
    D83604C0-0936-4416-9DE8-7B6D7C50023C;
    36FA3773-8428-4e0c-BE5B-4ECFF5A5E11F;
    9C3E6701-6856-49ec-A4CD-0CEB15F385F6;
    985AD907-0EDB-4feb-AA99-2B52DDEADE6F;
    09eae702-d9ec-4325-82d9-4843502c966b
  </-->

  <ResourceWrapper x:Key="ActionIdFilter">
    D5D980B9-EB3C-4f07-AB20-0684C35D2764;
    652C8DEE-38F8-4479-BBB3-F25557641E60;
    63935BB2-3434-482b-BE52-EBE787522EA7
  </ResourceWrapper>

  <!-- default brush used to paint the background of a page/window -->
  <ResourceWrapper x:Key="BackgroundBrush">
    <ImageBrush x:Name="BackdropImageBackground" ImageSource="Background.png" />
  </ResourceWrapper>

  <Style x:Key="VerticalScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid x:Name="ScrollViewerGrid">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!-- Content -->
            <wmc:HomeMenuContentPresenter x:Name="AnimatedScroller" Grid.Row="0" Grid.Column="0" Grid.ZIndex="100" AutoCentering="Vertical"
                                    VerticalAlignment="Stretch" HorizontalAlignment="Stretch" EnableAnimations="{Binding Source={StaticResource HomeMenuModel}, Path=EnableMainMenuAnimations}">
              <wmc:HomeMenuContentPresenter.Triggers>
                <EventTrigger RoutedEvent="AnimatedScrollContentPresenter.Scroll">
                  <EventTrigger.Actions>
                    <BeginStoryboard Storyboard="{ThemeResource HomeMenuScrollAnimation}"/>
                  </EventTrigger.Actions>
                </EventTrigger>
                <EventTrigger RoutedEvent="Screen.Show">
                  <TriggerCommand Command="{Command Source={StaticResource HomeMenuModel}, Path=EnableAnimations}"/>
                </EventTrigger>
                <EventTrigger RoutedEvent="Screen.Hide">
                  <TriggerCommand Command="{Command Source={StaticResource HomeMenuModel}, Path=DisableAnimations}"/>
                </EventTrigger>
              </wmc:HomeMenuContentPresenter.Triggers>
              <wmc:HomeMenuContentPresenter.OpacityMask>
                <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                  <GradientStop Color="Transparent" Offset="0.03" />
                  <GradientStop Color="Black" Offset="0.16" />
                  <GradientStop Color="Black" Offset="0.85" />
                  <GradientStop Color="Transparent" Offset="0.98" />
                </LinearGradientBrush>
              </wmc:HomeMenuContentPresenter.OpacityMask>
            </wmc:HomeMenuContentPresenter>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="HorizontalMediaScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid x:Name="ScrollViewerGridHorizontal" Margin="0,-50,0,-50"> 
            <!--The negative margin is necessary and needs to be compensated in the 
            ScrollContentPresenter to avoid graphic errors with grow effect-->
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!-- Content -->
            <ScrollContentPresenter Grid.Row="0" Grid.Column="0" Grid.ZIndex="50" Margin="0,50,0,50"
                VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            <Grid.OpacityMask>
              <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                <GradientStop Color="Transparent" Offset="0" />
                <GradientStop Color="Black" Offset="0.1" />
                <GradientStop Color="Black" Offset="0.9" />
                <GradientStop Color="Transparent" Offset="1" />
              </LinearGradientBrush>
            </Grid.OpacityMask>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="HorizontalTopMenuScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid x:Name="ScrollViewerGridHorizontal" Margin="0,-50,0,-50">
            <!--The negative margin is necessary and needs to be compensated in the 
            ScrollContentPresenter to avoid graphic errors with grow effect-->
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!-- Content -->
            <ScrollContentPresenter Grid.Row="0" Grid.Column="0" Grid.ZIndex="50" Margin="0,50,0,50"
                VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            <Grid.OpacityMask>
              <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                <GradientStop Color="Black" Offset="0" />
                <GradientStop Color="Black" Offset="0.1" />
                <GradientStop Color="Black" Offset="0.9" />
                <GradientStop Color="Transparent" Offset="1" />
              </LinearGradientBrush>
            </Grid.OpacityMask>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="VerticalMediaScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid x:Name="ScrollViewerGridHorizontal">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!-- Content -->
            <ScrollContentPresenter Grid.Row="0" Grid.Column="0" Grid.ZIndex="1"
                VerticalAlignment="Stretch" HorizontalAlignment="Stretch"/>
            <Grid.OpacityMask>
              <LinearGradientBrush StartPoint="0,0" EndPoint="0,1">
                <GradientStop Color="Transparent" Offset="0" />
                <GradientStop Color="Black" Offset="0.12" />
                <GradientStop Color="Black" Offset="0.88" />
                <GradientStop Color="Transparent" Offset="1" />
              </LinearGradientBrush>
            </Grid.OpacityMask>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="AutoCenterScrollViewerStyle" TargetType="{x:Type ScrollViewer}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ScrollViewer}">
          <Grid x:Name="ScrollViewerGrid">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!-- Content -->
            <wmc:SubItemsContentPresenter x:Name="AnimatedScroller" Grid.Row="0" Grid.Column="0" Grid.ZIndex="100" AutoCentering="Horizontal"
                                          VerticalAlignment="Stretch" HorizontalAlignment="Stretch"
                                          EnableAnimations="{Binding Source={StaticResource HomeMenuModel}, Path=EnableSubMenuAnimations}"
                                          CurrentIndex="{Binding Source={StaticResource HomeMenuModel}, Path=CurrentSubItemIndex, Mode=OneWayToSource}">
              <wmc:SubItemsContentPresenter.Triggers>
                <EventTrigger RoutedEvent="AnimatedScrollContentPresenter.Scroll">
                  <EventTrigger.Actions>
                    <BeginStoryboard Storyboard="{ThemeResource HomeMenuScrollAnimation}"/>
                  </EventTrigger.Actions>
                </EventTrigger>
              </wmc:SubItemsContentPresenter.Triggers>
            </wmc:SubItemsContentPresenter>
            <!--Grid.OpacityMask>
              <LinearGradientBrush StartPoint="0,0" EndPoint="1,0">
                <GradientStop Color="Transparent" Offset="0.01" />
                <GradientStop Color="Black" Offset="0.15" />
                <GradientStop Color="Black" Offset="0.85" />
                <GradientStop Color="Transparent" Offset="0.99" />
              </LinearGradientBrush>
            </-->
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="SubItemContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Style="{ThemeResource SubItemButtonStyle}"
                  Command="{DynamicResource ResourceKey=Menu_Command}"
                  SetFocusPrio="{Binding Path=Selected, Converter={StaticResource BoolToFocusPriorityConverter}, ConverterParameter=Highest}">

            <Button.IsEnabled>
              <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} &amp;&amp; {1}">
                <!-- Consider the item's enabled state -->
                <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="IsEnabled"/>
                <!-- In combination with the parent ListView's enabled state -->
                <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type ListView}}" Path="IsEnabled"/>
              </MultiBinding>
            </Button.IsEnabled>
            
            <Button.Resources>
              <Storyboard x:Key="FocusGrowStoryboard" FillBehavior="HoldEnd">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" AccelerationRatio="0.3" DecelerationRatio="0.3"
                                               Storyboard.TargetName="SubMenuImage" Storyboard.TargetProperty="RenderTransform.ScaleX">
                  <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.4" Value="1.18"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" AccelerationRatio="0.3" DecelerationRatio="0.3"
                                               Storyboard.TargetName="SubMenuImage" Storyboard.TargetProperty="RenderTransform.ScaleY">
                  <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.4" Value="1.18"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
              <Storyboard x:Key="FocusShrinkStoryboard" FillBehavior="HoldEnd">
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" AccelerationRatio="0.3" DecelerationRatio="0.3"
                                               Storyboard.TargetName="SubMenuImage" Storyboard.TargetProperty="RenderTransform.ScaleX">
                  <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.18"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.4" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
                <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" AccelerationRatio="0.3" DecelerationRatio="0.3"
                                               Storyboard.TargetName="SubMenuImage" Storyboard.TargetProperty="RenderTransform.ScaleY">
                  <SplineDoubleKeyFrame KeyTime="00:00:00" Value="1.18"/>
                  <SplineDoubleKeyFrame KeyTime="00:00:00.4" Value="1"/>
                </DoubleAnimationUsingKeyFrames>
              </Storyboard>
            </Button.Resources>
            <Button.Triggers>
              <DataTrigger Binding="{Binding Selected}" Value="True">
                <Setter TargetName="ButtonControlGrid" Property="IsVisible" Value="True"/>
                <Setter TargetName="ItemLabelUnfocused" Property="IsVisible" Value="False"/>
                <Setter TargetName="ItemLabelUnfocused" Property="Opacity" Value="1"/>
                <Setter TargetName="ItemLabel" Property="IsVisible" Value="True"/>
                <Setter Property="StackPanel.ZIndex" Value="100.0"/>
              </DataTrigger>
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Property="HasFocus" Value="True"/>
                  <Condition Binding="{Binding Selected}" Value="False"/>
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                  <BeginStoryboard x:Name="SubMenuItem_Grow" Storyboard="{StaticResource FocusGrowStoryboard}"/>
                </MultiTrigger.EnterActions>
                <MultiTrigger.ExitActions>
                  <BeginStoryboard x:Name="SubMenuItem_Shrink" Storyboard="{StaticResource FocusShrinkStoryboard}"/>
                </MultiTrigger.ExitActions>
              </MultiTrigger>
            </Button.Triggers>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ListView style to be used for main menu -->
  <DataTemplate x:Key="SubMenuItemDataTemplate">
    <DataTemplate.Resources>
      <Storyboard x:Key="MoveRight" FillBehavior="HoldEnd">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="Bling_horizontal" Storyboard.TargetProperty="RenderTransform.X">
          <SplineDoubleKeyFrame KeyTime="00:00:00.500" Value="-280"/>
          <SplineDoubleKeyFrame KeyTime="00:00:02.500" Value="20"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="Bling_horizontal" Storyboard.TargetProperty="Opacity">
          <SplineDoubleKeyFrame KeyTime="00:00:00.000" Value="0"/>
          <SplineDoubleKeyFrame KeyTime="00:00:00.500" Value="0"/>
          <SplineDoubleKeyFrame KeyTime="00:00:01.000" Value="0.8"/>
          <SplineDoubleKeyFrame KeyTime="00:00:02.050" Value="0.8"/>
          <SplineDoubleKeyFrame KeyTime="00:00:02.501" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="MoveDown" FillBehavior="HoldEnd">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="Bling_vertical" Storyboard.TargetProperty="RenderTransform.Y">
          <SplineDoubleKeyFrame KeyTime="00:00:02.200" Value="-10"/>
          <SplineDoubleKeyFrame KeyTime="00:00:04.000" Value="120"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="Bling_vertical" Storyboard.TargetProperty="Opacity">
          <SplineDoubleKeyFrame KeyTime="00:00:00.000" Value="0"/>
          <SplineDoubleKeyFrame KeyTime="00:00:02.050" Value="0"/>
          <SplineDoubleKeyFrame KeyTime="00:00:03.450" Value="0.8"/>
          <SplineDoubleKeyFrame KeyTime="00:00:04.000" Value="0"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
      <Storyboard x:Key="Grow" FillBehavior="HoldEnd">
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="SubMenuImage" Storyboard.TargetProperty="RenderTransform.ScaleX">
          <SplineDoubleKeyFrame KeyTime="00:00:00.0" Value="1"/>
          <SplineDoubleKeyFrame KeyTime="00:00:00.40" Value="1.30"/>
        </DoubleAnimationUsingKeyFrames>
        <DoubleAnimationUsingKeyFrames BeginTime="00:00:00" FillBehavior="HoldEnd" Storyboard.TargetName="SubMenuImage" Storyboard.TargetProperty="RenderTransform.ScaleY">
          <SplineDoubleKeyFrame KeyTime="00:00:00.0" Value="1"/>
          <SplineDoubleKeyFrame KeyTime="00:00:00.40" Value="1.30"/>
        </DoubleAnimationUsingKeyFrames>
      </Storyboard>
    </DataTemplate.Resources>
    
    <Grid x:Name="ItemControl">
      <Grid.ColumnDefinitions>
        <ColumnDefinition Width="*"/>
      </Grid.ColumnDefinitions>
      <Grid.RowDefinitions>
        <RowDefinition Height="*"/>
      </Grid.RowDefinitions>
      <Grid.Triggers>
        <!--Triggers the ContentPresenter to auto scroll the item to center-->
        <DataTrigger Binding="{Binding BringIntoView}" Value="True">
          <DataTrigger.EnterActions>
            <TriggerCommand>
              <TriggerCommand.Command>
                <Command ElementName="ItemControl" Path="BringIntoView"/>
              </TriggerCommand.Command>
            </TriggerCommand>
          </DataTrigger.EnterActions>
        </DataTrigger>
      </Grid.Triggers>
      
      <Image VerticalAlignment="Stretch" HorizontalAlignment="Stretch" Stretch="Uniform" x:Name="SubMenuImage"
             Margin="5" Grid.Row="0" Grid.Column="0" Opacity="0.8" RenderTransformOrigin="0.5,0.5" Width="260">
        <Image.RenderTransform>
          <ScaleTransform ScaleX="1.0" ScaleY="1.0"></ScaleTransform>
        </Image.RenderTransform>
        <Image.Source>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1}+{2} : {1}+{3}">
            <Binding Path="Selected"/>
            <Binding Source="HomeMenu\"/>
            <Binding Source="{Binding Converter={StaticResource ListItemActionIdConverter}, ConverterParameter=focus.png}"/>
            <Binding Source="{Binding Converter={StaticResource ListItemActionIdConverter}, ConverterParameter=nofocus.png}"/>
          </MultiBinding>
        </Image.Source>
        <Image.Triggers>
          <DataTrigger Binding="{Binding Selected}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard x:Name="Grow_BeginStoryboard" Storyboard="{ThemeResource Grow}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <StopStoryboard BeginStoryboardName="Grow_BeginStoryboard"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Image.Triggers>
      </Image>
      
      <Image x:Name="Bling_horizontal" VerticalAlignment="Top" Stretch="Fill" HorizontalAlignment="Right" 
             Height="4" Width="60" Grid.Row="0" Grid.Column="0" Source="Bling_hori.png" Margin="0,0,0,4"
             IsVisible="{Binding Selected}">
        <Image.RenderTransform>
          <TranslateTransform X="0"/>
        </Image.RenderTransform>
        <Image.Triggers>
          <DataTrigger Binding="{Binding Selected}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard x:Name="MoveRight_BeginStoryboard" Storyboard="{ThemeResource MoveRight}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <StopStoryboard BeginStoryboardName="MoveRight_BeginStoryboard"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Image.Triggers>
      </Image>
      <Image x:Name="Bling_vertical" VerticalAlignment="Top" Stretch="Fill" HorizontalAlignment="Right" 
             Height="60" Width="4" Grid.Row="0" Grid.Column="0" Source="Bling_vert.png" Margin="0,0,-26,0" 
             IsVisible="{Binding Selected}">
        <Image.RenderTransform>
          <TranslateTransform Y="0"/>
        </Image.RenderTransform>
        <Image.Triggers>
          <DataTrigger Binding="{Binding Selected}" Value="True">
            <DataTrigger.EnterActions>
              <BeginStoryboard x:Name="MoveDown_BeginStoryboard" Storyboard="{ThemeResource MoveDown}"/>
            </DataTrigger.EnterActions>
            <DataTrigger.ExitActions>
              <StopStoryboard BeginStoryboardName="MoveDown_BeginStoryboard"/>
            </DataTrigger.ExitActions>
          </DataTrigger>
        </Image.Triggers>
      </Image>
    </Grid>
  </DataTemplate>

  <Style x:Key="SubMenuListViewStyle" BasedOn="{ThemeResource DefaultListViewStyle}">
    <!--<EventSetter Event="SelectionChanged" Handler="{CommandStencil Source={StaticResource BackgroundManagerModel}, Path=SetSelectedItem}"/>-->
    <EventSetter Event="MouseWheel" Handler="{CommandStencil Source={StaticResource HomeMenuModel}, Path=OnMouseWheel}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <ScrollViewer CanContentScroll="True" Margin="0" Style="{ThemeResource AutoCenterScrollViewerStyle}" 
                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled" >
            <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel x:Name="ListItemsHost" IsItemsHost="True" Orientation="Horizontal"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="StackPanel.ZIndex" Value="100.0"/>
    <Setter Property="ItemTemplate" Value="{ThemeResource SubMenuItemDataTemplate}"/>
    <Setter Property="DataStringProvider" Value="{ThemeResource MainMenuItemDataStringProvider}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource SubItemContainerStyle}"/>
  </Style>

  <Style x:Key="MyMainMenuContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Control x:Name="MainMenuItemContainer">
            <Control.RenderTransform>
              <TranslateTransform Y="0" X="0"/>
            </Control.RenderTransform>
            <Control.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter Property="StackPanel.ZIndex" Value="100.0"/>
              </Trigger>
              
              <!--Quick animation for when animations are disabled (A simple setter doesn't seem to work when Property is in the form AttachedProperty.Property)-->
              <DataTrigger Binding="{Binding AfterSelected}" Value="True">
                <DataTrigger.EnterActions>
                  <BeginStoryboard x:Name="BeginMainItemTransformAnimationQuick" Storyboard="{ThemeResource MainItemTransformAnimationQuick}"/>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                  <BeginStoryboard x:Name="BeginMainItemTransformAnimationReverse" Storyboard="{ThemeResource MainItemTransformAnimationReverse}"/>
                </DataTrigger.ExitActions>
              </DataTrigger>
              
              <!--Full animation when animations are enabled-->
              <MultiTrigger>
                <MultiTrigger.Conditions>
                  <Condition Binding="{Binding AfterSelected}" Value="True"/>
                  <Condition Binding="{Binding Source={StaticResource HomeMenuModel}, Path=EnableMainMenuAnimations}" Value="True" />
                </MultiTrigger.Conditions>
                <MultiTrigger.EnterActions>
                  <BeginStoryboard x:Name="BeginMainItemTransformAnimation" Storyboard="{ThemeResource MainItemTransformAnimation}"/>
                </MultiTrigger.EnterActions>
              </MultiTrigger>
              
              <!--Triggers the ContentPresenter to auto scroll the item to center-->
              <DataTrigger Binding="{Binding Selected}" Value="True">
                <DataTrigger.EnterActions>
                  <TriggerCommand>
                    <TriggerCommand.Command>
                      <Command x:Key="SelectionChanged_Command"
                         ElementName="MainMenuItemContainer"
                         Path="BringIntoView"/>
                    </TriggerCommand.Command>
                  </TriggerCommand>
                  <BeginStoryboard x:Name="BeginTranslateXAnimation" Storyboard="{ThemeResource SelectedMainItemAnimation}"/>
                </DataTrigger.EnterActions>
                <DataTrigger.ExitActions>
                  <BeginStoryboard x:Name="BeginTranslateXAnimationReverse" Storyboard="{ThemeResource SelectedMainItemAnimationReverse}"/>
                </DataTrigger.ExitActions>
              </DataTrigger>
            </Control.Triggers>
            <Control.TemplateControl>
              <ContentPresenter/>
            </Control.TemplateControl>
          </Control>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate x:Key="MyMainMenuItemDataTemplate">
    <StackPanel x:Name="ItemControl" Orientation="Horizontal">
      <Label x:Name="ItemLabel" Content="{Binding [Name]}"
            HorizontalAlignment="Left" VerticalAlignment="Center"
            Color="{ThemeResource MenuTextBackground}" Height="91"
            FontSize="{ThemeResource HugeFontSize}" Margin="20,0,0,0"
            >
        <Label.Color>
          <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} ? {1} : {2}">
            <Binding Path="Selected"/>
            <Binding Source="{ThemeResource MenuTextForeground}"/>
            <Binding Source="{ThemeResource MenuTextBackground}"/>
          </MultiBinding>
        </Label.Color>
      </Label>
    </StackPanel>
  </DataTemplate>

  <Style x:Key="MyMainMenuListViewStyle" BasedOn="{ThemeResource DefaultListViewStyle}">
    <EventSetter Event="MouseWheel" Handler="{CommandStencil Source={StaticResource HomeMenuModel}, Path=OnMouseWheel}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <ScrollViewer CanContentScroll="False" Margin="10" Style="{ThemeResource VerticalScrollViewerStyle}" 
               HorizontalAlignment="Stretch" VerticalAlignment="Stretch" HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled" >
            <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel x:Name="ListItemsHost" IsItemsHost="True" Orientation="Vertical"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemTemplate" Value="{ThemeResource MyMainMenuItemDataTemplate}"/>
    <Setter Property="DataStringProvider" Value="{ThemeResource MainMenuItemDataStringProvider}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource MyMainMenuContainerStyle}"/>
  </Style>

  <DataTemplate x:Key="TopMenuItemDataTemplate">
    <DockPanel LastChildFill="False">
      <Image DockPanel.Dock="Center" HorizontalAlignment="Center" VerticalAlignment="Center" FallbackSource="TopMenu\search.png"
                   Width="28" Height="28" Stretch="Fill" Margin="0" Opacity="1" x:Name="ItemControl">
        <Image.Source>
          <Binding Path="AdditionalProperties[MenuModel: Item-Action].ActionId" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}TopMenu\{0}.png"/>
        </Image.Source>
      </Image>
    </DockPanel>
  </DataTemplate>

  <Style x:Key="TopMenuItemContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <DockPanel x:Name="ItemGroup" Width="430" Height="45">
            <Button Style="{ThemeResource TopMenuButtonWideStyle}" Margin="20,0,5,0" DockPanel.Dock="Left" 
                    Command="{DynamicResource ResourceKey=Menu_Command}" Width="65"
                    IsEnabled="{Binding Enabled}" SetFocus="{Binding Path=Selected,Mode=OneTime}">
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Color" Value="{ThemeResource TextColor}"/>
                  <Setter TargetName="ItemControl" Property="Opacity" Value="1"/>
                  <Setter Property="StackPanel.ZIndex" Value="100.0"/>
                </Trigger>
              </Button.Triggers>
            </Button>
            <Label x:Name="ItemLabel" Content="{Binding [Name]}" DockPanel.Dock="Right" TextTrimming="CharacterEllipsis"
                   HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,0" FontFamily="SegoeUIBold"
                   Color="{ThemeResource MenuTextBackground}" FontSize="{ThemeResource SmallFontSize}"/>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="TopMenuListViewStyle" BasedOn="{ThemeResource DefaultListViewStyle}">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <!--UniformGrid Columns="5" Rows="2" x:Name="ListItemsHost" IsItemsHost="True" Height="30"/-->
          <AnimatedWrapPanel x:Name="GridItemsHost" IsItemsHost="True" Orientation="Vertical" ScrollMargin="800,0" Margin="-795,0,-805,0">
            <AnimatedWrapPanel.Resources>
              <Storyboard x:Key="ScrollAnimation" FillBehavior="HoldEnd">
                <DoubleAnimation BeginTime="00:00:00" From="0" To="1" Duration="00:00:00.400" AccelerationRatio="0.3" DecelerationRatio="0.3"
                                 FillBehavior="HoldEnd" Storyboard.TargetName="GridItemsHost" Storyboard.TargetProperty="ScrollOffsetMultiplier" />
              </Storyboard>
            </AnimatedWrapPanel.Resources>
            <AnimatedWrapPanel.Triggers>
              <EventTrigger RoutedEvent="AnimatedWrapPanel.Scroll">
                <EventTrigger.Actions>
                  <BeginStoryboard Storyboard="{ThemeResource ScrollAnimation}"/>
                </EventTrigger.Actions>
              </EventTrigger>
            </AnimatedWrapPanel.Triggers>
          </AnimatedWrapPanel>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemTemplate" Value="{ThemeResource TopMenuItemDataTemplate}"/>
    <Setter Property="DataStringProvider" Value="{ThemeResource MainMenuItemDataStringProvider}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource TopMenuItemContainerStyle}"/>
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListView}">
          <ScrollViewer CanContentScroll="True" Margin="0" Style="{ThemeResource HorizontalTopMenuScrollViewerStyle}"
                        HorizontalAlignment="Stretch" VerticalAlignment="Stretch" 
                        HorizontalScrollBarVisibility="Disabled" VerticalScrollBarVisibility="Disabled" >
            <ItemsPresenter VerticalAlignment="Stretch" HorizontalAlignment="Stretch" />
          </ScrollViewer>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate x:Key="SlideMenuItemDataTemplate">
    <DockPanel LastChildFill="False">
      <Image DockPanel.Dock="Left" HorizontalAlignment="Center" VerticalAlignment="Center" FallbackSource="TopMenu\search.png"
                   Width="28" Height="28" Stretch="Fill" Margin="0" Opacity="1" x:Name="ItemControl">
        <Image.Source>
          <Binding Path="AdditionalProperties[MenuModel: Item-Action].ActionId" Converter="{StaticResource StringFormatConverter}" ConverterParameter="{}TopMenu\{0}.png"/>
        </Image.Source>
      </Image>
      <Label x:Name="ItemLabel" Content="{Binding [Name]}" DockPanel.Dock="Center"
             HorizontalAlignment="Left" VerticalAlignment="Center" Margin="10,0,0,0" Opacity="0.6"
             Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallFontSize}"/>
    </DockPanel>
  </DataTemplate>

  <Style x:Key="SlideMenuItemContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <DockPanel x:Name="ItemGroup">
            <Button Style="{ThemeResource ButtonWideStyle}" Margin="20,2,5,2" DockPanel.Dock="Center"
                    Command="{DynamicResource ResourceKey=Menu_Command}" IsEnabled="{Binding Enabled}"
                    SetFocus="{Binding Path=Selected,Mode=OneTime}">
              <Button.IsEnabled>
                <MultiBinding Converter="{StaticResource ExpressionMultiValueConverter}" ConverterParameter="{}{0} &amp;&amp; {1}">
                  <!-- Consider the item's enabled state -->
                  <Binding RelativeSource="{RelativeSource TemplatedParent}" Path="IsEnabled"/>
                  <!-- In combination with the parent ListView's enabled state -->
                  <Binding RelativeSource="{RelativeSource Mode=FindAncestor,AncestorType={x:Type ListView}}" Path="IsEnabled"/>
                </MultiBinding>
              </Button.IsEnabled>
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="ItemLabel" Property="Opacity" Value="1"/>
                  <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
                  <Setter TargetName="ItemControl" Property="Opacity" Value="1"/>
                  <Setter Property="StackPanel.ZIndex" Value="100.0"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </DockPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="SlideMenuListViewStyle" BasedOn="{ThemeResource DefaultListViewStyle}">
    <Setter Property="ItemsPanel">
      <Setter.Value>
        <ItemsPanelTemplate>
          <StackPanel Orientation="Vertical" x:Name="ListItemsHost" IsItemsHost="True"/>
        </ItemsPanelTemplate>
      </Setter.Value>
    </Setter>
    <Setter Property="ItemTemplate" Value="{ThemeResource SlideMenuItemDataTemplate}"/>
    <Setter Property="DataStringProvider" Value="{ThemeResource MainMenuItemDataStringProvider}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource SlideMenuItemContainerStyle}"/>
  </Style>

  <ControlTemplate x:Key="StarReadOnlyTemplate">
        <DockPanel LastChildFill="True" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}">
            <Grid RenderTransformOrigin="0.5,0.5">
                <!-- Star shape for background -->
                <Control Template="{ThemeResource StarPolygonTemplate}" Width="18" Height="18"/>

                <!-- Star shape for (partial) foreground -->
                <Control Template="{ThemeResource StarPolygonSelectedTemplate}" Width="18" Height="18">
                    <Control.OpacityMask>
                        <LinearGradientBrush StartPoint="0,0.5" EndPoint="1,0.5">
                            <GradientStop Color="#FF000000" Offset="0"/>
                            <GradientStop Color="#FF000000" Offset="{Binding Value}"/>
                            <GradientStop Color="#00000000" Offset="{Binding Value}"/>
                            <GradientStop Color="#00000000" Offset="1"/>
                        </LinearGradientBrush>
                    </Control.OpacityMask>
                </Control>
            </Grid>
        </DockPanel>
    </ControlTemplate>

  <!-- ListView style to be used for left main menu -->

  <Style x:Key="LeftMenuItemContainerStyle" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Style="{ThemeResource ButtonWideStyle}"
              Command="{DynamicResource ResourceKey=Menu_Command}"
              IsEnabled="{Binding Enabled}" SetFocus="{Binding Path=Selected,Mode=OneTime}">
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
                <Setter TargetName="ItemLabel" Property="Color" Value="{ThemeResource TextColor}"/>
                <Setter Property="StackPanel.ZIndex" Value="100.0"/>
              </Trigger>
            </Button.Triggers>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="MenuItemContainerStyleWide" BasedOn="{ThemeResource DefaultItemContainerStyle}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ListViewItem}">
          <Button Style="{ThemeResource MenuButtonWideStyle}"
              Command="{DynamicResource ResourceKey=Menu_Command}"
              IsEnabled="{Binding Enabled}" SetFocus="{Binding Path=Selected,Mode=OneTime}">
            <Button.Triggers>
              <Trigger Property="HasFocus" Value="True">
                <Setter TargetName="ItemLabel" Property="Scroll" Value="Auto"/>
                <Setter Property="StackPanel.ZIndex" Value="100.0"/>
              </Trigger>
            </Button.Triggers>
          </Button>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <DataTemplate x:Key="LeftMenuItemDataTemplate">
    <DockPanel x:Name="ItemControl" LastChildFill="False">
      <Label x:Name="ItemLabel" DockPanel.Dock="Center" Content="{Binding [Name]}"
          HorizontalAlignment="Left" VerticalAlignment="Center" Margin="0,-2,0,0" Height="48"
          Color="{ThemeResource WindowHeaderColor}"/>
    </DockPanel>
  </DataTemplate>

  <Style x:Key="MenuListViewStyle" BasedOn="{ThemeResource DefaultListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource DefaultItemDataTemplate}"/>
    <Setter Property="DataStringProvider" Value="{ThemeResource DefaultItemDataStringProvider}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource MenuItemContainerStyleWide}"/>
  </Style>

  <Style x:Key="LeftMenuListViewStyle" BasedOn="{ThemeResource DefaultListViewStyle}">
    <Setter Property="ItemTemplate" Value="{ThemeResource LeftMenuItemDataTemplate}"/>
    <Setter Property="DataStringProvider" Value="{ThemeResource MainMenuItemDataStringProvider}"/>
    <Setter Property="ItemContainerStyle" Value="{ThemeResource LeftMenuItemContainerStyle}"/>
  </Style>

  <!-- ****************************** PlayerControl ********************************** -->

  <Style x:Key="CPPlayerControlStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <Grid DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}" Context="{Model A2F24149-B44C-498b-AE93-288213B87A1A}">
            <StackPanel Orientation="Horizontal">
              <Button x:Name="CurrentlyPlaying" Style="{ThemeResource CPButtonStyle}" Command="{Command Source={StaticResource GeneralPlayerModel},Path=ToggleCurrentPlayer}">
                <Button.Triggers>
                  <Trigger Property="HasFocus" Value="True">
                    <Setter TargetName="image2" Property="Opacity" Value="1"/>
                  </Trigger>
                </Button.Triggers>
              </Button>
            </StackPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="NavigationScreenPlayerControlStyle" TargetType="{x:Type mp_special_controls:PlayerControl}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type mp_special_controls:PlayerControl}">
          <Grid x:Name="PCGroupBox" DataContext="{Binding RelativeSource={RelativeSource TemplatedParent}}"
                          IsVisible="{Binding ShowMouseControls}" VerticalAlignment="Bottom">

            <Grid x:Name="MediaInfoPanel" IsVisible="{Binding IsCurrentPlayer}">
              <Grid.RowDefinitions>
                <RowDefinition Height="Auto"/>
                <RowDefinition Height="Auto"/>
              </Grid.RowDefinitions>
              <Grid.ColumnDefinitions>
                <ColumnDefinition Width="Auto"/>
              </Grid.ColumnDefinitions>

              <!--Label x:Name="MediaItemTitle" Grid.Row="0" Grid.Column="0" Color="{ThemeResource TextColor}" FontSize="{ThemeResource SmallerFontSize}"
                                            Content="{Binding MediaItemTitle}" HorizontalAlignment="Center" VerticalAlignment="Center" Scroll="Auto">
                                    <Label.Triggers>
                                        <DataTrigger Binding="{Binding IsPlayerPresent}" Value="False">
                                            <Setter Property="Color" Value="{ThemeResource PlayerControlInactiveMediaItemColor}"/>
                                        </DataTrigger>
                                    </Label.Triggers>
                            </Label-->
              <StackPanel Grid.Row="1" Grid.Column="0"  HorizontalAlignment="Stretch" Orientation="Horizontal" Margin="0">
                <!-- Workaround to avoid layouting problems with LayoutTransform -->
                <StackPanel x:Name="MouseControlsPanel" Orientation="Horizontal">
                  <StackPanel.LayoutTransform>
                    <TransformGroup>
                      <ScaleTransform ScaleX="1.3" ScaleY="1.3"/>
                    </TransformGroup>
                  </StackPanel.LayoutTransform>
                  <Button x:Name="ToogleFullScreen" Style="{ThemeResource ToogleFullscreenButtonStyle}" Margin="5,0,0,0" 
                                                Command="{Command Source={Service WorkflowManager},Path=NavigatePush,Parameters=882C1142-8028-4112-A67D-370E6E483A33}"/>
                  <Button x:Name="StopButton" Style="{ThemeResource StopButtonStyle}" Margin="0" IsVisible="{Binding CanStop}"
                                                Command="{Command Stop}"/>
                  <Image Source="PlayerControl\DIVIDER.PNG" Height="35" Stretch="Uniform" VerticalAlignment="Center" Margin="3,0,3,0"/>
                  <Button x:Name="SkipBackButton" Style="{ThemeResource SkipBackButtonStyle}" Margin="0" IsVisible="{Binding CanSkipBack}"
                                                Command="{Command Previous}"/>
                  <Button x:Name="RewindButton" Style="{ThemeResource RewindButtonStyle}" Margin="0" IsVisible="{Binding CanSeekBackward}"
                                                Command="{Command SeekBackward}"/>
                  <Button x:Name="PlayButton" Style="{ThemeResource PlayButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPlay}"
                                                Command="{Command Play}"/>
                  <Button x:Name="PauseButton" Style="{ThemeResource PauseButtonStyle}" Margin="5,0,5,0" IsVisible="{Binding CanPause}"
                                                Command="{Command Pause}"/>
                  <Button x:Name="ForwardButton" Style="{ThemeResource ForwardButtonStyle}" Margin="0" IsVisible="{Binding CanSeekForward}"
                                                Command="{Command SeekForward}"/>
                  <Button x:Name="SkipForwardButton" Style="{ThemeResource SkipForwardButtonStyle}" Margin="0" IsVisible="{Binding CanSkipForward}"
                                                Command="{Command Next}"/>
                  <Image Source="PlayerControl\DIVIDER.PNG" Height="35" Stretch="Uniform" VerticalAlignment="Center" Margin="3,0,3,0"/>
                  <Button x:Name="Audio" Style="{ThemeResource AudioActiveButtonStyle}" Margin="0"
                                                IsVisible="{Binding IsAudio}" Command="{Command AudioButtonPressed}"/>
                  <Button x:Name="VolumeDownButton" Style="{ThemeResource VolumeDownButtonStyle}" Margin="0"/>
                  <Button x:Name="VolumeUpButton" Style="{ThemeResource VolumeUpButtonStyle}" Margin="0"/>
                </StackPanel>
              </StackPanel>
            </Grid>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <Style x:Key="PlayerControlsProgressBarStyle" TargetType="{x:Type ProgressBar}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ProgressBar}">
          <Grid x:Name="ProgressBarGrid" HorizontalAlignment="Stretch"
                UIElement.MouseClick="{CommandStencil RelativeSource={RelativeSource TemplatedParent}, Path=OnMouseClick}">
            <Grid.ColumnDefinitions>
              <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
              <RowDefinition Height="*"/>
            </Grid.RowDefinitions>

            <Image Source="PlayerControl\seekbarshadow.png" Height="35" Stretch="Fill" VerticalAlignment="Center" Margin="-15,-1,-15,0">
              <Image.IsVisible>
                <MultiBinding Converter="{StaticResource InvertedMediaItemAspectToBoolConverter}">
                  <Binding Path="MediaItem"/>
                  <Binding Source="{x:Static aspect:AudioAspect.ASPECT_ID}" />
                </MultiBinding>
              </Image.IsVisible>
            </Image>

            <Image Source="PlayerControl\seekbardummy.png" Height="35" Stretch="Fill" VerticalAlignment="Center" Margin="-15,-1,-15,0">
              <Image.IsVisible>
                <MultiBinding Converter="{StaticResource MediaItemAspectToBoolConverter}">
                  <Binding Path="MediaItem"/>
                  <Binding Source="{x:Static aspect:AudioAspect.ASPECT_ID}" />
                </MultiBinding>
              </Image.IsVisible>
            </Image>

            <Rectangle HorizontalAlignment="Stretch" VerticalAlignment="Center"
                       RadiusX="3.5" RadiusY="3.5" Height="10" Fill="{ThemeResource ProgressBarBackgroundColor}" Opacity="0.8"/>
            
            <StackPanel Orientation="Horizontal" Margin="-27,0,-27,0">
              <StackPanel Width="{TemplateBinding PartIndicatorWidth}"/>
              <Image Source="PlayerControl\Current.Position.Shadow.png" Width="55" Height="55" Stretch="Fill" Margin="-10"
                     VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </StackPanel>
            <Grid x:Name="ProgressBarIndicator" HorizontalAlignment="Left" VerticalAlignment="Center">
              <Grid VerticalAlignment="Center" HorizontalAlignment="Right" Margin="-100,-85,-95,0" Height="114">
                <Image Source="PlayerControl\Time.Indicator.png" Height="114" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" Opacity="0.9"/>
                <Label x:Name="CurrentTimeLabel" Grid.Column="0" Grid.Row="0" Content="{Binding CurrentTime}" Opacity="0.9"
                       HorizontalAlignment="Center" VerticalAlignment="Center" Margin="0,0,0,24" FontFamily="SegoeUIBold"
                       Color="Black" FontSize="{ThemeResource SmallFontSize}"/>
              </Grid>
              <Rectangle Width="{TemplateBinding PartIndicatorWidth}" HorizontalAlignment="Left" VerticalAlignment="Center"
                         RadiusX="3.5" RadiusY="3.5" Height="10" Fill="{ThemeResource ProgressBarFillColor}" Margin="0,0,0,0"/>
            </Grid>
            <StackPanel Orientation="Horizontal" Margin="-21,0,-21,0">
              <StackPanel Width="{TemplateBinding PartIndicatorWidth}"/>
                <Image Source="PlayerControl\Current.Position.png" Width="40" Height="40" Stretch="Fill"
                       VerticalAlignment="Center" HorizontalAlignment="Center"/>
            </StackPanel>
          </Grid>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

  <!-- ****************************** Notification area ********************************** -->

  <Model x:Key="NotificationsModel" Id="843F373D-0B4B-47ba-8DD1-0D18F00FAAD3"/>

  <Style x:Key="NotificationControlStyle" TargetType="{x:Type ContentPresenter}">
    <Setter Property="Template">
      <Setter.Value>
        <ControlTemplate TargetType="{x:Type ContentPresenter}">
          <StackPanel Context="{StaticResource NotificationsModel}" IsVisible="{Binding IsNotificationsHintVisible}" Orientation="Horizontal">
            <Button Style="{ThemeResource NavigationButtonStyle}" Command="{Command GoToNotification}">
              <Button.Triggers>
                <Trigger Property="HasFocus" Value="True">
                  <Setter TargetName="icon" Property="Opacity" Value="1"/>
                </Trigger>
              </Button.Triggers>
            </Button>
          </StackPanel>
        </ControlTemplate>
      </Setter.Value>
    </Setter>
  </Style>

</ResourceDictionary>
