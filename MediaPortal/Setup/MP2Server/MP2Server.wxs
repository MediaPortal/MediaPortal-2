<?xml version="1.0" encoding="UTF-8"?>
<Wix xmlns="http://schemas.microsoft.com/wix/2006/wi"
     xmlns:util="http://schemas.microsoft.com/wix/UtilExtension">

  <?include VersionInfo.wxi?>
  
	<Product Id="*" 
           Name="MP2Server" 
           Language="!(loc.ProductLanguage)" 
           Version="$(var.Version)" 
           Manufacturer="$(var.Manufacturer)" 
           UpgradeCode="c477b7e6-c49b-49df-83c3-89a710f166b7">
		
    <Package 
            InstallerVersion="405" 
            Description="MediaPortal 2 Server Installer"
            Compressed="yes" 
            SummaryCodepage="!(loc.SummaryCodepage)"
            InstallScope="perMachine" />

		<MediaTemplate EmbedCab="yes" />

	  <!-- Directories -->
	  <Directory Id="TARGETDIR" Name="SourceDir">

	    <Directory Id="ProgramFilesFolder">
	      <Directory Id="TeamMediaPortal.Folder" Name="Team MediaPortal">
	        <!-- An empty Component needed to avoid a bug in Windows Installer -->
	        <Component Id="EmptyComponent_WindowsInstallerBugWorkaround" KeyPath="yes" Guid="4D1E4904-0FB1-44B3-82E1-CFE5F01E6AC3"/>
	      </Directory>

	    </Directory>

	    <Directory Id="CommonAppDataFolder">
	      <Directory Id="TeamMediaPortal.Data.Folder" Name="Team MediaPortal">
	        <Component Id="TeamMediaPortal.Data.Folder" Guid="F681F96B-A41D-435B-A091-C9BF42179FB5">
	          <CreateFolder>
	            <util:PermissionEx User="Users" GenericAll="yes"/>
	          </CreateFolder>
	        </Component>
	      </Directory>
	    </Directory>

	    <Directory Id="ProgramMenuFolder">
	      <Directory Id="TeamMediaPortal.StartMenu" Name="Team MediaPortal">
	        <Directory Id="MP2.StartMenu" Name="MediaPortal 2" />
	      </Directory>
	    </Directory>

	    <Directory Id="DesktopFolder" />
	  </Directory>


	  <!-- Shortcuts -->
	  <DirectoryRef Id="TeamMediaPortal.StartMenu">
	    <Component Id="TeamMediaPortal.StartMenu" Guid="EBCECF2A-3330-11E1-BB19-75D94724019B">
	      <RegistryValue Root="HKCU"
	                     Key="Software\Team MediaPortal\MediaPortal 2\Install"
	                     Name="TeamMediaPortal.StartMenu"
	                     Type="string"
	                     Value="1"
	                     KeyPath="yes" />
	      <RemoveFolder Id="Remove.TeamMediaPortal.StartMenu"
	                    On="uninstall"/>
	    </Component>
	  </DirectoryRef>
	  <DirectoryRef Id="MP2.StartMenu">
	    <Component Id="MP2.StartMenu" Guid="DB88BD5D-BD35-402E-ABD5-A8EBB1F0FA42">
	      <Shortcut Id="MP2Uninstall.StartMenu.Shortcut"
	                Name="!(loc.SC_Uninstall)"
	                Description="!(loc.SC_Uninstall_Desc)"
	                Target="[System64Folder]msiexec.exe"
	                Arguments="/x [ProductCode]" />
	      <!--
        Fix ICE 38 by adding a dummy registry key that is the key for this shortcut.
        http://msdn.microsoft.com/library/en-us/msi/setup/ice38.asp
        -->
	      <!-- todo: why is $(var.RegKeyInstall) not working here? -->
	      <RegistryValue Root="HKCU"
	                     Key="Software\Team MediaPortal\MediaPortal 2\Install"
	                     Name="MP2.StartMenu"
	                     Type="string"
	                     Value="1"
	                     KeyPath="yes" />
	      <RemoveFolder Id="Remove.MP2.StartMenu"
	                    On="uninstall" />
	    </Component>
	  </DirectoryRef>

	  <!-- Features -->
	  <Feature Id="MP2Server"
	           Level="1"
	           AllowAdvertise="no"
	           Display="expand"
	           Title="!(loc.F_MediaPortal)"
	           Description="!(loc.F_MediaPortal_Desc)">
	    <FeatureRef Id="Server" />

	    <ComponentRef Id="EmptyComponent_WindowsInstallerBugWorkaround" />
	    <ComponentRef Id="TeamMediaPortal.Data.Folder" />
	    <ComponentRef Id="TeamMediaPortal.StartMenu" />
	    <ComponentRef Id="MP2.StartMenu" />
	  </Feature>
    
	  <InstallUISequence>

	    <!-- <Custom Action="ReadCustomPathsFromExistingPathsFile" Before="CostFinalize">NOT Installed</Custom> -->

	  </InstallUISequence>
	  <!--
    <InstallExecuteSequence>

      <Custom Action="StopProcesses" Before="ReadCustomPathsFromExistingPathsFile"/>

     
      <Custom Action="ReadCustomPathsFromExistingPathsFile" Before="PrepareXmlPathVariables">(NOT Installed) AND (INSTALLTYPE_CUSTOM = 0)</Custom>

      <Custom Action="PrepareXmlPathVariables" Before="FileCost">NOT Installed</Custom>
      <Custom Action="AttachClientToServer" After="InstallFinalize">NOT Installed</Custom>

      <RemoveExistingProducts After="InstallInitialize" />
      <InstallExecute After="RemoveExistingProducts" />
    </InstallExecuteSequence>     -->

    <MajorUpgrade DowngradeErrorMessage="A newer version of [ProductName] is already installed." AllowSameVersionUpgrades="yes" Schedule="afterInstallInitialize" />

    <!-- The old MP2 Setup had a single MSI with this upgrade code, we have since split the MSI into separate MSIs with different upgrade codes.
         We want to make sure the old MSI is uninstalled before any of our new MSIs are installed otherwise it is uninstalled at the end of the
         installation when the old Bootstrapper bundle is removed, removing most of the installation files with it and breaking the new install.
         We could have given the MP2Common MSI the same upgrade code, which would have automatically uninstalled the old single MSI, but then
         successful installation would have been dependent on the MP2Common MSI always being installed first, in addition the old MSI upgrade code
         was the same as the bundle upgrade code, which seemed to work OK but isn't recommended so we should move to new independent upgrade codes.
         This tag is present and identical in each of the new MSIs to ensure the order of the new MSI installation doesn't matter and the old
         MSI is always removed before any new files are installed. -->
    <Upgrade Id="9743129C-FED3-404A-A66E-3C1557BE0178">
      <UpgradeVersion Property="OLDMP2SETUP" IncludeMinimum="yes" Minimum="0.0.0" />
    </Upgrade>
    
	</Product>
</Wix>
